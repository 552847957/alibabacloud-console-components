{"version":3,"sources":["webpack:///../packages/component/src/components/field/demo/demo4.js"],"names":["Demo4","myField","Field","useField","init","getError","setError","setErrors","SWrapper","rules","required","pattern","message","style","color","onClick","input","demoMeta","zhName","zhDesc","styled","div","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"6FAAA,+IAkEeA,UA9DD,WACZ,IAAMC,EAAUC,QAAMC,WAEdC,EAAwCH,EAAxCG,KAAMC,EAAkCJ,EAAlCI,SAAUC,EAAwBL,EAAxBK,SAAUC,EAAcN,EAAdM,UAClC,OACE,kBAACC,EAAD,KACE,kBAAC,QACKJ,EAAK,QAAS,CAChBK,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,QACTC,QAAS,qBAKjB,6BACA,0BAAMC,MAAO,CAAEC,MAAO,QAAUT,EAAS,UAEzC,6BACA,kBAAC,SAAD,CACEU,QAAS,WACPT,EAAS,QAAS,iBAFtB,YAQA,kBAAC,SAAD,CACES,QAAS,WACPR,EAAU,CAAES,MAAO,kBAFvB,aAQA,kBAAC,SAAD,CACED,QAAS,WACPR,EAAU,CAAES,MAAO,OAFvB,SAOA,6BACA,6BACA,kBAAC,QAAUZ,EAAK,WAChB,6BACA,0BAAMS,MAAO,CAAEC,MAAO,QAAUT,EAAS,WACzC,6BAEA,kBAAC,SAAD,CACEU,QAAS,WACPT,EAAS,SAAU,wCAFvB,cAaC,IAAMW,EAAW,CACtBC,OAAO,QACPC,OAAO,iBAGHX,EAAWY,UAAOC,IAAV,sEAAGD,CAAH,kCAMCE,EAAgBC","file":"102-4ee7cfe5afab8fbaea5d.js","sourcesContent":["import React from 'react'\nimport { Input, Button, Field } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst Demo4 = () => {\n  const myField = Field.useField()\n\n  const { init, getError, setError, setErrors } = myField\n  return (\n    <SWrapper>\n      <Input\n        {...init('input', {\n          rules: [\n            {\n              required: true,\n              pattern: /hello/,\n              message: 'must be hello',\n            },\n          ],\n        })}\n      />\n      <br />\n      <span style={{ color: 'red' }}>{getError('input')}</span>\n\n      <br />\n      <Button\n        onClick={() => {\n          setError('input', 'set error 1')\n        }}\n      >\n        setError\n      </Button>\n\n      <Button\n        onClick={() => {\n          setErrors({ input: 'set error 2' })\n        }}\n      >\n        setErrors\n      </Button>\n\n      <Button\n        onClick={() => {\n          setErrors({ input: '' })\n        }}\n      >\n        clear\n      </Button>\n      <br />\n      <br />\n      <Input {...init('input2')} />\n      <br />\n      <span style={{ color: 'red' }}>{getError('input2')}</span>\n      <br />\n\n      <Button\n        onClick={() => {\n          setError('input2', 'errors will be removed by onChange')\n        }}\n      >\n        setError\n      </Button>\n    </SWrapper>\n  )\n}\n\nexport default Demo4\n\nexport const demoMeta = {\n  zhName: `自定义错误`,\n  zhDesc: `自己控制组件的errors`,\n}\n\nconst SWrapper = styled.div`\n  .next-btn {\n    margin-right: 8px;\n  }\n`\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}