{"version":3,"sources":["webpack:///../packages/component/src/components/range/demo/demo5.js"],"names":["Row","Grid","Col","Demo5","props","context","state","valueInt","valueDec","valueIcon","preIconClass","afterIconClass","onChangeInt","value","console","log","this","setState","Object","assign","onChangeDec","onIconRangeProcess","render","style","width","margin","span","marginTop","min","max","step","onChange","bind","className","type","React","Component","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"yPAIOA,EAAYC,OAAZD,IAAKE,EAAOD,OAAPC,IAESC,E,oBACnB,WAAYC,EAAOC,GAAU,IAAD,SAC1B,cAAMD,EAAOC,IAAb,MACKC,MAAQ,CACXC,SAAU,EACVC,SAAU,IACVC,UAAW,EACXC,aAAc,GACdC,eAAgB,IAPQ,E,kHAW5BC,YAAA,SAAYC,GACVC,QAAQC,IAAIF,GACZG,KAAKC,SAASC,OAAOC,OAAO,GAAIH,KAAKV,MAAO,CAC1CC,SAAUM,M,EAIdO,YAAA,SAAYP,GACVG,KAAKC,SAASC,OAAOC,OAAO,GAAIH,KAAKV,MAAO,CAC1CE,SAAUK,M,EAIdQ,mBAAA,SAAmBR,GAEjBG,KAAKC,SAASC,OAAOC,OAAO,GAAIH,KAAKV,MAAO,CAC1CG,UAAWI,EACXH,aAAcG,EAHJ,GAGkB,mBAAqB,GACjDF,eAAgBE,GAJN,GAIqB,mBAAqB,O,EAIxDS,OAAA,WACE,OACE,yBAAKC,MAAO,CAACC,MAAO,QAASC,OAAQ,SACnC,sDACA,kBAACzB,EAAD,KACE,kBAACE,EAAD,CAAKwB,KAAK,KAAKH,MAAO,CAACI,UAAW,SAChC,kBAAC,QAAD,CAAOd,MAAOG,KAAKV,MAAMC,SAAUqB,IAAK,EAAGC,IAAK,GAAIC,KAAM,EACxDC,SAAUf,KAAKJ,YAAYoB,KAAKhB,SAEpC,kBAACd,EAAD,CAAKwB,KAAK,MACR,kBAAC,eAAD,CAAcb,MAAOG,KAAKV,MAAMC,SAAUqB,IAAK,EAAGC,IAAK,KAAMC,KAAM,EACjEC,SAAUf,KAAKJ,YAAYoB,KAAKhB,UAGtC,6BACA,kBAAChB,EAAD,KACE,kBAACE,EAAD,CAAKwB,KAAK,KAAKH,MAAO,CAACI,UAAW,SAChC,kBAAC,QAAD,CAAOd,MAAOG,KAAKV,MAAME,SAAUoB,IAAK,EAAGC,IAAK,EAAGC,KAAM,IACvDC,SAAUf,KAAKI,YAAYY,KAAKhB,SAEpC,kBAACd,EAAD,CAAKwB,KAAK,MACR,kBAAC,eAAD,CAAcb,MAAOG,KAAKV,MAAME,SAAUoB,IAAK,EAAGC,IAAK,EAAGC,KAAM,IAC9DC,SAAUf,KAAKI,YAAYY,KAAKhB,UAGtC,8CAEA,yBAAKiB,UAAU,eACb,kBAAC,OAAD,CAAMA,UAAS,UAAYjB,KAAKV,MAAMI,aAAgBwB,KAAK,QAC3D,kBAAC,QAAD,CAAON,IAAK,EAAGC,IAAK,IAAKE,SAAUf,KAAKK,mBAAmBW,KAAKhB,MAC9DH,MAAOG,KAAKV,MAAMG,YACpB,kBAAC,OAAD,CAAMwB,UAAS,UAAYjB,KAAKV,MAAMK,eAAkBuB,KAAK,a,GAjEpCC,IAAMC,WAuE1BC,EAAgBC","file":"250-1820c91d9438a017cd6a.js","sourcesContent":["import React from 'react'\nimport { Range, NumberPicker, Grid, Icon } from '@alicloud/console-components'\nimport'./demo5.less'\n\nconst {Row, Col} = Grid\n\nexport default class Demo5 extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      valueInt: 3,\n      valueDec: 0.05,\n      valueIcon: 1,\n      preIconClass: '',\n      afterIconClass: ''\n    }\n  }\n\n  onChangeInt(value) {\n    console.log(value);\n    this.setState(Object.assign({}, this.state, {\n      valueInt: value\n    }))\n  }\n\n  onChangeDec(value) {\n    this.setState(Object.assign({}, this.state, {\n      valueDec: value\n    }))\n  }\n\n  onIconRangeProcess(value) {\n    const mid = 50;\n    this.setState(Object.assign({}, this.state, {\n      valueIcon: value,\n      preIconClass: value < mid ? 'myicon-highlight' : '',\n      afterIconClass: value >= mid ? 'myicon-highlight' : ''\n    }))\n  }\n\n  render() {\n    return (\n      <div style={{width: '400px', margin: '50px'}}>\n        <h2>Used with numberPicker</h2>\n        <Row>\n          <Col span=\"12\" style={{marginTop: '10px'}}>\n            <Range value={this.state.valueInt} min={0} max={20} step={1}\n              onChange={this.onChangeInt.bind(this)} />\n          </Col>\n          <Col span=\"12\">\n            <NumberPicker value={this.state.valueInt} min={0} max={1024} step={1}\n              onChange={this.onChangeInt.bind(this)} />\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span=\"12\" style={{marginTop: '10px'}}>\n            <Range value={this.state.valueDec} min={0} max={1} step={0.01}\n              onChange={this.onChangeDec.bind(this)} />\n          </Col>\n          <Col span=\"12\">\n            <NumberPicker value={this.state.valueDec} min={0} max={1} step={0.01}\n              onChange={this.onChangeDec.bind(this)} />\n          </Col>\n        </Row>\n        <h2>Used with Icon</h2>\n\n        <div className=\"iconWrapper\">\n          <Icon className={`myicon ${this.state.preIconClass}`} type=\"cry\" />\n          <Range min={1} max={100} onChange={this.onIconRangeProcess.bind(this)}\n            value={this.state.valueIcon} />\n          <Icon className={`myicon ${this.state.afterIconClass}`} type=\"smile\" />\n        </div>\n      </div>\n    )\n  }\n};\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}