{"version":3,"sources":["webpack:///../packages/component/src/components/form/demo/demo18.js"],"names":["FormItem","Form","Item","RadioGroup","Radio","Group","formItemLayout","labelCol","span","wrapperCol","Demo18","label","hasFeedback","validator","rule","value","Promise","resolve","reject","setTimeout","Error","help","placeholder","name","errors","state","required","requiredTrigger","format","requiredMessage","htmlType","TextArea","maxLength","hasLimitHint","offset","Submit","validate","type","onClick","v","e","console","log","style","marginRight","Reset","demoMeta","zhName","zhDesc","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"sPAIMA,EAAWC,OAAKC,KAChBC,EAAaC,QAAMC,MAEnBC,EAAiB,CACrBC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KA4FKE,UAxFA,WAiBb,OACE,kBAAC,OAASJ,EACR,kBAACN,EAAD,CAAUW,MAAM,WAAWC,aAAW,EAACC,UAlBxB,SAACC,EAAMC,GACxB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACtBH,EAGHI,YAAW,WACK,UAAVJ,EACFG,EAAO,CAAC,IAAIE,MAAM,4CAElBH,MAED,KARHA,QAe4DI,KAAK,IACjE,kBAAC,QAAD,CAAOC,YAAY,cAAcC,KAAK,gBACtC,kBAAC,OAAKH,MAAN,CAAYG,KAAK,gBACd,SAACC,EAAQC,GACR,MAAc,YAAVA,EACK,aAEFD,MAIb,kBAACxB,EAAD,CACEW,MAAM,SACNC,aAAW,EACXc,UAAQ,EACRC,gBAAgB,SAChBC,OAAO,SAEP,kBAAC,QAAD,CAAON,YAAY,mCAAmCC,KAAK,cAG7D,kBAACvB,EAAD,CACEW,MAAM,YACNC,aAAW,EACXc,UAAQ,EACRG,gBAAgB,yBAEhB,kBAAC,QAAD,CAAOC,SAAS,WAAWP,KAAK,eAGlC,kBAACvB,EAAD,CACEW,MAAM,UACNC,aAAW,EACXc,UAAQ,EACRG,gBAAgB,6BAEhB,kBAAC1B,EAAD,CAAYoB,KAAK,UACf,kBAAC,QAAD,CAAOR,MAAM,QAAb,QACA,kBAAC,QAAD,CAAOA,MAAM,UAAb,YAIJ,kBAACf,EAAD,CACEW,MAAM,WACNe,UAAQ,EACRG,gBAAgB,2CAEhB,kBAAC,QAAME,SAAP,CACEC,UAAW,GACXC,cAAY,EACZX,YAAY,oBACZC,KAAK,iBAIT,kBAACvB,EAAD,CAAUS,WAAY,CAAEyB,OAAQ,IAC9B,kBAAC,OAAKC,OAAN,CACEC,UAAQ,EACRC,KAAK,UACLC,QAAS,SAACC,EAAGC,GAAJ,OAAUC,QAAQC,IAAIH,EAAGC,IAClCG,MAAO,CAAEC,YAAa,KAJxB,UAQA,kBAAC,OAAKC,MAAN,iBAOD,IAAMC,EAAW,CACtBC,OAAO,KACPC,OAAO,cAGMC,EAAgBC","file":"153-6f4d023ade5ea8a15ca7.js","sourcesContent":["import React from 'react'\n\nimport { Form, Input, Radio } from '@alicloud/console-components'\n\nconst FormItem = Form.Item\nconst RadioGroup = Radio.Group\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n}\n\nconst Demo18 = () => {\n  const userExists = (rule, value) => {\n    return new Promise((resolve, reject) => {\n      if (!value) {\n        resolve()\n      } else {\n        setTimeout(() => {\n          if (value === 'frank') {\n            reject([new Error('Sorry, this username is already exist.')])\n          } else {\n            resolve()\n          }\n        }, 500)\n      }\n    })\n  }\n\n  return (\n    <Form {...formItemLayout}>\n      <FormItem label=\"Account:\" hasFeedback validator={userExists} help=\"\">\n        <Input placeholder=\"Input frank\" name=\"valUsername\" />\n        <Form.Error name=\"valUsername\">\n          {(errors, state) => {\n            if (state === 'loading') {\n              return 'loading...'\n            }\n            return errors\n          }}\n        </Form.Error>\n      </FormItem>\n      <FormItem\n        label=\"Email:\"\n        hasFeedback\n        required\n        requiredTrigger=\"onBlur\"\n        format=\"email\"\n      >\n        <Input placeholder=\"Both trigget onBlur and onChange\" name=\"valEmail\" />\n      </FormItem>\n\n      <FormItem\n        label=\"Password:\"\n        hasFeedback\n        required\n        requiredMessage=\"Please enter password\"\n      >\n        <Input htmlType=\"password\" name=\"valPasswd\" />\n      </FormItem>\n\n      <FormItem\n        label=\"Gender:\"\n        hasFeedback\n        required\n        requiredMessage=\"Please select your gender\"\n      >\n        <RadioGroup name=\"valSex\">\n          <Radio value=\"male\">Male</Radio>\n          <Radio value=\"female\">Female</Radio>\n        </RadioGroup>\n      </FormItem>\n\n      <FormItem\n        label=\"Remarks:\"\n        required\n        requiredMessage=\"Really do not intend to write anything?\"\n      >\n        <Input.TextArea\n          maxLength={20}\n          hasLimitHint\n          placeholder=\"Everything is ok!\"\n          name=\"valTextarea\"\n        />\n      </FormItem>\n\n      <FormItem wrapperCol={{ offset: 6 }}>\n        <Form.Submit\n          validate\n          type=\"primary\"\n          onClick={(v, e) => console.log(v, e)}\n          style={{ marginRight: 10 }}\n        >\n          Submit\n        </Form.Submit>\n        <Form.Reset>Reset</Form.Reset>\n      </FormItem>\n    </Form>\n  )\n}\nexport default Demo18\n\nexport const demoMeta = {\n  zhName: `校验`,\n  zhDesc: `基本的表单校验例子。`,\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}