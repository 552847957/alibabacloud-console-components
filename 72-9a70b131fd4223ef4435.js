(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{"PV/k":function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return C})),t.d(e,"_demoSrcFiles",(function(){return f}));var o=t("mXGw"),a=t.n(o),l=t("BgHK");t("yWGq");function c(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}function s(n,e){n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.__proto__=e}var r=l.ConfigProvider.config,i=l.ConfigProvider.getContextProps,p=l.Select.Option,d={"zh-cn":{ClickMe:{clickMe:"点我！"},Toast:{close:"关闭"}},"en-us":{ClickMe:{clickMe:"click me!"},Toast:{close:"close"}}},u=function(n){function e(){return n.apply(this,arguments)||this}return s(e,n),e.prototype.render=function(){var n=this.props,e=n.locale,t=n.onClick;return a.a.createElement(l.Button,{onClick:t},e.clickMe)},e}(a.a.Component);u.defaultProps={locale:d["zh-cn"].ClickMe,onClick:function(){}};var h=function(n){function e(e){var t;return(t=n.call(this,e)||this).state={visible:!1},t.handleClose=t.handleClose.bind(c(t)),t}s(e,n);var t=e.prototype;return t.handleClose=function(){this.setState({visible:!1}),this.props.afterClose()},t.render=function(){return a.a.createElement("div",{className:"toast"},a.a.createElement(l.Button,{type:"primary",onClick:this.handleClose},this.props.locale.close))},e}(a.a.Component);h.defaultProps={locale:d["zh-cn"].Toast,afterClose:function(){}},h.create=function(n){void 0===n&&(n={});var e=document.createElement("div");document.body.appendChild(e);var t=i(n,"Toast").locale;ReactDOM.render(a.a.createElement(h,{afterClose:function(){ReactDOM.unmountComponentAtNode(e),ocument.body.removeChild(e)},locale:t}),e)};var m=r(u),g=r(h),C=function(n){function e(e){var t;return(t=n.call(this,e)||this).state={language:"zh-cn"},t.handleClick=t.handleClick.bind(c(t)),t.handleChangeLanguage=t.handleChangeLanguage.bind(c(t)),t}s(e,n);var t=e.prototype;return t.handleClick=function(){g.create()},t.handleChangeLanguage=function(n){this.setState({language:n})},t.render=function(){var n=this.state.language;return a.a.createElement(l.ConfigProvider,{locale:d[n]},a.a.createElement("div",null,a.a.createElement("div",{className:"select-language"},a.a.createElement(l.Select,{value:n,onChange:this.handleChangeLanguage},a.a.createElement(p,{value:"zh-cn"},"zh-cn"),a.a.createElement(p,{value:"en-us"},"en-us"))),a.a.createElement(m,{onClick:this.handleClick})))},e}(a.a.Component),f={"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo3";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo3.js":"import React from 'react'\nimport { ConfigProvider, Button, Select } from '@alicloud/console-components'\nimport PropTypes from 'prop-types'\nimport'./demo3.less'\n\nconst { config, getContextProps } = ConfigProvider\nconst { Option } = Select\n\nconst locales = {\n  'zh-cn': {\n    ClickMe: {\n      clickMe: '点我！'\n    },\n    Toast: {\n      close: '关闭'\n    }\n  },\n  'en-us': {\n    ClickMe: {\n      clickMe: 'click me!'\n    },\n    Toast: {\n      close: 'close'\n    }\n  }\n}\n\nclass ClickMe extends React.Component {\n  static propTypes = {\n    locale: PropTypes.object,\n    onClick: PropTypes.func\n    }\n  static defaultProps = {\n    locale: locales['zh-cn'].ClickMe,\n    onClick: () => {}\n  }\n\n  render() {\n    const { locale, onClick } = this.props;\n    return (\n      <Button onClick={onClick}>{locale.clickMe}</Button>\n    )\n  }\n}\n\nclass Toast extends React.Component {\n  static propTypes = {\n    locale: PropTypes.object,\n    afterClose: PropTypes.func\n  }\n\n  static defaultProps = {\n    locale: locales['zh-cn'].Toast,\n    afterClose: () => {}\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    }\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  handleClose() {\n    this.setState({\n      visible: false\n    })\n    this.props.afterClose();\n  }\n\n  render() {\n    return (\n      <div className=\"toast\">\n        <Button type=\"primary\" onClick={this.handleClose}>\n          {this.props.locale.close}\n        </Button>\n      </div>\n    )\n  }\n}\n\nToast.create = (props = {}) => {\n  const mountNode = document.createElement('div')\n  document.body.appendChild(mountNode)\n\n  const closeChain = () => {\n    ReactDOM.unmountComponentAtNode(mountNode)\n    ocument.body.removeChild(mountNode)\n  }\n\n  const newLocale = getContextProps(props, 'Toast').locale\n  ReactDOM.render(<Toast afterClose={closeChain} locale={newLocale} />, mountNode)\n}\n\nconst NewClickMe = config(ClickMe)\nconst NewToast = config(Toast)\n\nexport default class Demo2 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      language: 'zh-cn'\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChangeLanguage = this.handleChangeLanguage.bind(this)\n  }\n\n  handleClick() {\n    NewToast.create()\n  }\n\n  handleChangeLanguage(language) {\n    this.setState({\n      language\n    })\n  }\n\n  render() {\n    const { language } = this.state\n\n    return (\n      <ConfigProvider locale={locales[language]}>\n        <div>\n          <div className=\"select-language\">\n            <Select value={language} onChange={this.handleChangeLanguage}>\n              <Option value=\"zh-cn\">zh-cn</Option>\n              <Option value=\"en-us\">en-us</Option>\n            </Select>\n          </div>\n          <NewClickMe onClick={this.handleClick} />\n        </div>\n      </ConfigProvider>\n    )\n  }\n}\n","src/demo/demo3.less":".toast {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    margin: auto;\n    width: 200px;\n    height: 100px;\n    line-height: 100px;\n    text-align: center;\n    background: white;\n    box-shadow: 3px 3px 5px 0 rgba(0, 0, 0, .32);\n}\n\n.toast .next-btn {\n    margin: auto;\n}\n\n.select-language {\n    margin-bottom: 20px;\n}","demoMeta.json":'{"entryPath":"src/demo/demo3.js"}'}}}]);
//# sourceMappingURL=72-9a70b131fd4223ef4435.js.map