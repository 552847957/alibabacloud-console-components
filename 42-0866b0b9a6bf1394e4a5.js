(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{T8LB:function(n,e,t){"use strict";t.r(e);var o=t("mXGw"),l=t.n(o),s=t("BgHK"),c=t("5XDK"),i=t("h0UN"),a=s.Select.Option,r=function(n,e){var t=Object(o.useState)(e),c=t[0],r=t[1];return[c,r,l.a.createElement(i.a,{title:n},l.a.createElement(s.Select,{value:c,onChange:function(n){r("undefined"===n?void 0:n)},placeholder:"undefined"},l.a.createElement(a,{value:"undefined"},"undefined"),l.a.createElement(a,{value:!0},"true"),l.a.createElement(a,{value:!1},"false")))]};t.d(e,"_demoSrcFiles",(function(){return u}));e.default=function(){var n=Object(o.useState)(!1),e=n[0],t=n[1],a=r("onClose",!0),u=a[0],d=a[2],p=function(n,e){var t=Object(o.useState)(e),c=t[0],a=t[1];return[c,a,l.a.createElement(i.a,{title:n},l.a.createElement(i.a.Content,null,l.a.createElement(s.Input,{value:c,onChange:function(n){a(n)}}),l.a.createElement(s.Button,{onClick:function(){a(void 0)}},"重置为undefined")))]}("title","title"),m=p[0],f=p[2],S=function(n,e){var t=Object(o.useState)(e),c=t[0],a=t[1];return[c,a,l.a.createElement(i.a,{title:n},l.a.createElement(i.a.Content,null,l.a.createElement(s.Input.TextArea,{value:c,onChange:function(n){a(n)}}),l.a.createElement(s.Button,{onClick:function(){a(void 0)}},"重置为undefined")))]}("content","content"),x=S[0],v=S[2],C=r("onCancel",!0),g=C[0],I=C[2],h=r("onOk",!0),k=h[0],O=h[2],T=Object(o.useState)(!1),B=T[0],E=T[1];return l.a.createElement(l.a.Fragment,null,l.a.createElement(s.Button,{onClick:function(){t(!0)}},"open"),f,v,d,I,O,l.a.createElement(c.c,{title:m,isShowing:e,onMaskClick:function(){t(!1)},onClose:u?function(){t(!1)}:void 0,onCancel:g?function(){t(!1)}:void 0,onOk:k?function(){E(!0),setTimeout((function(){E(!1)}),2e3)}:void 0,isProcessing:B},x))};var u={"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "template": "parcel"\n}',"src/index.tsx":"import * as React from 'react'\nimport { render } from 'react-dom'\nimport '@alicloud/console-components/dist/wind.css'\nimport App from './demo/index'\n\nconst rootElement = document.getElementById('app')\nrender(<App />, rootElement)\n","package.json":'{\n  "name": "console-components-demo",\n  "version": "1.0.0",\n  "description": "",\n  "keywords": [],\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "@alicloud/console-components-fake-browser": "latest",\n    "@alicloud/console-components": "latest",\n    "dva": "^2.4.1",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react": "16.8.4",\n    "react-dom": "16.8.4",\n    "react-scripts": "2.1.3",\n    "@alicloud/console-components-actions": "latest",\n    "@alicloud/console-components-app-layout": "latest",\n    "@alicloud/console-components-confirm": "latest",\n    "@alicloud/console-components-console-menu": "latest",\n    "@alicloud/console-components-data-fields": "latest",\n    "@alicloud/console-components-info": "latest",\n    "@alicloud/console-components-page": "latest",\n    "@alicloud/console-components-slide-panel": "latest",\n    "@alicloud/console-components-status-indicator": "latest",\n    "@alicloud/console-components-table": "latest",\n    "@alicloud/console-components-truncate": "latest",\n    "@alicloud/console-components-select-list": "latest",\n    "@alicloud/console-components-intl": "latest",\n    "@alicloud/console-components-intl-core": "latest",\n    "@alicloud/console-components-intl-context": "latest",\n    "@alicloud/console-components-announcement": "latest"\n  },\n  "devDependencies": {\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2",\n    "@types/styled-components": "^4.1.8",\n    "typescript": "^3.7.2"\n  },\n  "browserslist": [\n    ">0.2%",\n    "not dead",\n    "not ie <= 11",\n    "not op_mini all"\n  ]\n}\n',"tsconfig.json":'{\n  "compilerOptions": {\n    "jsx": "react",\n    "moduleResolution": "node",\n    "esModuleInterop": true\n  }\n}\n',"index.html":'<html>\n  <head>\n    <title>Console Components Demo</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.tsx"><\/script>\n  </body>\n</html>\n',"src/demo/index.tsx":"import React, { useState } from 'react'\nimport { Button } from '@alicloud/console-components'\nimport SlidePanel from '@alicloud/console-components-slide-panel'\nimport { useTextSetter, useBoolSetter, useTextAreaSetter } from '../utils'\n\nconst SlidePanelDemo: React.FC<{}> = () => {\n  const [active, setActive] = useState(false)\n  const [onClose, , onCloseSetterUI] = useBoolSetter('onClose', true)\n  const [title, , titleSetterUI] = useTextSetter('title', 'title')\n  const [content, , contentSetterUI] = useTextAreaSetter('content', 'content')\n  const [onCancel, , onCancelSetterUI] = useBoolSetter('onCancel', true)\n  const [onOk, , onOkSetterUI] = useBoolSetter('onOk', true)\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setActive(true)\n        }}\n      >\n        open\n      </Button>\n\n      {titleSetterUI}\n      {contentSetterUI}\n      {onCloseSetterUI}\n      {onCancelSetterUI}\n      {onOkSetterUI}\n\n      <SlidePanel\n        title={title}\n        isShowing={active}\n        onMaskClick={() => {\n          setActive(false)\n        }}\n        onClose={\n          onClose\n            ? () => {\n                setActive(false)\n              }\n            : undefined\n        }\n        onCancel={\n          onCancel\n            ? () => {\n                setActive(false)\n              }\n            : undefined\n        }\n        onOk={\n          onOk\n            ? () => {\n                setIsProcessing(true)\n                setTimeout(() => {\n                  setIsProcessing(false)\n                }, 2000)\n              }\n            : undefined\n        }\n        isProcessing={isProcessing}\n      >\n        {content}\n      </SlidePanel>\n    </>\n  )\n}\n\nexport default SlidePanelDemo\n","src/utils.tsx":"import React, { useState } from 'react'\nimport { Button, Input, Select } from '@alicloud/console-components'\nimport Info from '@alicloud/console-components-info'\n\nconst { Option } = Select\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nexport const useTextSetter = (title: React.ReactNode, init?: string) => {\n  const [text, setText] = useState<string | undefined>(init)\n  return [\n    text,\n    setText,\n    <Info title={title}>\n      <Info.Content>\n        <Input\n          value={text}\n          onChange={v => {\n            setText(v)\n          }}\n        />\n        <Button\n          onClick={() => {\n            setText(undefined)\n          }}\n        >\n          重置为undefined\n        </Button>\n      </Info.Content>\n    </Info>,\n  ]\n}\n\nexport const useTextAreaSetter = (title: React.ReactNode, init?: string) => {\n  const [text, setText] = useState<string | undefined>(init)\n  return [\n    text,\n    setText,\n    <Info title={title}>\n      <Info.Content>\n        <Input.TextArea\n          value={text}\n          onChange={v => {\n            setText(v)\n          }}\n        />\n        <Button\n          onClick={() => {\n            setText(undefined)\n          }}\n        >\n          重置为undefined\n        </Button>\n      </Info.Content>\n    </Info>,\n  ]\n}\n\nexport const useBoolSetter = (title: React.ReactNode, init?: boolean) => {\n  const [flag, setFlag] = useState<boolean | undefined>(init)\n  return [\n    flag,\n    setFlag,\n    <Info title={title}>\n      <Select\n        value={flag}\n        onChange={v => {\n          if (v === 'undefined') setFlag(undefined)\n          else setFlag(v)\n        }}\n        placeholder=\"undefined\"\n      >\n        <Option value=\"undefined\">undefined</Option>\n        <Option value>true</Option>\n        <Option value={false}>false</Option>\n      </Select>\n    </Info>,\n  ]\n}\n","demoMeta.json":'{"entryPath":"src/demo/index.tsx"}'}}}]);
//# sourceMappingURL=42-0866b0b9a6bf1394e4a5.js.map