(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{"60+r":function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return f})),t.d(n,"_demoSrcFiles",(function(){return h}));t("2Tod"),t("ABKx"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO");var r=t("mXGw"),a=t.n(r),o=t("BgHK"),s=t("cnbf"),i=t("/m4v");function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}var c=o.Checkbox.Group;var m=function(e){var n,t;function r(n){var t;return(t=e.call(this,n)||this).field=new o.Field(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(t),{onChange:function(e,n){var r;console.log("onChange",e,n,t.field.getValues()),t.props.dispatch({type:"save_fields",payload:(r={},r[e]=n,r)})}}),t}t=e,(n=r).prototype=Object.create(t.prototype),n.prototype.constructor=n,n.__proto__=t;var s=r.prototype;return s.componentWillReceiveProps=function(e){this.field.setValues(e.formData)},s.setEmail=function(){this.props.dispatch({type:"save_fields",payload:{email:"qq@gmail.com"}})},s.setName=function(){this.props.dispatch({type:"save_fields",payload:{username:"frank"}})},s.setGroup=function(){this.props.dispatch({type:"save_fields",payload:{fruit:["pear"]}})},s.render=function(){return a.a.createElement(o.Form,{field:this.field},a.a.createElement(o.Form.Item,{required:!0,requiredMessage:"required!"},a.a.createElement(o.Input,{name:"email"})),a.a.createElement(o.Form.Item,{required:!0,requiredMessage:"required!"},a.a.createElement(o.Input,{name:"username",defaultValue:this.props.formData.username})),a.a.createElement(o.Form.Item,{required:!0,requiredMessage:"required!"},a.a.createElement(c,{name:"fruit",dataSource:[{label:"Apple",value:"apple"},{label:"Pear",value:"pear"}],defaultValue:this.props.formData.fruit})),a.a.createElement("p",null,"email: ",this.props.email&&this.props.email.value),a.a.createElement(o.Button,{onClick:this.setEmail.bind(this)},"setEmail"),a.a.createElement(o.Button,{onClick:this.setName.bind(this)},"setName"),a.a.createElement(o.Button,{onClick:this.setGroup.bind(this)},"setGroup"))},r}(a.a.Component),d=Object(i.b)((function(e){return{formData:e.formReducer}}))(m),u=Object(s.c)(Object(s.b)({formReducer:function(e,n){switch(void 0===e&&(e={email:"",username:"xiachi",fruit:["apple"]}),n.type){case"save_fields":return function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){p(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},e,{},n.payload);default:return e}}}));n.default=function(){return a.a.createElement(i.a,{store:u},a.a.createElement("div",null,a.a.createElement(d,null)))};var f={zhName:"配合redux使用",zhDesc:"在`redux`中结合 `componentWillReceiveProps` `setValues` 使用， 配合 Field 使用"},h={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo12";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/demo/demo12.js":"import React from 'react'\nimport {\n  Form,\n  Input,\n  Button,\n  Checkbox,\n  Field,\n} from '@alicloud/console-components'\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\n\nconst CheckboxGroup = Checkbox.Group\nfunction formReducer(\n  state = { email: '', username: 'xiachi', fruit: ['apple'] },\n  action\n) {\n  switch (action.type) {\n    case 'save_fields':\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nclass FormDemo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.field = new Field(this, {\n      onChange: (name, value) => {\n        console.log('onChange', name, value, this.field.getValues())\n        this.props.dispatch({\n          type: 'save_fields',\n          payload: {\n            [name]: value,\n          },\n        })\n        /* Method 2, Updates all values.\n                 this.props.dispatch({\n                 type: 'save_fields',\n                 payload: this.field.getValues()\n                 });\n                 */\n      },\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.field.setValues(nextProps.formData)\n  }\n\n  setEmail() {\n    this.props.dispatch({\n      type: 'save_fields',\n      payload: {\n        email: 'qq@gmail.com',\n      },\n    })\n  }\n\n  setName() {\n    this.props.dispatch({\n      type: 'save_fields',\n      payload: {\n        username: 'frank',\n      },\n    })\n  }\n\n  setGroup() {\n    this.props.dispatch({\n      type: 'save_fields',\n      payload: {\n        fruit: ['pear'],\n      },\n    })\n  }\n\n  render() {\n    return (\n      <Form field={this.field}>\n        <Form.Item required requiredMessage=\"required!\">\n          <Input name=\"email\" />\n        </Form.Item>\n        <Form.Item required requiredMessage=\"required!\">\n          <Input name=\"username\" defaultValue={this.props.formData.username} />\n        </Form.Item>\n        <Form.Item required requiredMessage=\"required!\">\n          <CheckboxGroup\n            name=\"fruit\"\n            dataSource={[\n              { label: 'Apple', value: 'apple' },\n              { label: 'Pear', value: 'pear' },\n            ]}\n            defaultValue={this.props.formData.fruit}\n          />\n        </Form.Item>\n        <p>email: {this.props.email && this.props.email.value}</p>\n        <Button onClick={this.setEmail.bind(this)}>setEmail</Button>\n        <Button onClick={this.setName.bind(this)}>setName</Button>\n        <Button onClick={this.setGroup.bind(this)}>setGroup</Button>\n      </Form>\n    )\n  }\n}\n\nconst ReduxFormDemo = connect(state => {\n  return {\n    formData: state.formReducer,\n  }\n})(FormDemo)\n\nconst store = createStore(\n  combineReducers({\n    formReducer,\n  })\n)\n\nconst Demo12 = () => (\n  <Provider store={store}>\n    <div>\n      <ReduxFormDemo />\n    </div>\n  </Provider>\n)\n\nexport default Demo12\n\nexport const demoMeta = {\n  zhName: `配合redux使用`,\n  zhDesc: `在\\`redux\\`中结合 \\`componentWillReceiveProps\\` \\`setValues\\` 使用， 配合 Field 使用`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo12.js"}'}}}]);
//# sourceMappingURL=110-1a490a0096b4cbcc9669.js.map