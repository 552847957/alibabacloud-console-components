{"version":3,"sources":["webpack:///../packages/rc-slide-panel/stories/StackPanel/index.tsx"],"names":["FirstPanel","setIsPanelShowing","panelStackManager","usePanelStackCtx","id","width","title","headerExtra","onOk","onClose","onCancel","onClick","push","SecondPanel","pop","onBackArrowClicked","Stack","useState","isShowing","setIsShowing","top","usePanelStack","onMaskClick","onSlideStarted","console","log","onSlideCancled","onSlideCompleted","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"8FAAA,sGAWMA,EAED,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,kBACAC,EAAoBC,cAC1B,OACE,kBAAC,IAAD,CACEC,GAAG,QACHC,MAAM,SACNC,MAAM,SACNC,YAAY,SACZC,KAAM,kBAAMP,GAAkB,IAC9BQ,QAAS,kBAAMR,GAAkB,IACjCS,SAAU,kBAAMT,GAAkB,KAPpC,QAUE,kBAAC,SAAD,CACEU,QAAS,WACPT,EAAkBU,KAAK,kBAACC,EAAD,SAF3B,UAWAA,EAAwB,WAC5B,IAAMX,EAAoBC,cAC1B,OACE,kBAAC,IAAD,CACEC,GAAG,QACHC,MAAM,SACNC,MAAM,SACNE,KAAM,kBAAMN,EAAkBY,OAC9BJ,SAAU,kBAAMR,EAAkBY,OAClCL,QAAS,kBAAMP,EAAkBY,OACjCC,mBAAoB,kBAAMb,EAAkBY,QAP9C,UAoDWE,UAtCa,WAAM,MACEC,oBAAS,GAApCC,EADyB,KACdC,EADc,KAGxBC,EAAQC,aAAc,WAC5B,OAAO,kBAACrB,EAAD,CAAYC,kBAAmBkB,OADhCC,IAIR,OACE,oCACE,kBAAC,SAAD,CACET,QAAS,WACPQ,GAAcD,KAFlB,QAQA,kBAAC,IAAD,CACEA,UAAWA,EACXI,YAAa,WACXH,GAAa,IAEfI,eAAgB,WACdC,QAAQC,IAAI,mBAEdC,eAAgB,WACdF,QAAQC,IAAI,mBAEdE,iBAAkB,WAChBH,QAAQC,IAAI,sBAGbL,KAQA,IAAMQ,EAAgBC","file":"43-9dee42e73c1542ccbe6a.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@alicloud/console-components'\nimport {\n  SlidePanelGroup,\n  SlidePanelItem,\n  usePanelStack,\n  usePanelStackCtx,\n} from '@alicloud/console-components-slide-panel'\n\n/* eslint-disable no-console */\n\nconst FirstPanel: React.FC<{\n  setIsPanelShowing: (v: boolean) => void\n}> = ({ setIsPanelShowing }) => {\n  const panelStackManager = usePanelStackCtx()\n  return (\n    <SlidePanelItem\n      id=\"item1\"\n      width=\"medium\"\n      title=\"title1\"\n      headerExtra=\"extra1\"\n      onOk={() => setIsPanelShowing(false)}\n      onClose={() => setIsPanelShowing(false)}\n      onCancel={() => setIsPanelShowing(false)}\n    >\n      item1\n      <Button\n        onClick={() => {\n          panelStackManager.push(<SecondPanel />)\n        }}\n      >\n        下探一级\n      </Button>\n    </SlidePanelItem>\n  )\n}\n\nconst SecondPanel: React.FC = () => {\n  const panelStackManager = usePanelStackCtx()\n  return (\n    <SlidePanelItem\n      id=\"item2\"\n      width=\"medium\"\n      title=\"title2\"\n      onOk={() => panelStackManager.pop()}\n      onCancel={() => panelStackManager.pop()}\n      onClose={() => panelStackManager.pop()}\n      onBackArrowClicked={() => panelStackManager.pop()}\n    >\n      item2\n    </SlidePanelItem>\n  )\n}\n\nconst Stack: React.FC<{}> = () => {\n  const [isShowing, setIsShowing] = useState(false)\n\n  const { top } = usePanelStack(() => {\n    return <FirstPanel setIsPanelShowing={setIsShowing} />\n  })\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setIsShowing(!isShowing)\n        }}\n      >\n        open\n      </Button>\n\n      <SlidePanelGroup\n        isShowing={isShowing}\n        onMaskClick={() => {\n          setIsShowing(false)\n        }}\n        onSlideStarted={() => {\n          console.log('onSlideStarted')\n        }}\n        onSlideCancled={() => {\n          console.log('onSlideCancled')\n        }}\n        onSlideCompleted={() => {\n          console.log('onSlideCompleted')\n        }}\n      >\n        {top}\n      </SlidePanelGroup>\n    </>\n  )\n}\n\nexport default Stack\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}