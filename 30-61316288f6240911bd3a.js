(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{wxlh:function(n,t,e){"use strict";e.r(t),e.d(t,"_demoSrcFiles",(function(){return l}));var o=e("mXGw"),a=e.n(o),r=e("BgHK"),d=e("UutA").default.div.withConfig({displayName:"demo1__Wrapper",componentId:"sc-1feu7hh-0"})([".next-btn{margin-right:8px;}.ghost-dark-background{margin-top:16px;width:50%;background:#333;margin-bottom:20px;padding-left:10px;box-sizing:border-box;padding:16px 0;}"]);t.default=function(){return a.a.createElement(d,null,a.a.createElement(r.Button,{type:"normal"},"普通按钮"),a.a.createElement(r.Button,{type:"normal",loading:!0},"普通按钮"),a.a.createElement(r.Button,{type:"normal",disabled:!0},"普通按钮"),a.a.createElement(r.Button,{type:"normal",warning:!0},"普通按钮"),a.a.createElement(r.Button,{type:"normal",text:!0},"文字按钮"),a.a.createElement("br",null),a.a.createElement("br",null),a.a.createElement(r.Button,{type:"primary"},"主要按钮"),a.a.createElement(r.Button,{type:"primary",loading:!0},"主要按钮"),a.a.createElement(r.Button,{type:"primary",disabled:!0},"主要按钮"),a.a.createElement(r.Button,{type:"primary",warning:!0},"主要按钮"),a.a.createElement(r.Button,{type:"primary",text:!0},"主要按钮"),a.a.createElement("br",null),a.a.createElement("br",null),a.a.createElement(r.Button,{type:"secondary"},"Secondary"),a.a.createElement(r.Button,{type:"secondary",loading:!0},"Secondary"),a.a.createElement(r.Button,{type:"secondary",disabled:!0},"Secondary"),a.a.createElement("div",{className:"ghost-dark-background"},a.a.createElement(r.Button,{ghost:"dark"},"Ghost"),a.a.createElement(r.Button,{ghost:"dark",loading:!0},"Ghost"),a.a.createElement(r.Button,{ghost:"dark",disabled:!0},"Ghost"),a.a.createElement(r.Button,{ghost:"dark",text:!0},"Ghost")))};var l={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo1";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/demo/demo1.js":'import React from \'react\'\nimport { Button } from \'@alicloud/console-components\'\nimport Styled from \'styled-components\'\n\nconst Demo1 = () => (\n  <Wrapper>\n    <Button type="normal">普通按钮</Button>\n    <Button type="normal" loading>\n      普通按钮\n    </Button>\n    <Button type="normal" disabled>\n      普通按钮\n    </Button>\n    <Button type="normal" warning>\n      普通按钮\n    </Button>\n    <Button type="normal" text>\n      文字按钮\n    </Button>\n    <br />\n    <br />\n\n    <Button type="primary">主要按钮</Button>\n    <Button type="primary" loading>\n      主要按钮\n    </Button>\n    <Button type="primary" disabled>\n      主要按钮\n    </Button>\n    <Button type="primary" warning>\n      主要按钮\n    </Button>\n    <Button type="primary" text>\n      主要按钮\n    </Button>\n    <br />\n    <br />\n    <Button type="secondary">Secondary</Button>\n    <Button type="secondary" loading>\n      Secondary\n    </Button>\n    <Button type="secondary" disabled>\n      Secondary\n    </Button>\n    <div className="ghost-dark-background">\n      <Button ghost="dark">Ghost</Button>\n      <Button ghost="dark" loading>\n        Ghost\n      </Button>\n      <Button ghost="dark" disabled>\n        Ghost\n      </Button>\n      <Button ghost="dark" text>\n        Ghost\n      </Button>\n    </div>\n  </Wrapper>\n)\n\nconst Wrapper = Styled.div`\n  .next-btn {\n    margin-right: 8px;\n  }\n  .ghost-dark-background {\n    margin-top: 16px;\n    width: 50%;\n    background: #333;\n    margin-bottom: 20px;\n    padding-left:10px;\n    box-sizing: border-box;\n    padding: 16px 0;\n  }\n`\n\nexport default Demo1\n',"demoMeta.json":'{"entryPath":"src/demo/demo1.js"}'}}}]);
//# sourceMappingURL=30-61316288f6240911bd3a.js.map