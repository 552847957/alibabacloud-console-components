(window.webpackJsonp=window.webpackJsonp||[]).push([[332],{v2H7:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return l})),t.d(e,"_demoSrcFiles",(function(){return m}));var r=t("mXGw"),o=t.n(r),i=t("BgHK"),s=t("TiKg"),c=t.n(s);function a(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}var l=function(n){var e,t;function r(){for(var e,t=arguments.length,r=new Array(t),o=0;o<t;o++)r[o]=arguments[o];return(e=n.call.apply(n,[this].concat(r))||this).field=new i.Field(a(e)),e.onClick=function(){var n=e.field.getValue("time-picker");console.log(n.format("HH:mm:ss"))},e}return t=n,(e=r).prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t,r.prototype.render=function(){var n=(0,this.field.init)("time-picker",{rules:[{required:!0,message:"Time Required"}],initValue:c()("00:00:00","HH:mm:ss",!0)});return o.a.createElement("div",null,o.a.createElement(i.TimePicker,n),o.a.createElement("br",null),o.a.createElement("br",null),o.a.createElement(i.Button,{onClick:this.onClick},"Print Value in Console"))},r}(o.a.Component),m={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo8";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo8.js":"import React from 'react'\nimport { TimePicker, Field, Button } from '@alicloud/console-components'\nimport moment from 'moment'\n\nexport default class Demo8  extends React.Component {\n  field = new Field(this)\n\n  onClick = () => {\n    const value = this.field.getValue('time-picker')\n    console.log(value.format('HH:mm:ss'))\n  }\n\n  render() {\n    const { init } = this.field\n\n    const props = init('time-picker', {\n      rules: [\n        { required: true, message: 'Time Required' }\n      ],\n        initValue: moment('00:00:00', 'HH:mm:ss', true),\n    })\n\n    return (\n      <div>\n        <TimePicker {...props} /> \n        <br /><br />\n        <Button onClick={this.onClick}>Print Value in Console</Button>\n      </div>\n    )\n  }\n}\n\n","demoMeta.json":'{"entryPath":"src/demo/demo8.js"}'}}}]);
//# sourceMappingURL=332-be708f8c77c9a7ef0d89.js.map