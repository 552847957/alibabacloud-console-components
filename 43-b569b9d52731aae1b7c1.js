(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{"9kYG":function(n,e,t){"use strict";t.r(e),t.d(e,"_demoSrcFiles",(function(){return r}));var o=t("mXGw"),a=t.n(o),l=t("BgHK"),i=t("5XDK"),c=function(n){var e=n.setIsPanelShowing,t=Object(i.e)();return a.a.createElement(i.b,{id:"item1",width:"medium",title:"title1",headerExtra:"extra1",onOk:function(){return e(!1)},onClose:function(){return e(!1)},onCancel:function(){return e(!1)}},"item1",a.a.createElement(l.Button,{onClick:function(){t.push(a.a.createElement(s,null))}},"下探一级"))},s=function(){var n=Object(i.e)();return a.a.createElement(i.b,{id:"item2",width:"medium",title:"title2",onOk:function(){return n.pop()},onCancel:function(){return n.pop()},onClose:function(){return n.pop()},onBackArrowClicked:function(){return n.pop()}},"item2")};e.default=function(){var n=Object(o.useState)(!1),e=n[0],t=n[1],s=Object(i.d)((function(){return a.a.createElement(c,{setIsPanelShowing:t})})).top;return a.a.createElement(a.a.Fragment,null,a.a.createElement(l.Button,{onClick:function(){t(!e)}},"open"),a.a.createElement(i.a,{isShowing:e,onMaskClick:function(){t(!1)},onSlideStarted:function(){console.log("onSlideStarted")},onSlideCancled:function(){console.log("onSlideCancled")},onSlideCompleted:function(){console.log("onSlideCompleted")}},s))};var r={"index.html":'<html>\n  <head>\n    <title>Console Components Demo</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.tsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "console-components-demo",\n  "version": "1.0.0",\n  "description": "",\n  "keywords": [],\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "@alicloud/console-components-fake-browser": "latest",\n    "@alicloud/console-components": "latest",\n    "dva": "^2.4.1",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react": "16.8.4",\n    "react-dom": "16.8.4",\n    "react-scripts": "2.1.3"\n  },\n  "devDependencies": {\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2",\n    "@types/styled-components": "^4.1.8",\n    "typescript": "^3.7.2"\n  },\n  "browserslist": [\n    ">0.2%",\n    "not dead",\n    "not ie <= 11",\n    "not op_mini all"\n  ]\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "template": "parcel"\n}',"src/index.tsx":"import * as React from 'react'\nimport { render } from 'react-dom'\nimport '@alicloud/console-components/dist/wind.css'\nimport App from './demo/index'\n\nconst rootElement = document.getElementById('app')\nrender(<App />, rootElement)\n","tsconfig.json":'{\n  "compilerOptions": {\n    "jsx": "react",\n    "moduleResolution": "node",\n    "esModuleInterop": true\n  }\n}\n',"src/demo/index.tsx":'import React, { useState } from \'react\'\nimport { Button } from \'@alicloud/console-components\'\nimport {\n  SlidePanelGroup,\n  SlidePanelItem,\n  usePanelStack,\n  usePanelStackCtx,\n} from \'@alicloud/console-components-slide-panel\'\n\n/* eslint-disable no-console */\n\nconst FirstPanel: React.FC<{\n  setIsPanelShowing: (v: boolean) => void\n}> = ({ setIsPanelShowing }) => {\n  const panelStackManager = usePanelStackCtx()\n  return (\n    <SlidePanelItem\n      id="item1"\n      width="medium"\n      title="title1"\n      headerExtra="extra1"\n      onOk={() => setIsPanelShowing(false)}\n      onClose={() => setIsPanelShowing(false)}\n      onCancel={() => setIsPanelShowing(false)}\n    >\n      item1\n      <Button\n        onClick={() => {\n          panelStackManager.push(<SecondPanel />)\n        }}\n      >\n        下探一级\n      </Button>\n    </SlidePanelItem>\n  )\n}\n\nconst SecondPanel: React.FC = () => {\n  const panelStackManager = usePanelStackCtx()\n  return (\n    <SlidePanelItem\n      id="item2"\n      width="medium"\n      title="title2"\n      onOk={() => panelStackManager.pop()}\n      onCancel={() => panelStackManager.pop()}\n      onClose={() => panelStackManager.pop()}\n      onBackArrowClicked={() => panelStackManager.pop()}\n    >\n      item2\n    </SlidePanelItem>\n  )\n}\n\nconst Stack: React.FC<{}> = () => {\n  const [isShowing, setIsShowing] = useState(false)\n\n  const { top } = usePanelStack(() => {\n    return <FirstPanel setIsPanelShowing={setIsShowing} />\n  })\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setIsShowing(!isShowing)\n        }}\n      >\n        open\n      </Button>\n\n      <SlidePanelGroup\n        isShowing={isShowing}\n        onMaskClick={() => {\n          setIsShowing(false)\n        }}\n        onSlideStarted={() => {\n          console.log(\'onSlideStarted\')\n        }}\n        onSlideCancled={() => {\n          console.log(\'onSlideCancled\')\n        }}\n        onSlideCompleted={() => {\n          console.log(\'onSlideCompleted\')\n        }}\n      >\n        {top}\n      </SlidePanelGroup>\n    </>\n  )\n}\n\nexport default Stack\n',"demoMeta.json":'{"entryPath":"src/demo/index.tsx"}'}}}]);
//# sourceMappingURL=43-b569b9d52731aae1b7c1.js.map