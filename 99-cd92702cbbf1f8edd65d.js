(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{eRT2:function(n,e,t){"use strict";t.r(e),t.d(e,"demoMeta",(function(){return a})),t.d(e,"_demoSrcFiles",(function(){return s}));var o=t("mXGw"),r=t.n(o),l=t("BgHK"),a={zhName:"Hooks",zhDesc:"在 functional component 里可使用 Field.useField 支持 hooks. 依赖: react@^16.8"};e.default=function(){var n=l.Field.useField(),e=n.init,t=(n.setValue,n.reset,n.getError);return r.a.createElement("div",null,r.a.createElement(l.Input,e("input",{initValue:"test",rules:[{required:!0,pattern:/hello/,message:"must be hello"}]})),r.a.createElement("span",{style:{color:"red"}},t("input")),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement(l.Button,{style:{marginRight:8},onClick:function(){n.setValue("input","xyz")}},"setValue"),r.a.createElement(l.Button,{onClick:function(){console.log(n.getValue("input"))}}," getValue "),r.a.createElement("br",null),r.a.createElement("br",null))};var s={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo13";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/demo/demo13.js":"import React from 'react'\nimport { Button, Input, Table, Field } from '@alicloud/console-components'\n\nconst Demo = () => {\n  const field = Field.useField()\n\n  const { init, setValue, reset, getError } = field\n\n  function onGetValue() {\n    console.log(field.getValue('input'))\n  }\n\n  function onSetValue() {\n    field.setValue('input', 'xyz')\n  }\n\n  return (\n    <div>\n      <Input\n        {...init('input', {\n          initValue: 'test',\n          rules: [\n            {\n              required: true,\n              pattern: /hello/,\n              message: 'must be hello',\n            },\n          ],\n        })}\n      />\n      <span style={{ color: 'red' }}>{getError('input')}</span>\n\n      <br />\n      <br />\n      <Button style={{ marginRight: 8 }} onClick={onSetValue}>\n        setValue\n      </Button>\n      <Button onClick={onGetValue}> getValue </Button>\n      <br />\n      <br />\n    </div>\n  )\n}\n\nexport const demoMeta = {\n  zhName: `Hooks`,\n  zhDesc:\n    '在 functional component 里可使用 Field.useField 支持 hooks. 依赖: react@^16.8',\n}\n\nexport default Demo\n","demoMeta.json":'{"entryPath":"src/demo/demo13.js"}'}}}]);
//# sourceMappingURL=99-cd92702cbbf1f8edd65d.js.map