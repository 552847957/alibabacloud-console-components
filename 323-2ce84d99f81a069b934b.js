(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{sjvu:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return d})),t.d(n,"_demoSrcFiles",(function(){return p}));t("lQyR"),t("YhIr"),t("4aJ6"),t("t91x"),t("+jjx"),t("ABKx"),t("W1QL"),t("5hJT");var a=t("mXGw"),r=t.n(a),o=t("BgHK");function s(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var l=o.Tag.Group,c=o.Tag.Selectable,i=["selectable tag","I like orange","small tag","disabled","disabled & checked"],d=function(e){var n,t;function a(){for(var n,t=arguments.length,a=new Array(t),r=0;r<t;r++)a[r]=arguments[r];return(n=e.call.apply(e,[this].concat(a))||this).state={value:["I like orange","disabled & checked"]},n}t=e,(n=a).prototype=Object.create(t.prototype),n.prototype.constructor=n,n.__proto__=t;var o=a.prototype;return o.handleChange=function(e,n){var t=this.state.value,a=n?[].concat(s(t),[e]):t.filter((function(n){return n!==e}));this.setState({value:a})},o.renderTagList=function(e){var n=this,t=this.state.value;return i.map((function(a,o){return r.a.createElement(c,Object.assign({key:a,checked:t.indexOf(a)>-1,disabled:o>2,size:2===o?"small":void 0,onChange:n.handleChange.bind(n,a)},e),a)}))},o.render=function(){return r.a.createElement("div",{className:"tag-list"},r.a.createElement("h4",null,"type: 'default'"),r.a.createElement(l,null,this.renderTagList({type:"normal"})),r.a.createElement("h4",null,"type: 'primary'"),r.a.createElement(l,null,this.renderTagList({type:"primary"})))},a}(r.a.Component),p={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo2";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo2.js":"import React, { Component } from 'react'\nimport { Tag } from '@alicloud/console-components'\n\nconst {Group: TagGroup, Selectable: SelectableTag} = Tag\nconst dataSource = ['selectable tag', 'I like orange', 'small tag', 'disabled', 'disabled & checked']\n\nexport default class Demo2 extends React.Component {\n  state = {\n        value: ['I like orange', 'disabled & checked']\n  }\n\n  handleChange(name, checked) {\n    const {value} = this.state\n    const next = checked ? [...value, name] : value.filter(n => n !== name)\n\n    this.setState({value: next})\n  }\n\n  renderTagList(props) {\n    const {value} = this.state;\n\n    return dataSource.map((name, i) => (\n      <SelectableTag key={name}\n        checked={value.indexOf(name) > -1}\n        disabled={i > 2}\n        size={i === 2 ? 'small' : undefined}\n        onChange={this.handleChange.bind(this, name)}\n        {...props}>{name}</SelectableTag>\n    ))\n  }\n\n  render() {\n    return (\n      <div className=\"tag-list\">\n        <h4>type: 'default'</h4>\n        <TagGroup>{this.renderTagList({type: 'normal'})}</TagGroup>\n        <h4>type: 'primary'</h4>\n        <TagGroup>{this.renderTagList({type: 'primary'})}</TagGroup>\n      </div>\n    )\n  }\n}\n\n","demoMeta.json":'{"entryPath":"src/demo/demo2.js"}'}}}]);
//# sourceMappingURL=323-2ce84d99f81a069b934b.js.map