{"version":3,"sources":["webpack:///../packages/component/src/components/menu/demo/demo8.js"],"names":["SubMenu","Menu","Item","Divider","handleItemClick","console","log","Demo","useState","selectedKeys","setSelectedKeys","handleSelect","keys","newKeys","filter","key","indexOf","SWrapper","onContextMenu","e","preventDefault","target","getBoundingClientRect","top","left","create","offset","clientX","clientY","className","popupClassName","onItemClick","selectMode","onSelect","children","label","MyContextMenuStyle","demoMeta","zhName","zhDesc","styled","div","createGlobalStyle","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"2YAIQA,EAA2BC,IAA3BD,QAASE,EAAkBD,IAAlBC,KAAMC,EAAYF,IAAZE,QAEjBC,EAAkB,WACtBC,QAAQC,IAAI,cAqDCC,UAlDF,WAAO,IAAD,EACuBC,mBAAS,IAA1CC,EADU,KACIC,EADJ,KAGXC,EAAe,SAAAC,GACnB,IAAMC,EAAUD,EAAKE,QAAO,SAAAC,GAC1B,MAAO,CAAC,QAAS,SAASC,QAAQD,IAAQ,KAE5CL,EAAgBG,IAmClB,OACE,kBAACI,EAAD,CAAUC,cAjCc,SAAAC,GACxBA,EAAEC,iBAD2B,MAGVD,EAAXE,OACqBC,wBAArBC,EAJqB,EAIrBA,IAAKC,EAJgB,EAIhBA,KACbnB,QAAQC,IAAI,gBAAiBG,GAE7BR,IAAKwB,OAAO,CACVJ,OAAQF,EAAEE,OACVK,OAAQ,CAACP,EAAEQ,QAAUH,EAAML,EAAES,QAAUL,GACvCM,UAAW,kBACXC,eAAgB,kBAChBC,YAAa3B,EACbK,eACAuB,WAAY,WACZC,SAAUtB,EACVuB,SAAU,CACR,kBAAChC,EAAD,CAAMa,IAAI,KAAV,YACA,kBAACb,EAAD,CAAMa,IAAI,KAAV,YACA,kBAACb,EAAD,CAAMa,IAAI,KAAV,YACA,kBAACZ,EAAD,CAASY,IAAI,cACb,kBAACf,EAAD,CAASe,IAAI,WAAWoB,MAAM,YAC5B,kBAACjC,EAAD,CAAMa,IAAI,SAAV,gBACA,kBAACb,EAAD,CAAMa,IAAI,SAAV,iBAEF,kBAACb,EAAD,CAAMa,IAAI,KAAV,YACA,kBAACZ,EAAD,CAASY,IAAI,cACb,kBAACb,EAAD,CAAMa,IAAI,KAAV,iBAOF,kBAACqB,EAAD,MADF,8CASG,IAAMC,EAAW,CACtBC,OAAQ,UACRC,OAAO,oBAGHtB,EAAWuB,UAAOC,IAAV,sEAAGD,CAAH,0GAQRJ,EAAqBM,4BAAH,KAMTC,EAAgBC","file":"171-de7523149bfeabc09c10.js","sourcesContent":["import React, { useState } from 'react'\nimport { Menu } from '@alicloud/console-components'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst { SubMenu, Item, Divider } = Menu\n\nconst handleItemClick = () => {\n  console.log('item 被点击了')\n}\n\nconst Demo = () => {\n  const [selectedKeys, setSelectedKeys] = useState([])\n\n  const handleSelect = keys => {\n    const newKeys = keys.filter(key => {\n      return ['sub-1', 'sub-2'].indexOf(key) > -1\n    })\n    setSelectedKeys(newKeys)\n  }\n\n  const createContextMenu = e => {\n    e.preventDefault()\n\n    const { target } = e\n    const { top, left } = target.getBoundingClientRect()\n    console.log('selectedKeys:', selectedKeys)\n\n    Menu.create({\n      target: e.target,\n      offset: [e.clientX - left, e.clientY - top],\n      className: 'my-context-menu',\n      popupClassName: 'my-context-menu',\n      onItemClick: handleItemClick,\n      selectedKeys,\n      selectMode: 'multiple',\n      onSelect: handleSelect,\n      children: [\n        <Item key=\"1\">Option 1</Item>,\n        <Item key=\"2\">Option 2</Item>,\n        <Item key=\"3\">Option 3</Item>,\n        <Divider key=\"divider-1\" />,\n        <SubMenu key=\"sub-menu\" label=\"Sub menu\">\n          <Item key=\"sub-1\">Sub option 1</Item>\n          <Item key=\"sub-2\">Sub option 2</Item>\n        </SubMenu>,\n        <Item key=\"4\">Option 4</Item>,\n        <Divider key=\"divider-2\" />,\n        <Item key=\"5\">Option 5</Item>,\n      ],\n    })\n  }\n\n  return (\n    <SWrapper onContextMenu={createContextMenu}>\n      <MyContextMenuStyle />\n      Right click here to see the context menu!\n    </SWrapper>\n  )\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: '创建上下文菜单',\n  zhDesc: `展示如何创建自定义的上下文菜单。`,\n}\n\nconst SWrapper = styled.div`\n  width: 500px;\n  height: 200px;\n  line-height: 200px;\n  text-align: center;\n  background: #ddd;\n  border: 1px solid black;\n`\nconst MyContextMenuStyle = createGlobalStyle`\n\t.my-context-menu {\n\t\twidth: 120px;\n\t}\n`\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}