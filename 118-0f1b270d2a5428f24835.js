(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{"/SdG":function(e,n,r){"use strict";r.r(n),r.d(n,"demoMeta",(function(){return i})),r.d(n,"_demoSrcFiles",(function(){return d}));r("dtV+"),r("Fdmb");var a=r("mXGw"),t=r.n(a),o=r("BgHK"),l=o.Form.Item,m=o.Radio.Group,s={labelCol:{span:6},wrapperCol:{span:14}};n.default=function(){return t.a.createElement(o.Form,s,t.a.createElement(l,{label:"Account:",hasFeedback:!0,validator:function(e,n){return new Promise((function(e,r){n?setTimeout((function(){"frank"===n?r([new Error("Sorry, this username is already exist.")]):e()}),500):e()}))},help:""},t.a.createElement(o.Input,{placeholder:"Input frank",name:"valUsername"}),t.a.createElement(o.Form.Error,{name:"valUsername"},(function(e,n){return"loading"===n?"loading...":e}))),t.a.createElement(l,{label:"Email:",hasFeedback:!0,required:!0,requiredTrigger:"onBlur",format:"email"},t.a.createElement(o.Input,{placeholder:"Both trigget onBlur and onChange",name:"valEmail"})),t.a.createElement(l,{label:"Password:",hasFeedback:!0,required:!0,requiredMessage:"Please enter password"},t.a.createElement(o.Input,{htmlType:"password",name:"valPasswd"})),t.a.createElement(l,{label:"Gender:",hasFeedback:!0,required:!0,requiredMessage:"Please select your gender"},t.a.createElement(m,{name:"valSex"},t.a.createElement(o.Radio,{value:"male"},"Male"),t.a.createElement(o.Radio,{value:"female"},"Female"))),t.a.createElement(l,{label:"Remarks:",required:!0,requiredMessage:"Really do not intend to write anything?"},t.a.createElement(o.Input.TextArea,{maxLength:20,hasLimitHint:!0,placeholder:"Everything is ok!",name:"valTextarea"})),t.a.createElement(l,{wrapperCol:{offset:6}},t.a.createElement(o.Form.Submit,{validate:!0,type:"primary",onClick:function(e,n){return console.log(e,n)},style:{marginRight:10}},"Submit"),t.a.createElement(o.Form.Reset,null,"Reset")))};var i={zhName:"校验",zhDesc:"基本的表单校验例子。"},d={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo18";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo18.js":'import React from \'react\'\n\nimport { Form, Input, Radio } from \'@alicloud/console-components\'\n\nconst FormItem = Form.Item\nconst RadioGroup = Radio.Group\n\nconst formItemLayout = {\n  labelCol: {\n    span: 6,\n  },\n  wrapperCol: {\n    span: 14,\n  },\n}\n\nconst Demo18 = () => {\n  const userExists = (rule, value) => {\n    return new Promise((resolve, reject) => {\n      if (!value) {\n        resolve()\n      } else {\n        setTimeout(() => {\n          if (value === \'frank\') {\n            reject([new Error(\'Sorry, this username is already exist.\')])\n          } else {\n            resolve()\n          }\n        }, 500)\n      }\n    })\n  }\n\n  return (\n    <Form {...formItemLayout}>\n      <FormItem label="Account:" hasFeedback validator={userExists} help="">\n        <Input placeholder="Input frank" name="valUsername" />\n        <Form.Error name="valUsername">\n          {(errors, state) => {\n            if (state === \'loading\') {\n              return \'loading...\'\n            }\n            return errors\n          }}\n        </Form.Error>\n      </FormItem>\n      <FormItem\n        label="Email:"\n        hasFeedback\n        required\n        requiredTrigger="onBlur"\n        format="email"\n      >\n        <Input placeholder="Both trigget onBlur and onChange" name="valEmail" />\n      </FormItem>\n\n      <FormItem\n        label="Password:"\n        hasFeedback\n        required\n        requiredMessage="Please enter password"\n      >\n        <Input htmlType="password" name="valPasswd" />\n      </FormItem>\n\n      <FormItem\n        label="Gender:"\n        hasFeedback\n        required\n        requiredMessage="Please select your gender"\n      >\n        <RadioGroup name="valSex">\n          <Radio value="male">Male</Radio>\n          <Radio value="female">Female</Radio>\n        </RadioGroup>\n      </FormItem>\n\n      <FormItem\n        label="Remarks:"\n        required\n        requiredMessage="Really do not intend to write anything?"\n      >\n        <Input.TextArea\n          maxLength={20}\n          hasLimitHint\n          placeholder="Everything is ok!"\n          name="valTextarea"\n        />\n      </FormItem>\n\n      <FormItem wrapperCol={{ offset: 6 }}>\n        <Form.Submit\n          validate\n          type="primary"\n          onClick={(v, e) => console.log(v, e)}\n          style={{ marginRight: 10 }}\n        >\n          Submit\n        </Form.Submit>\n        <Form.Reset>Reset</Form.Reset>\n      </FormItem>\n    </Form>\n  )\n}\nexport default Demo18\n\nexport const demoMeta = {\n  zhName: `校验`,\n  zhDesc: `基本的表单校验例子。`,\n}\n',"demoMeta.json":'{"entryPath":"src/demo/demo18.js"}'}}}]);
//# sourceMappingURL=118-0f1b270d2a5428f24835.js.map