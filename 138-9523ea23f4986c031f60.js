(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{qfzo:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return m})),t.d(n,"_demoSrcFiles",(function(){return p}));t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3");var o=t("mXGw"),i=t.n(o),r=t("xARA"),d=t.n(r),s=t("BgHK");t("8d0/");var a=s.Grid.Row,l=s.Grid.Col,c={xxs:320,xs:480,s:720,m:990,l:1200,xl:1500},m=function(e){var n,t;function o(){return e.apply(this,arguments)||this}t=e,(n=o).prototype=Object.create(t.prototype),n.prototype.constructor=n,n.__proto__=t;var r=o.prototype;return r.componentDidMount=function(){var e=d.a.findDOMNode(this.refs.fixCol);this.handleResize=function(){for(var n="",t=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,o=Object.keys(c),i=0;i<o.length;i++){var r=c[o[i]],d=c[o[i+1]];if(t>r&&(t<d||!d)){n=o[i];break}}n&&(e.innerHTML=c[n]+"px")},window.addEventListener("resize",this.handleResize),this.handleResize()},r.componentWillUnmount=function(){window.removeEventListener("resize",this.handleResize)},r.render=function(){return i.a.createElement("div",{className:"type-demo"},i.a.createElement("div",{className:"demo-title"},"Default"),i.a.createElement(a,null,i.a.createElement(l,null,"100%")),i.a.createElement("div",{className:"demo-title"},"Set fixed to true"),i.a.createElement(a,{ref:"fixedRow",fixed:!0},i.a.createElement(l,{ref:"fixCol"})),i.a.createElement("div",{className:"demo-title"},"Set fixedWidth to 's'"),i.a.createElement(a,{fixedWidth:"s"},i.a.createElement(l,null,"720px")))},o}(i.a.Component),p={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo8";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/demo/demo8.less":".type-demo .demo-title {\n    margin-left: 20px;\n}\n\n.type-demo .next-row {\n    margin: 10px 0;\n}\n\n.type-demo .next-col {\n    border:1px solid #CCC;\n    border-radius: 3px;\n    background-color:#ECECEC;\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n}","src/demo/demo8.js":"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Grid } from '@alicloud/console-components'\nimport './demo8.less'\n\nconst { Row, Col } = Grid\n\nconst breakpoints = {\n  xxs: 320,\n  xs: 480,\n  s: 720,\n  m: 990,\n  l: 1200,\n  xl: 1500\n}\n\nexport default class Demo8 extends React.Component {\n  componentDidMount() {\n    const row = ReactDOM.findDOMNode(this.refs.fixCol)\n    this.handleResize = () => {\n      let point = ''\n      const innerWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      const keys = Object.keys(breakpoints)\n      for (let i = 0; i < keys.length; i++) {\n        const width = breakpoints[keys[i]]\n        const nextWidth = breakpoints[keys[i + 1]]\n        if (innerWidth > width && (innerWidth < nextWidth || !nextWidth)) {\n        point = keys[i]\n        break\n        }\n      }\n\n      if (point) {\n        row.innerHTML = `${breakpoints[point]}px`\n      }\n    }\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  render() {\n    return (\n      <div className=\"type-demo\">\n        <div className=\"demo-title\">Default</div>\n        <Row>\n          <Col>100%</Col>\n        </Row>\n        <div className=\"demo-title\">Set fixed to true</div>\n        <Row ref=\"fixedRow\" fixed>\n          <Col ref=\"fixCol\" />\n        </Row>\n        <div className=\"demo-title\">Set fixedWidth to 's'</div>\n        <Row fixedWidth=\"s\">\n          <Col>720px</Col>\n        </Row>\n      </div>\n    )\n  }\n}","demoMeta.json":'{"entryPath":"src/demo/demo8.js"}'}}}]);
//# sourceMappingURL=138-9523ea23f4986c031f60.js.map