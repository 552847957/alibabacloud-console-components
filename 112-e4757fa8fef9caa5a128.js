(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{Uhzr:function(e,n,r){"use strict";r.r(n),r.d(n,"demoMeta",(function(){return h})),r.d(n,"_demoSrcFiles",(function(){return v}));r("wDqy"),r("yvkl"),r("Ir+3"),r("abGl"),r("gZHo"),r("Fdmb");var t=r("mXGw"),o=r.n(t),s=r("BgHK"),a=r("cnbf"),i=r("/m4v");function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){m(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function m(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}var p={values:{email:"",username:"xiachi"},errors:{}};var u=function(e){var n,r;function t(n){var r;return(r=e.call(this,n)||this).field=new s.Field(function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(r),{onChange:function(e,n){var t,o;console.log("onChange",e,n,r.field.getError(e)),r.props.dispatch({type:"save_fields",values:(t={},t[e]=n,t)}),r.props.dispatch({type:"set_errors",errors:(o={},o[e]=r.field.getError(e),o)})}}),r}r=e,(n=t).prototype=Object.create(r.prototype),n.prototype.constructor=n,n.__proto__=r;var a=t.prototype;return a.componentWillReceiveProps=function(e){this.field.setValues(e.formData.values),this.field.setErrors(e.formData.errors)},a.setEmail=function(){this.props.dispatch({type:"save_fields",values:{email:"qq@gmail.com"}})},a.setName=function(){this.props.dispatch({type:"save_fields",values:{username:"frank"}})},a.setError=function(){this.props.dispatch({type:"set_errors",errors:{email:"Error message from remote"}})},a.setErrors=function(){this.props.dispatch({type:"set_errors",errors:{email:"A-Error message from remote",username:"B-Error message from remote"}})},a.render=function(){var e=this;return o.a.createElement(s.Form,{field:this.field},o.a.createElement(s.Form.Item,{required:!0,format:"email"},o.a.createElement(s.Input,{name:"email"})),o.a.createElement(s.Form.Item,{help:"",required:!0,requiredMessage:"required"},o.a.createElement(s.Input,{name:"username",defaultValue:this.props.formData.values.username}),o.a.createElement("p",{style:{color:"blue"}},this.field.getError("username"))),o.a.createElement("p",null,"email: ",this.props.email&&this.props.email.value),o.a.createElement(s.Button,{onClick:this.setEmail.bind(this)},"setEmail"),o.a.createElement(s.Button,{onClick:this.setName.bind(this)},"setName"),o.a.createElement(s.Button,{onClick:this.setError.bind(this)},"setError"),o.a.createElement(s.Button,{onClick:this.setErrors.bind(this)},"setErrors"),o.a.createElement(s.Button,{onClick:function(){return e.field.reset()}},"reset"))},t}(o.a.Component),d=Object(i.b)((function(e){return{formData:e.formReducer}}))(u),f=Object(a.c)(Object(a.b)({formReducer:function(e,n){switch(void 0===e&&(e=p),n.type){case"save_fields":return c({},e,{values:c({},e.values,{},n.values)});case"set_errors":return c({},e,{errors:c({},e.errors,{},n.errors)});default:return e}}}));n.default=function(){return o.a.createElement(i.a,{store:f},o.a.createElement("div",null,o.a.createElement(d,null)))};var h={zhName:"手动设置错误",zhDesc:'在`redux`中结合 `componentWillReceiveProps` `setErrors` 使用, 配合 Field 使用更加方便\n\n\t如果需要自己控制错误位置，可以让`help=""` 然后自己放置展示错误的地方'},v={"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo13";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/demo/demo13.js":"import React from 'react'\nimport { Form, Input, Button, Field } from '@alicloud/console-components'\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\n\nconst initState = {\n  values: { email: '', username: 'xiachi' },\n  errors: {},\n}\n\nfunction formReducer(state = initState, action) {\n  switch (action.type) {\n    case 'save_fields':\n      return {\n        ...state,\n        values: {\n          ...state.values,\n          ...action.values,\n        },\n      }\n    case 'set_errors':\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          ...action.errors,\n        },\n      }\n    default:\n      return state\n  }\n}\n\nclass FormDemo extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.field = new Field(this, {\n      onChange: (name, value) => {\n        console.log('onChange', name, value, this.field.getError(name))\n        this.props.dispatch({\n          type: 'save_fields',\n          values: {\n            [name]: value,\n          },\n        })\n        this.props.dispatch({\n          type: 'set_errors',\n          errors: {\n            [name]: this.field.getError(name),\n          },\n        })\n      },\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.field.setValues(nextProps.formData.values)\n    this.field.setErrors(nextProps.formData.errors)\n  }\n\n  setEmail() {\n    this.props.dispatch({\n      type: 'save_fields',\n      values: {\n        email: 'qq@gmail.com',\n      },\n    })\n  }\n\n  setName() {\n    this.props.dispatch({\n      type: 'save_fields',\n      values: {\n        username: 'frank',\n      },\n    })\n  }\n\n  setError() {\n    this.props.dispatch({\n      type: 'set_errors',\n      errors: {\n        email: 'Error message from remote',\n      },\n    })\n  }\n\n  setErrors() {\n    this.props.dispatch({\n      type: 'set_errors',\n      errors: {\n        email: 'A-Error message from remote',\n        username: 'B-Error message from remote',\n      },\n    })\n  }\n\n  render() {\n    return (\n      <Form field={this.field}>\n        <Form.Item required format=\"email\">\n          <Input name=\"email\" />\n        </Form.Item>\n        <Form.Item help=\"\" required requiredMessage=\"required\">\n          <Input\n            name=\"username\"\n            defaultValue={this.props.formData.values.username}\n          />\n          <p style={{ color: 'blue' }}>{this.field.getError('username')}</p>\n        </Form.Item>\n\n        <p>email: {this.props.email && this.props.email.value}</p>\n        <Button onClick={this.setEmail.bind(this)}>setEmail</Button>\n        <Button onClick={this.setName.bind(this)}>setName</Button>\n        <Button onClick={this.setError.bind(this)}>setError</Button>\n        <Button onClick={this.setErrors.bind(this)}>setErrors</Button>\n        <Button onClick={() => this.field.reset()}>reset</Button>\n      </Form>\n    )\n  }\n}\n\nconst ReduxFormDemo = connect(state => {\n  return {\n    formData: state.formReducer,\n  }\n})(FormDemo)\n\nconst store = createStore(\n  combineReducers({\n    formReducer,\n  })\n)\n\nconst Demo13 = () => (\n  <Provider store={store}>\n    <div>\n      <ReduxFormDemo />\n    </div>\n  </Provider>\n)\n\nexport default Demo13\n\nexport const demoMeta = {\n  zhName: `手动设置错误`,\n  zhDesc: `在\\`redux\\`中结合 \\`componentWillReceiveProps\\` \\`setErrors\\` 使用, 配合 Field 使用更加方便\n\n\t如果需要自己控制错误位置，可以让\\`help=\"\"\\` 然后自己放置展示错误的地方`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo13.js"}'}}}]);
//# sourceMappingURL=112-e4757fa8fef9caa5a128.js.map