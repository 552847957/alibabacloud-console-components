(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{Hbw2:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return s})),t.d(e,"_demoSrcFiles",(function(){return l}));var o=t("mXGw"),i=t.n(o),r=t("BgHK");var s=function(n){var e,t;function o(e){var t;return(t=n.call(this,e)||this).state={visible:!1},t}t=n,(e=o).prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t;var s=o.prototype;return s.hide=function(){this.setState({visible:!1})},s.handleVisibleChange=function(n){this.setState({visible:n})},s.onClose=function(){console.log("onClose doing!")},s.afterClose=function(){console.log("afterClose doing!")},s.render=function(){var n=i.a.createElement(r.Button,{type:"primary",style:{margin:"5px"}},"click to popup the card"),e=i.a.createElement(r.Button,{type:"primary",style:{margin:"5px"}},"hover to popup the card"),t=i.a.createElement("div",null,"click the button",i.a.createElement("br",null),i.a.createElement("a",{style:{right:0},id:"confirmBtn",onClick:this.hide.bind(this)},"confirm"),i.a.createElement("a",{style:{marginLeft:"4px"},id:"cancelBtn",onClick:this.hide.bind(this)},"cancel"));return i.a.createElement("div",null,i.a.createElement(r.Balloon,{trigger:n,triggerType:"click",visible:this.state.visible,onVisibleChange:this.handleVisibleChange.bind(this)},t),i.a.createElement(r.Balloon,{trigger:e,triggerType:"hover",onClose:this.onClose.bind(this),afterClose:this.afterClose.bind(this)},"content"))},o}(i.a.Component),l={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo4";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo4.js":"import React from 'react'\nimport { Button, Balloon } from '@alicloud/console-components'\n\nexport default class Demo4 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false\n    }\n  }\n\n  hide() {\n    this.setState({\n      visible: false\n    })\n  }\n\n  // onVisibleChange callback will be triggered when visible changes.\n  // For example, for click type, it'll be triggered when clicking the button and later the other areas;\n  // for hover type, it'll be triggered when mouse enter and mouse leave\n  handleVisibleChange(visible) {\n    this.setState({visible})\n  }\n\n  onClose() {\n    console.log('onClose doing!')\n  }\n\n  afterClose() {\n    console.log('afterClose doing!')\n  }\n  render() {\n    const visibleTrigger = <Button type=\"primary\" style={{margin: '5px'}}>click to popup the card</Button>\n    const clickTrigger = <Button type=\"primary\" style={{margin: '5px'}}>hover to popup the card</Button>\n\n    const content = (\n      <div>\n        click the button<br/>\n        <a style={{right: 0}} id=\"confirmBtn\" onClick={this.hide.bind(this)}>confirm</a>\n        <a style={{marginLeft: '4px'}} id=\"cancelBtn\" onClick={this.hide.bind(this)}>cancel</a>\n      </div>\n    )\n    \n    return (\n      <div>\n        <Balloon trigger={visibleTrigger} triggerType=\"click\"\n          visible={this.state.visible}\n          onVisibleChange={this.handleVisibleChange.bind(this)}\n        >\n          {content}\n        </Balloon>\n        <Balloon trigger={clickTrigger} triggerType=\"hover\"\n          onClose={this.onClose.bind(this)} afterClose={this.afterClose.bind(this)}>\n          content\n        </Balloon>\n      </div>\n    )\n  }\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo4.js"}'}}}]);
//# sourceMappingURL=60-00020d454b1bec166fc6.js.map