(window.webpackJsonp=window.webpackJsonp||[]).push([[310],{"5PB3":function(e,n,a){"use strict";a.r(n),a.d(n,"demoMeta",(function(){return p})),a.d(n,"_demoSrcFiles",(function(){return y}));var t=a("mXGw"),d=a.n(t),l=a("BgHK"),r=a("UutA"),o=[{key:1,name:"a",age:32,address:"aa",children:[{key:11,name:"b",age:33,address:"bb"},{key:12,name:"c",age:33,address:"cc",children:[{key:121,name:"d",age:33,address:"dd"}]},{key:13,name:"e",age:33,address:"ee",children:[{key:131,name:"f",age:33,address:"ff",children:[{key:1311,name:"g",age:33,address:"gg"},{key:1312,name:"h",age:33,address:"hh"}]}]}]},{key:2,name:"i",age:32,address:"ii",children:[]}],i=d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",isTree:!0,rowSelection:{onChange:function(){}}},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key"}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name"}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address"})),c=d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",expandedRowRender:function(e){return e.address},rowSelection:{onChange:function(){}}},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key"}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name"}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address"})),m=d.a.createElement("div",{style:{width:"500px"}},d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",rowSelection:{onChange:function(){}},isTree:!0},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key",width:100}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name",lock:!0,width:100}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age",width:200,lock:"right"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address",width:200}))),s=d.a.createElement("div",{style:{width:"500px"}},d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",rowSelection:{onChange:function(){}}},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key",width:100}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name",lock:!0,width:100}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age",width:200,lock:"right"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address",width:200}))),h=d.a.createElement("div",{style:{width:"500px"}},d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",rowSelection:{onChange:function(){}},expandedRowRender:function(e){return e.address},expandedRowIndent:[3,1]},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key",width:100}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name",lock:!0,width:100}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age",width:200,lock:"right"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address",width:200}))),u=d.a.createElement("div",{style:{width:"500px"}},d.a.createElement(l.Table,{dataSource:o,primaryKey:"key",isTree:!0},d.a.createElement(l.Table.Column,{title:"Key",dataIndex:"key",width:100}),d.a.createElement(l.Table.Column,{title:"Name",dataIndex:"name",lock:!0,width:100}),d.a.createElement(l.Table.Column,{title:"Age",dataIndex:"age",width:200,lock:"right"}),d.a.createElement(l.Table.Column,{title:"Address",dataIndex:"address",width:200})));n.default=function(){return d.a.createElement(b,null,d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"tree & select"),i),d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"extra & select"),c),d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"tree & lock column & select"),m),d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"extra & lock column & select"),h),d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"lock column & select"),s),d.a.createElement("div",{className:"row"},d.a.createElement("h4",null,"tree & lock column"),u))};var p={zhName:"混合模式",zhDesc:"演示了tree模式和rowSelection模式混合"},b=r.default.div.withConfig({displayName:"demo20__SWrapper",componentId:"j1xc1q-0"})([".row{margin-top:10px;}"]),y={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo20";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo20.js":'import React from \'react\'\nimport { Table } from \'@alicloud/console-components\'\nimport styled from \'styled-components\'\n\nconst data = [\n  {\n    key: 1,\n    name: \'a\',\n    age: 32,\n    address: \'aa\',\n    children: [\n      {\n        key: 11,\n        name: \'b\',\n        age: 33,\n        address: \'bb\',\n      },\n      {\n        key: 12,\n        name: \'c\',\n        age: 33,\n        address: \'cc\',\n        children: [\n          {\n            key: 121,\n            name: \'d\',\n            age: 33,\n            address: \'dd\',\n          },\n        ],\n      },\n      {\n        key: 13,\n        name: \'e\',\n        age: 33,\n        address: \'ee\',\n        children: [\n          {\n            key: 131,\n            name: \'f\',\n            age: 33,\n            address: \'ff\',\n            children: [\n              {\n                key: 1311,\n                name: \'g\',\n                age: 33,\n                address: \'gg\',\n              },\n              {\n                key: 1312,\n                name: \'h\',\n                age: 33,\n                address: \'hh\',\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n  {\n    key: 2,\n    name: \'i\',\n    age: 32,\n    address: \'ii\',\n    children: [],\n  },\n]\n\nconst tableMixTree = (\n  <Table\n    dataSource={data}\n    primaryKey="key"\n    isTree\n    rowSelection={{ onChange: () => {} }}\n  >\n    <Table.Column title="Key" dataIndex="key" />\n    <Table.Column title="Name" dataIndex="name" />\n    <Table.Column title="Age" dataIndex="age" />\n    <Table.Column title="Address" dataIndex="address" />\n  </Table>\n)\n\nconst tableMixExpanded = (\n  <Table\n    dataSource={data}\n    primaryKey="key"\n    expandedRowRender={record => record.address}\n    rowSelection={{ onChange: () => {} }}\n  >\n    <Table.Column title="Key" dataIndex="key" />\n    <Table.Column title="Name" dataIndex="name" />\n    <Table.Column title="Age" dataIndex="age" />\n    <Table.Column title="Address" dataIndex="address" />\n  </Table>\n)\n\nconst tableMixSelectionTreeLock = (\n  <div style={{ width: \'500px\' }}>\n    <Table\n      dataSource={data}\n      primaryKey="key"\n      rowSelection={{ onChange: () => {} }}\n      isTree\n    >\n      <Table.Column title="Key" dataIndex="key" width={100} />\n      <Table.Column title="Name" dataIndex="name" lock width={100} />\n      <Table.Column title="Age" dataIndex="age" width={200} lock="right" />\n      <Table.Column title="Address" dataIndex="address" width={200} />\n    </Table>\n  </div>\n)\n\nconst tableMixLock = (\n  <div style={{ width: \'500px\' }}>\n    <Table\n      dataSource={data}\n      primaryKey="key"\n      rowSelection={{ onChange: () => {} }}\n    >\n      <Table.Column title="Key" dataIndex="key" width={100} />\n      <Table.Column title="Name" dataIndex="name" lock width={100} />\n      <Table.Column title="Age" dataIndex="age" width={200} lock="right" />\n      <Table.Column title="Address" dataIndex="address" width={200} />\n    </Table>\n  </div>\n)\n\nconst tableMixExpandedLock = (\n  <div style={{ width: \'500px\' }}>\n    <Table\n      dataSource={data}\n      primaryKey="key"\n      rowSelection={{ onChange: () => {} }}\n      expandedRowRender={record => record.address}\n      expandedRowIndent={[3, 1]}\n    >\n      <Table.Column title="Key" dataIndex="key" width={100} />\n      <Table.Column title="Name" dataIndex="name" lock width={100} />\n      <Table.Column title="Age" dataIndex="age" width={200} lock="right" />\n      <Table.Column title="Address" dataIndex="address" width={200} />\n    </Table>\n  </div>\n)\n\nconst tableMixTreeLock = (\n  <div style={{ width: \'500px\' }}>\n    <Table dataSource={data} primaryKey="key" isTree>\n      <Table.Column title="Key" dataIndex="key" width={100} />\n      <Table.Column title="Name" dataIndex="name" lock width={100} />\n      <Table.Column title="Age" dataIndex="age" width={200} lock="right" />\n      <Table.Column title="Address" dataIndex="address" width={200} />\n    </Table>\n  </div>\n)\n\nconst Demo20 = () => (\n  <SWrapper>\n    <div className="row">\n      <h4>tree & select</h4>\n      {tableMixTree}\n    </div>\n    <div className="row">\n      <h4>extra & select</h4>\n      {tableMixExpanded}\n    </div>\n    <div className="row">\n      <h4>tree & lock column & select</h4>\n      {tableMixSelectionTreeLock}\n    </div>\n    <div className="row">\n      <h4>extra & lock column & select</h4>\n      {tableMixExpandedLock}\n    </div>\n    <div className="row">\n      <h4>lock column & select</h4>\n      {tableMixLock}\n    </div>\n    <div className="row">\n      <h4>tree & lock column</h4>\n      {tableMixTreeLock}\n    </div>\n  </SWrapper>\n)\n\nexport default Demo20\n\nexport const demoMeta = {\n  zhName: `混合模式`,\n  zhDesc: `演示了tree模式和rowSelection模式混合`,\n}\n\nconst SWrapper = styled.div`\n  .row {\n    margin-top: 10px;\n  }\n`\n',"demoMeta.json":'{"entryPath":"src/demo/demo20.js"}'}}}]);
//# sourceMappingURL=310-8d087b5965dd49d5eb1b.js.map