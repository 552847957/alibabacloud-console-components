(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{zOpu:function(n,e,t){"use strict";t.r(e),t.d(e,"demoMeta",(function(){return l})),t.d(e,"_demoSrcFiles",(function(){return c}));t("kBzq");var o=t("mXGw"),a=t.n(o),r=t("BgHK"),d=function(n,e,t){return a.a.createElement("a",null,"Remove(",t.id,")")};e.default=function(){var n=Object(o.useState)(function(){for(var n=[],e=0;e<5;e++)n.push({title:"Quotation for 1PCS Nano "+(3+e)+".0 controller compatible",id:100306660940+e,time:2e3+e});return n}()),e=n[0],t=n[1],l=Object(o.useState)(void 0),c=l[0],i=l[1];return a.a.createElement("div",null,a.a.createElement("p",null,a.a.createElement(r.Button,{onClick:function(){i([2,1])}}," Update indent ")),a.a.createElement(r.Table,{dataSource:e,isZebra:!1,hasBorder:!1,onSort:function(n,o){var a=e.sort((function(e,t){var a=e[n]-t[n];return"asc"===o?a>0?1:-1:a>0?-1:1}));t(a)},expandedRowRender:function(n){return n.title},onRowClick:function(){return console.log("rowClick")},onExpandedRowClick:function(){return console.log("expandedRowClick")},expandedRowIndent:c},a.a.createElement(r.Table.Column,{title:"Id",dataIndex:"id",sortable:!0}),a.a.createElement(r.Table.Column,{title:"Title",dataIndex:"title"}),a.a.createElement(r.Table.Column,{title:"Time",dataIndex:"time"}),a.a.createElement(r.Table.Column,{cell:d,width:200})))};var l={zhName:"可展开",zhDesc:"可以通过 `expandedRowRender` 额外渲染行"},c={"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/styles.less":"","src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo5";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/demo/demo5.js":"import React, { useState } from 'react'\nimport { Table, Button } from '@alicloud/console-components'\n\nconst generateDataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\nconst render = (value, index, record) => {\n  return <a>Remove({record.id})</a>\n}\n\nconst Demo5 = () => {\n  const [dataSource, setDataSource] = useState(generateDataSource())\n\n  const [expandedRowIndent, setExpandedRowIndent] = useState(undefined)\n\n  const onSort = (dataIndex, order) => {\n    const newDataSource = dataSource.sort(function(a, b) {\n      const result = a[dataIndex] - b[dataIndex]\n      return order === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1\n    })\n    setDataSource(newDataSource)\n  }\n\n  const toggleIndent = () => {\n    setExpandedRowIndent([2, 1])\n  }\n\n  return (\n    <div>\n      <p>\n        <Button onClick={toggleIndent}> Update indent </Button>\n      </p>\n      <Table\n        dataSource={dataSource}\n        isZebra={false}\n        hasBorder={false}\n        onSort={onSort}\n        expandedRowRender={record => record.title}\n        onRowClick={() => console.log('rowClick')}\n        onExpandedRowClick={() => console.log('expandedRowClick')}\n        expandedRowIndent={expandedRowIndent}\n      >\n        <Table.Column title=\"Id\" dataIndex=\"id\" sortable />\n        <Table.Column title=\"Title\" dataIndex=\"title\" />\n        <Table.Column title=\"Time\" dataIndex=\"time\" />\n        <Table.Column cell={render} width={200} />\n      </Table>\n    </div>\n  )\n}\n\nexport default Demo5\n\nexport const demoMeta = {\n  zhName: `可展开`,\n  zhDesc: '可以通过 `expandedRowRender` 额外渲染行',\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo5.js"}'}}}]);
//# sourceMappingURL=318-a1e87a76d04af0e4bc6c.js.map