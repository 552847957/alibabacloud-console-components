{"version":3,"sources":["webpack:///../packages/component/src/components/config-provider/demo/demo3.js"],"names":["config","ConfigProvider","getContextProps","Option","Select","locales","ClickMe","clickMe","Toast","close","render","this","props","locale","onClick","React","Component","defaultProps","state","visible","handleClose","bind","setState","afterClose","className","type","create","mountNode","document","createElement","body","appendChild","newLocale","ReactDOM","unmountComponentAtNode","ocument","removeChild","NewClickMe","NewToast","Demo2","language","handleClick","handleChangeLanguage","value","onChange","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"sdAKQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,gBACRC,EAAWC,IAAXD,OAEFE,EAAU,CACd,QAAS,CACPC,QAAS,CACPC,QAAS,OAEXC,MAAO,CACLC,MAAO,OAGX,QAAS,CACPH,QAAS,CACPC,QAAS,aAEXC,MAAO,CACLC,MAAO,WAKPH,E,wFAUJI,OAAA,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,OAAQC,EADT,EACSA,QAChB,OACE,kBAAC,IAAD,CAAQA,QAASA,GAAUD,EAAON,U,GAblBQ,IAAMC,WAAtBV,EAKGW,aAAe,CACpBJ,OAAQR,EAAQ,SAASC,QACzBQ,QAAS,c,IAWPN,E,YAWJ,WAAYI,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKM,MAAQ,CACXC,SAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,MALF,E,kCAQnBD,YAAA,WACET,KAAKW,SAAS,CACZH,SAAS,IAEXR,KAAKC,MAAMW,c,EAGbb,OAAA,WACE,OACE,yBAAKc,UAAU,SACb,kBAAC,IAAD,CAAQC,KAAK,UAAUX,QAASH,KAAKS,aAClCT,KAAKC,MAAMC,OAAOJ,S,GA9BTM,IAAMC,WAApBR,EAMGS,aAAe,CACpBJ,OAAQR,EAAQ,SAASG,MACzBe,WAAY,cA6BhBf,EAAMkB,OAAS,SAACd,QAAe,IAAfA,MAAQ,IACtB,IAAMe,EAAYC,SAASC,cAAc,OACzCD,SAASE,KAAKC,YAAYJ,GAE1B,IAKMK,EAAY9B,EAAgBU,EAAO,SAASC,OAClDoB,SAASvB,OAAO,kBAACF,EAAD,CAAOe,WANJ,WACjBU,SAASC,uBAAuBP,GAChCQ,QAAQL,KAAKM,YAAYT,IAIoBd,OAAQmB,IAAeL,IAGxE,IAAMU,EAAarC,EAAOM,GACpBgC,EAAWtC,EAAOQ,GAEH+B,E,YACnB,WAAY3B,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKM,MAAQ,CACXsB,SAAU,SAGZ,EAAKC,YAAc,EAAKA,YAAYpB,KAAjB,MACnB,EAAKqB,qBAAuB,EAAKA,qBAAqBrB,KAA1B,MAPX,E,kCAUnBoB,YAAA,WACEH,EAASZ,U,EAGXgB,qBAAA,SAAqBF,GACnB7B,KAAKW,SAAS,CACZkB,c,EAIJ9B,OAAA,WAAU,IACA8B,EAAa7B,KAAKO,MAAlBsB,SAER,OACE,kBAAC,IAAD,CAAgB3B,OAAQR,EAAQmC,IAC9B,6BACE,yBAAKhB,UAAU,mBACb,kBAAC,IAAD,CAAQmB,MAAOH,EAAUI,SAAUjC,KAAK+B,sBACtC,kBAACvC,EAAD,CAAQwC,MAAM,SAAd,SACA,kBAACxC,EAAD,CAAQwC,MAAM,SAAd,WAGJ,kBAACN,EAAD,CAAYvB,QAASH,KAAK8B,iB,GAjCD1B,IAAMC,WAwC1B6B,EAAgBC","file":"70-f139d2a2da21d8d94204.js","sourcesContent":["import React from 'react'\nimport { ConfigProvider, Button, Select } from '@alicloud/console-components'\nimport PropTypes from 'prop-types'\nimport'./demo3.less'\n\nconst { config, getContextProps } = ConfigProvider\nconst { Option } = Select\n\nconst locales = {\n  'zh-cn': {\n    ClickMe: {\n      clickMe: '点我！'\n    },\n    Toast: {\n      close: '关闭'\n    }\n  },\n  'en-us': {\n    ClickMe: {\n      clickMe: 'click me!'\n    },\n    Toast: {\n      close: 'close'\n    }\n  }\n}\n\nclass ClickMe extends React.Component {\n  static propTypes = {\n    locale: PropTypes.object,\n    onClick: PropTypes.func\n    }\n  static defaultProps = {\n    locale: locales['zh-cn'].ClickMe,\n    onClick: () => {}\n  }\n\n  render() {\n    const { locale, onClick } = this.props;\n    return (\n      <Button onClick={onClick}>{locale.clickMe}</Button>\n    )\n  }\n}\n\nclass Toast extends React.Component {\n  static propTypes = {\n    locale: PropTypes.object,\n    afterClose: PropTypes.func\n  }\n\n  static defaultProps = {\n    locale: locales['zh-cn'].Toast,\n    afterClose: () => {}\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    }\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  handleClose() {\n    this.setState({\n      visible: false\n    })\n    this.props.afterClose();\n  }\n\n  render() {\n    return (\n      <div className=\"toast\">\n        <Button type=\"primary\" onClick={this.handleClose}>\n          {this.props.locale.close}\n        </Button>\n      </div>\n    )\n  }\n}\n\nToast.create = (props = {}) => {\n  const mountNode = document.createElement('div')\n  document.body.appendChild(mountNode)\n\n  const closeChain = () => {\n    ReactDOM.unmountComponentAtNode(mountNode)\n    ocument.body.removeChild(mountNode)\n  }\n\n  const newLocale = getContextProps(props, 'Toast').locale\n  ReactDOM.render(<Toast afterClose={closeChain} locale={newLocale} />, mountNode)\n}\n\nconst NewClickMe = config(ClickMe)\nconst NewToast = config(Toast)\n\nexport default class Demo2 extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      language: 'zh-cn'\n    }\n\n    this.handleClick = this.handleClick.bind(this)\n    this.handleChangeLanguage = this.handleChangeLanguage.bind(this)\n  }\n\n  handleClick() {\n    NewToast.create()\n  }\n\n  handleChangeLanguage(language) {\n    this.setState({\n      language\n    })\n  }\n\n  render() {\n    const { language } = this.state\n\n    return (\n      <ConfigProvider locale={locales[language]}>\n        <div>\n          <div className=\"select-language\">\n            <Select value={language} onChange={this.handleChangeLanguage}>\n              <Option value=\"zh-cn\">zh-cn</Option>\n              <Option value=\"en-us\">en-us</Option>\n            </Select>\n          </div>\n          <NewClickMe onClick={this.handleClick} />\n        </div>\n      </ConfigProvider>\n    )\n  }\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}