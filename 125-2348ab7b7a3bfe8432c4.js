(window.webpackJsonp=window.webpackJsonp||[]).push([[125],{Kkxk:function(n,e,t){"use strict";t.r(e),t.d(e,"demoMeta",(function(){return s})),t.d(e,"_demoSrcFiles",(function(){return c}));var r=t("mXGw"),a=t.n(r),o=t("BgHK"),l=t("UutA");e.default=function(){var n=o.Field.useField({parseName:!0,values:{objWithDefaults:{a:1,b:2}}}),e=n.init,t=n.reset,r=n.resetToDefault;return a.a.createElement(i,null,a.a.createElement("h3",null,"Object transfer"),"obj.b: ",a.a.createElement(o.Input,e("obj.b",{initValue:"test1"})),"   obj.c:"," ",a.a.createElement(o.Input,e("obj.c",{initValue:"test2"})),a.a.createElement("br",null),a.a.createElement("h3",null,"Array transfer"),"arr.0: ",a.a.createElement(o.Input,e("arr.0",{initValue:"0"})),"   arr.1:"," ",a.a.createElement(o.Input,e("arr.1",{initValue:"1"})),a.a.createElement("br",null),a.a.createElement("br",null),a.a.createElement("h3",null,"Object with Defaults"),"objWithDefaults.a: ",a.a.createElement(o.Input,e("objWithDefaults.a")),"   objWithDefaults.b: ",a.a.createElement(o.Input,e("objWithDefaults.b")),a.a.createElement("br",null),a.a.createElement("br",null),"result:",a.a.createElement("pre",null,JSON.stringify(n.getValues(),null,2)),a.a.createElement("br",null),a.a.createElement("br",null),a.a.createElement(o.Button,{type:"primary",onClick:function(){console.log(n.getValues())}},"getValues"),a.a.createElement(o.Button,{onClick:function(){n.setValues({obj:{b:"b",c:"c"},arr:["first","second"],objWithDefaults:{a:100,b:200}})}},"setValues"),a.a.createElement(o.Button,{onClick:function(){return t()}},"reset"),a.a.createElement(o.Button,{onClick:function(){return r()}},"resetToDefault"))};var s={zhName:"结构化解析",zhDesc:"把 `init('obj.b')` 的数据转换成 `obj={obj:{b:'value'}}`；\n\n\t把 `init('arr.0')` 的数据转换成 `obj={arr:['']}`；"},i=l.default.div.withConfig({displayName:"demo10__SWrapper",componentId:"anc974-0"})([".next-btn{margin-right:8px;}"]),c={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo10";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo10.js":"import React from 'react'\nimport { Input, Button, Field } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst Demo10 = () => {\n  const myField = Field.useField({\n    parseName: true,\n    values: {\n      objWithDefaults: {\n        a: 1,\n        b: 2,\n      },\n    },\n  })\n\n  const onGetValue = () => {\n    console.log(myField.getValues())\n  }\n\n  const onSetValue = () => {\n    myField.setValues({\n      obj: {\n        b: 'b',\n        c: 'c',\n      },\n      arr: ['first', 'second'],\n      objWithDefaults: {\n        a: 100,\n        b: 200,\n      },\n    })\n  }\n  const { init, reset, resetToDefault } = myField\n\n  return (\n    <SWrapper>\n      <h3>Object transfer</h3>\n      obj.b: <Input {...init('obj.b', { initValue: 'test1' })} /> &nbsp; obj.c:{' '}\n      <Input {...init('obj.c', { initValue: 'test2' })} />\n      <br />\n      <h3>Array transfer</h3>\n      arr.0: <Input {...init('arr.0', { initValue: '0' })} /> &nbsp; arr.1:{' '}\n      <Input {...init('arr.1', { initValue: '1' })} />\n      <br />\n      <br />\n      <h3>Object with Defaults</h3>\n      objWithDefaults.a: <Input {...init('objWithDefaults.a')} /> &nbsp;\n      objWithDefaults.b: <Input {...init('objWithDefaults.b')} />\n      <br />\n      <br />\n      result:\n      <pre>{JSON.stringify(myField.getValues(), null, 2)}</pre>\n      <br />\n      <br />\n      <Button type=\"primary\" onClick={onGetValue}>\n        getValues\n      </Button>\n      <Button onClick={onSetValue}>setValues</Button>\n      <Button onClick={() => reset()}>reset</Button>\n      <Button onClick={() => resetToDefault()}>resetToDefault</Button>\n    </SWrapper>\n  )\n}\n\nexport default Demo10\n\nexport const demoMeta = {\n  zhName: `结构化解析`,\n\n  zhDesc: `把 \\`init('obj.b')\\` 的数据转换成 \\`obj={obj:{b:'value'}}\\`；\n\n\t把 \\`init('arr.0')\\` 的数据转换成 \\`obj={arr:['']}\\`；`,\n}\nconst SWrapper = styled.div`\n  .next-btn {\n    margin-right: 8px;\n  }\n`\n","demoMeta.json":'{"entryPath":"src/demo/demo10.js"}'}}}]);
//# sourceMappingURL=125-2348ab7b7a3bfe8432c4.js.map