{"version":3,"sources":["webpack:///../packages/rc-slide-panel/stories/utils.tsx","webpack:///../packages/rc-slide-panel/stories/SlidePanel/index.tsx"],"names":["Option","Select","useBoolSetter","title","init","useState","flag","setFlag","value","onChange","v","undefined","placeholder","SlidePanelDemo","active","setActive","onClose","onCloseSetterUI","text","setText","Content","onClick","useTextSetter","titleSetterUI","TextArea","useTextAreaSetter","content","contentSetterUI","onCancel","onCancelSetterUI","onOk","onOkSetterUI","isProcessing","setIsProcessing","isShowing","onMaskClick","setTimeout","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"gKAIQA,EAAWC,SAAXD,OAsDKE,EAAgB,SAACC,EAAwBC,GAAmB,MAC/CC,mBAA8BD,GAA/CE,EADgE,KAC1DC,EAD0D,KAEvE,MAAO,CACLD,EACAC,EACA,kBAAC,IAAD,CAAMJ,MAAOA,GACX,kBAAC,SAAD,CACEK,MAAOF,EACPG,SAAU,SAAAC,GACeH,EAAb,cAANG,OAA2BC,EAClBD,IAEfE,YAAY,aAEZ,kBAACZ,EAAD,CAAQQ,MAAM,aAAd,aACA,kBAACR,EAAD,CAAQQ,OAAK,GAAb,QACA,kBAACR,EAAD,CAAQQ,OAAO,GAAf,aC1ER,8CAoEeK,UA/DsB,WAAM,MACbR,oBAAS,GAA9BS,EADkC,KAC1BC,EAD0B,OAEJb,EAAc,WAAW,GAAvDc,EAFkC,KAEvBC,EAFuB,ODGd,SAACd,EAAwBC,GAAkB,MAC9CC,mBAA6BD,GAA9Cc,EAD+D,KACzDC,EADyD,KAEtE,MAAO,CACLD,EACAC,EACA,kBAAC,IAAD,CAAMhB,MAAOA,GACX,kBAAC,IAAKiB,QAAN,KACE,kBAAC,QAAD,CACEZ,MAAOU,EACPT,SAAU,SAAAC,GACRS,EAAQT,MAGZ,kBAAC,SAAD,CACEW,QAAS,WACPF,OAAQR,KAFZ,mBCb2BW,CAAc,QAAS,SAAjDnB,EAHkC,KAGzBoB,EAHyB,OD4BV,SAACpB,EAAwBC,GAAkB,MAClDC,mBAA6BD,GAA9Cc,EADmE,KAC7DC,EAD6D,KAE1E,MAAO,CACLD,EACAC,EACA,kBAAC,IAAD,CAAMhB,MAAOA,GACX,kBAAC,IAAKiB,QAAN,KACE,kBAAC,QAAMI,SAAP,CACEhB,MAAOU,EACPT,SAAU,SAAAC,GACRS,EAAQT,MAGZ,kBAAC,SAAD,CACEW,QAAS,WACPF,OAAQR,KAFZ,mBCrC+Bc,CAAkB,UAAW,WAA3DC,EAJkC,KAIvBC,EAJuB,OAKFzB,EAAc,YAAY,GAA1D0B,EALkC,KAKtBC,EALsB,OAMV3B,EAAc,QAAQ,GAA9C4B,EANkC,KAM1BC,EAN0B,OAOD1B,oBAAS,GAA1C2B,EAPkC,KAOpBC,EAPoB,KASzC,OACE,oCACE,kBAAC,SAAD,CACEZ,QAAS,WACPN,GAAU,KAFd,QAQCQ,EACAI,EACAV,EACAY,EACAE,EAED,kBAAC,IAAD,CACE5B,MAAOA,EACP+B,UAAWpB,EACXqB,YAAa,WACXpB,GAAU,IAEZC,QACEA,EACI,WACED,GAAU,SAEZJ,EAENiB,SACEA,EACI,WACEb,GAAU,SAEZJ,EAENmB,KACEA,EACI,WACEG,GAAgB,GAChBG,YAAW,WACTH,GAAgB,KACf,WAELtB,EAENqB,aAAcA,GAEbN,KAzDT,IAiEeW,EAAgBC","file":"35-d5b7fa323aa2131b9a8e.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Input, Select } from '@alicloud/console-components'\nimport Info from '@alicloud/console-components-info'\n\nconst { Option } = Select\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nexport const useTextSetter = (title: React.ReactNode, init?: string) => {\n  const [text, setText] = useState<string | undefined>(init)\n  return [\n    text,\n    setText,\n    <Info title={title}>\n      <Info.Content>\n        <Input\n          value={text}\n          onChange={v => {\n            setText(v)\n          }}\n        />\n        <Button\n          onClick={() => {\n            setText(undefined)\n          }}\n        >\n          重置为undefined\n        </Button>\n      </Info.Content>\n    </Info>,\n  ]\n}\n\nexport const useTextAreaSetter = (title: React.ReactNode, init?: string) => {\n  const [text, setText] = useState<string | undefined>(init)\n  return [\n    text,\n    setText,\n    <Info title={title}>\n      <Info.Content>\n        <Input.TextArea\n          value={text}\n          onChange={v => {\n            setText(v)\n          }}\n        />\n        <Button\n          onClick={() => {\n            setText(undefined)\n          }}\n        >\n          重置为undefined\n        </Button>\n      </Info.Content>\n    </Info>,\n  ]\n}\n\nexport const useBoolSetter = (title: React.ReactNode, init?: boolean) => {\n  const [flag, setFlag] = useState<boolean | undefined>(init)\n  return [\n    flag,\n    setFlag,\n    <Info title={title}>\n      <Select\n        value={flag}\n        onChange={v => {\n          if (v === 'undefined') setFlag(undefined)\n          else setFlag(v)\n        }}\n        placeholder=\"undefined\"\n      >\n        <Option value=\"undefined\">undefined</Option>\n        <Option value>true</Option>\n        <Option value={false}>false</Option>\n      </Select>\n    </Info>,\n  ]\n}\n","import React, { useState } from 'react'\nimport { Button } from '@alicloud/console-components'\nimport SlidePanel from '@alicloud/console-components-slide-panel'\nimport { useTextSetter, useBoolSetter, useTextAreaSetter } from '../utils'\n\nconst SlidePanelDemo: React.FC<{}> = () => {\n  const [active, setActive] = useState(false)\n  const [onClose, , onCloseSetterUI] = useBoolSetter('onClose', true)\n  const [title, , titleSetterUI] = useTextSetter('title', 'title')\n  const [content, , contentSetterUI] = useTextAreaSetter('content', 'content')\n  const [onCancel, , onCancelSetterUI] = useBoolSetter('onCancel', true)\n  const [onOk, , onOkSetterUI] = useBoolSetter('onOk', true)\n  const [isProcessing, setIsProcessing] = useState(false)\n\n  return (\n    <>\n      <Button\n        onClick={() => {\n          setActive(true)\n        }}\n      >\n        open\n      </Button>\n\n      {titleSetterUI}\n      {contentSetterUI}\n      {onCloseSetterUI}\n      {onCancelSetterUI}\n      {onOkSetterUI}\n\n      <SlidePanel\n        title={title}\n        isShowing={active}\n        onMaskClick={() => {\n          setActive(false)\n        }}\n        onClose={\n          onClose\n            ? () => {\n                setActive(false)\n              }\n            : undefined\n        }\n        onCancel={\n          onCancel\n            ? () => {\n                setActive(false)\n              }\n            : undefined\n        }\n        onOk={\n          onOk\n            ? () => {\n                setIsProcessing(true)\n                setTimeout(() => {\n                  setIsProcessing(false)\n                }, 2000)\n              }\n            : undefined\n        }\n        isProcessing={isProcessing}\n      >\n        {content}\n      </SlidePanel>\n    </>\n  )\n}\n\nexport default SlidePanelDemo\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}