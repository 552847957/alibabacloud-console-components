(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{ZOSG:function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return s})),t.d(n,"_demoSrcFiles",(function(){return d}));var a=t("mXGw"),l=t.n(a),o=t("BgHK"),r=[{id:"001",time:1951,title:{name:"The Old Man and the Sea"}},{id:"002",time:1925,title:{name:"the great gatsby"}},{id:"003",time:1719,title:{name:"The adventures of Robinson Crusoe"}}],i=function(e){var n=e.defaultTitle,t=Object(a.useState)(n),r=t[0],i=t[1],s=Object(a.useState)(!1),d=s[0],c=s[1];Object(a.useEffect)((function(){i(n)}),[n]);return d?l.a.createElement(o.Input,{autoFocus:!0,defaultValue:r,onKeyDown:function(e){var n=e.keyCode;n>36&&n<41&&e.stopPropagation()},onBlur:function(e){i(e.target.value),c(!1)}}):l.a.createElement("span",{onDoubleClick:function(){c(!0)}},r)};n.default=function(){return l.a.createElement("div",null,l.a.createElement(o.Table,{dataSource:r},l.a.createElement(o.Table.Column,{title:"Id",dataIndex:"id"}),l.a.createElement(o.Table.Column,{title:"Title",dataIndex:"title.name",cell:function(e,n,t){return l.a.createElement(i,{defaultTitle:e})}}),l.a.createElement(o.Table.Column,{title:"Time",dataIndex:"time"})))};var s={zhName:"可编辑的表格",zhDesc:"单元格可编辑的表格（双击单元格进行编辑）"},d={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo24";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo24.js":"import React, { useState, useEffect } from 'react'\nimport { Table, Input } from '@alicloud/console-components'\n\nconst result = [\n  {\n    id: '001',\n    time: 1951,\n    title: { name: 'The Old Man and the Sea' },\n  },\n  {\n    id: '002',\n    time: 1925,\n    title: { name: 'the great gatsby' },\n  },\n  {\n    id: '003',\n    time: 1719,\n    title: { name: 'The adventures of Robinson Crusoe' },\n  },\n]\nconst EditablePane = props => {\n  const { defaultTitle } = props\n  const [cellTitle, setCellTitle] = useState(defaultTitle)\n  const [editable, setEditable] = useState(false)\n\n  useEffect(() => {\n    setCellTitle(defaultTitle)\n  }, [defaultTitle])\n\n  const onKeyDown = e => {\n    const { keyCode } = e\n    // Stop bubble up the events of keyUp, keyDown, keyLeft, and keyRight\n    if (keyCode > 36 && keyCode < 41) {\n      e.stopPropagation()\n    }\n  }\n\n  const onBlur = e => {\n    setCellTitle(e.target.value)\n    setEditable(false)\n  }\n\n  const onDblClick = () => {\n    setEditable(true)\n  }\n\n  if (editable) {\n    return (\n      <Input\n        autoFocus\n        defaultValue={cellTitle}\n        onKeyDown={onKeyDown}\n        onBlur={onBlur}\n      />\n    )\n  }\n  return <span onDoubleClick={onDblClick}>{cellTitle}</span>\n}\n\nconst Demo = () => {\n  const renderCell = (value, index, record) => {\n    return <EditablePane defaultTitle={value} />\n  }\n\n  return (\n    <div>\n      <Table dataSource={result}>\n        <Table.Column title=\"Id\" dataIndex=\"id\" />\n        <Table.Column title=\"Title\" dataIndex=\"title.name\" cell={renderCell} />\n        <Table.Column title=\"Time\" dataIndex=\"time\" />\n      </Table>\n    </div>\n  )\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: `可编辑的表格`,\n  zhDesc: `单元格可编辑的表格（双击单元格进行编辑）`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo24.js"}'}}}]);
//# sourceMappingURL=312-76b01b9fa11f8d4b4455.js.map