(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{Sa9h:function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return u})),t.d(n,"_demoSrcFiles",(function(){return h}));t("lQyR"),t("YhIr"),t("4aJ6"),t("t91x"),t("+jjx"),t("ABKx"),t("W1QL");var a=t("mXGw"),o=t.n(a),l=t("BgHK"),c=t("UutA");function s(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var r=l.Menu.CheckboxItem,i=l.Menu.RadioItem,d=l.Menu.Divider,m=["male","female"],p=["football","basketball","volleyball"];n.default=function(){var e=Object(a.useState)("male"),n=e[0],t=e[1],l=Object(a.useState)([]),c=l[0],u=l[1];return o.a.createElement(b,null,m.map((function(e){return o.a.createElement(i,{key:e,checked:n===e,onChange:function(){t(e)}},e)})),o.a.createElement(d,{key:"divider"}),p.map((function(e){return o.a.createElement(r,{key:e,checked:c.indexOf(e)>-1,onChange:function(n){var t,a,o,l;t=e,a=n,l=c.indexOf(t),a&&-1===l?o=c.concat(t):!a&&l>-1&&(o=[].concat(s(c.slice(0,l)),s(c.slice(l+1)))),o&&u(o)}},e)})))};var u={zhName:"自定义菜单项选择",zhDesc:"展示自定义组合菜单项可选的用法。"},b=Object(c.default)(l.Menu).withConfig({displayName:"demo6__SMenu",componentId:"horpe7-0"})(["width:200px;"]),h={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo6";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo6.js":"import React, { useState } from 'react'\nimport { Menu } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst { CheckboxItem, RadioItem, Divider } = Menu\n\nconst initsexs = ['male', 'female']\nconst initballs = ['football', 'basketball', 'volleyball']\n\nconst Demo = () => {\n  const [selectedSex, setSelectedSex] = useState('male')\n  const [balls, setBalls] = useState([])\n\n  const handleSexCheck = key => {\n    setSelectedSex(key)\n  }\n\n  const handleBallCheck = (key, check) => {\n    let newKeys\n    const index = balls.indexOf(key)\n    if (check && index === -1) {\n      newKeys = balls.concat(key)\n    } else if (!check && index > -1) {\n      newKeys = [...balls.slice(0, index), ...balls.slice(index + 1)]\n    }\n\n    if (newKeys) {\n      setBalls(newKeys)\n    }\n  }\n\n  return (\n    <SMenu>\n      {initsexs.map(sex => (\n        <RadioItem\n          key={sex}\n          checked={selectedSex === sex}\n          onChange={() => {\n            handleSexCheck(sex)\n          }}\n        >\n          {sex}\n        </RadioItem>\n      ))}\n      <Divider key=\"divider\" />\n      {initballs.map(ball => (\n        <CheckboxItem\n          key={ball}\n          checked={balls.indexOf(ball) > -1}\n          onChange={checked => {\n            handleBallCheck(ball, checked)\n          }}\n        >\n          {ball}\n        </CheckboxItem>\n      ))}\n    </SMenu>\n  )\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: '自定义菜单项选择',\n  zhDesc: `展示自定义组合菜单项可选的用法。`,\n}\n\nconst SMenu = styled(Menu)`\n  width: 200px;\n`\n","demoMeta.json":'{"entryPath":"src/demo/demo6.js"}'}}}]);
//# sourceMappingURL=170-61e2734872fc4201e307.js.map