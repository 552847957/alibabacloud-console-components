(window.webpackJsonp=window.webpackJsonp||[]).push([[351],{"NH/8":function(e,n,l){"use strict";l.r(n),l.d(n,"_demoSrcFiles",(function(){return g}));var o=l("mXGw"),t=l.n(o),r=l("BgHK"),a=r.Tag.Group,d=r.Tag.Colored,s=r.Tag.ColoredGroup;n.default=function(){return t.a.createElement("div",{className:"tag-list"},t.a.createElement("h4",null,"Use single Tag"),t.a.createElement("div",null,t.a.createElement(d,{type:"light-steel-blue"},"Light Steel Blue"),t.a.createElement(d,{type:"plum"},"Plum"),t.a.createElement(d,{type:"misty-rose"},"Misty Rose"),t.a.createElement(d,{type:"light-goldenrod-yellow"},"Light Goldenrod Yellow"),t.a.createElement(d,{type:"pale-green"},"Pale Green"),t.a.createElement(d,{type:"silver"},"Silver"),t.a.createElement(d,{type:"gray"},"Gray")),t.a.createElement("h4",null,"Use normal group"),t.a.createElement(a,null,t.a.createElement(d,{type:"light-steel-blue"},"Light Steel Blue"),t.a.createElement(d,{type:"plum"},"Plum"),t.a.createElement(d,{type:"misty-rose"},"Misty Rose"),t.a.createElement(d,{type:"light-goldenrod-yellow"},"Light Goldenrod Yellow"),t.a.createElement(d,{type:"pale-green"},"Pale Green")),t.a.createElement("h4",null,"Use colored group"),t.a.createElement(s,null,t.a.createElement(r.Tag,null,"Light Steel Blue"),t.a.createElement(r.Tag,null,"Plum"),t.a.createElement(r.Tag,null,"Misty Rose"),t.a.createElement(r.Tag,null,"Light Goldenrod Yellow"),t.a.createElement(r.Tag,null,"Pale Green"),t.a.createElement(d,null,"Light Steel Blue"),t.a.createElement(d,null,"Plum"),t.a.createElement(d,null,"Misty Rose")))};var g={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/colored";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","src/demo/colored.js":'import React from \'react\'\nimport { Tag, Icon } from \'@alicloud/console-components\'\n\nconst { Group: TagGroup, Colored: ColoredTag, ColoredGroup } = Tag\n\nconst Demo1 = () => (\n\t<div className="tag-list">\n    <h4>Use single Tag</h4>\n    <div>\n      <ColoredTag type="light-steel-blue">Light Steel Blue</ColoredTag>\n      <ColoredTag type="plum">Plum</ColoredTag>\n      <ColoredTag type="misty-rose">Misty Rose</ColoredTag>\n      <ColoredTag type="light-goldenrod-yellow">Light Goldenrod Yellow</ColoredTag>\n      <ColoredTag type="pale-green">Pale Green</ColoredTag>\n      <ColoredTag type="silver">Silver</ColoredTag>\n      <ColoredTag type="gray">Gray</ColoredTag>\n    </div>\n    <h4>Use normal group</h4>\n    <TagGroup>\n      <ColoredTag type="light-steel-blue">Light Steel Blue</ColoredTag>\n      <ColoredTag type="plum">Plum</ColoredTag>\n      <ColoredTag type="misty-rose">Misty Rose</ColoredTag>\n      <ColoredTag type="light-goldenrod-yellow">Light Goldenrod Yellow</ColoredTag>\n      <ColoredTag type="pale-green">Pale Green</ColoredTag>\n    </TagGroup>\n    <h4>Use colored group</h4>\n    <ColoredGroup>\n      <Tag>Light Steel Blue</Tag>\n      <Tag>Plum</Tag>\n      <Tag>Misty Rose</Tag>\n      <Tag>Light Goldenrod Yellow</Tag>\n      <Tag>Pale Green</Tag>\n      <ColoredTag>Light Steel Blue</ColoredTag>\n      <ColoredTag>Plum</ColoredTag>\n      <ColoredTag>Misty Rose</ColoredTag>\n    </ColoredGroup>\n  </div>\n )\n\nexport default Demo1\n\n',"demoMeta.json":'{"entryPath":"src/demo/colored.js"}'}}}]);
//# sourceMappingURL=351-42c4f540492c077f160b.js.map