{"affix":"### Affix\n\n| 参数           | 说明                                                                                                                     | 类型       | 默认值          |\n| ------------ | ---------------------------------------------------------------------------------------------------------------------- | -------- | ------------ |\n| container    | 设置 Affix 需要监听滚动事件的容器元素<br><br>**签名**:<br>Function() => ReactElement<br>**返回值**:<br>{ReactElement} 目标容器元素的实例<br>        | Function | () => window |\n| offsetTop    | 距离窗口顶部达到指定偏移量后触发                                                                                                       | Number   | -            |\n| offsetBottom | 距离窗口底部达到制定偏移量后触发                                                                                                       | Number   | -            |\n| onAffix      | 当元素的样式发生固钉样式变化时触发的回调函数<br><br>**签名**:<br>Function(affixed: Boolean) => void<br>**参数**:<br>_affixed_: {Boolean} 元素是否被固钉 | Function | func.noop    |\n| useAbsolute  | 是否启用绝对布局实现 affix                                                                                                       | Boolean  | -            |\n","animate":"### Animate\n\n| 参数              | 说明                                                                                                                                                | 类型                                  | 默认值      |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------- | -------- |\n| animation       | 动画 className                                                                                                                                      | String/Object                       | -        |\n| animationAppear | 子元素第一次挂载时是否执行动画                                                                                                                                   | Boolean                             | true     |\n| component       | 包裹子元素的标签                                                                                                                                          | any                                 | 'div'    |\n| singleMode      | 是否只有单个子元素，如果有多个子元素，请设置为 false                                                                                                                     | Boolean                             | true     |\n| children        | 子元素                                                                                                                                               | ReactElement/Array&lt;ReactElement> | -        |\n| beforeAppear    | 执行第一次挂载动画前触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                         | Function                            | () => {} |\n| onAppear        | 执行第一次挂载动画，添加 xxx-appear-active 类名后触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素 | Function                            | () => {} |\n| afterAppear     | 执行完第一次挂载动画后触发的函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                          | Function                            | () => {} |\n| beforeEnter     | 执行进场动画前触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                            | Function                            | () => {} |\n| onEnter         | 执行进场动画，添加 xxx-enter-active 类名后触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素     | Function                            | () => {} |\n| afterEnter      | 执行完进场动画后触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                           | Function                            | () => {} |\n| beforeLeave     | 执行离场动画前触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                            | Function                            | () => {} |\n| onLeave         | 执行离场动画，添加 xxx-leave-active 类名后触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素     | Function                            | () => {} |\n| afterLeave      | 执行完离场动画后触发的回调函数<br><br>**签名**:<br>Function(node: HTMLElement) => void<br>**参数**:<br>_node_: {HTMLElement} \b执行动画的 dom 元素                           | Function                            | () => {} |\n","badge":"### Badge\n\n| 参数            | 说明                                                      | 类型            | 默认值   |\n| ------------- | ------------------------------------------------------- | ------------- | ----- |\n| children      | 徽章依托的内容                                                 | ReactNode     | -     |\n| count         | 展示的数字，大于 overflowCount 时显示为 ${overflowCount}+，为 0 时默认隐藏 | Number/String | 0     |\n| showZero      | 当count为0时，是否显示count                                     | Boolean       | false |\n| content       | 自定义节点内容                                                 | ReactNode     | -     |\n| overflowCount | 展示的封顶的数字                                                | Number/String | 99    |\n| dot           | 不展示数字，只展示一个小红点                                          | Boolean       | false |\n","balloon":"### Balloon\n\n| 参数                   | 说明                                                                                                                                                                                                                                              | 类型             | 默认值                                       |\n| -------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- | ----------------------------------------- |\n| children             | 浮层的内容                                                                                                                                                                                                                                           | any            | -                                         |\n| type                 | 样式类型<br><br>**可选值**:<br>'normal', 'primary'                                                                                                                                                                                                     | Enum           | 'normal'                                  |\n| visible              | 弹层当前显示的状态                                                                                                                                                                                                                                       | Boolean        | -                                         |\n| defaultVisible       | 弹层默认显示的状态                                                                                                                                                                                                                                       | Boolean        | false                                     |\n| onVisibleChange      | 弹层在显示和隐藏触发的事件<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否隐藏和显示<br>_type_: {String} 触发弹层显示或隐藏的来源， closeClick 表示由自带的关闭按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function       | func.noop                                 |\n| alignEdge            | 弹出层对齐方式, 是否为边缘对齐                                                                                                                                                                                                                                | Boolean        | false                                     |\n| closable             | 是否显示关闭按钮                                                                                                                                                                                                                                        | Boolean        | true                                      |\n| align                | 弹出层位置<br><br>**可选值**:<br>'t'(上)<br>'r'(右)<br>'b'(下)<br>'l'(左)<br>'tl'(上左)<br>'tr'(上右)<br>'bl'(下左)<br>'br'(下右)<br>'lt'(左上)<br>'lb'(左下)<br>'rt'(右上)<br>'rb'(右下 及其 两两组合)                                                                           | Enum           | 'b'                                       |\n| offset               | 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量<br>e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px                                                                                                                                       | Array          | [0, 0]                                    |\n| trigger              | 触发元素                                                                                                                                                                                                                                            | any            | &lt;span />                               |\n| triggerType          | 触发行为<br>鼠标悬浮, 鼠标点击('hover','click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若弹窗内容有复杂交互请使用click                                                                                                                                            | String/Array   | 'hover'                                   |\n| onClose              | 任何visible为false时会触发的事件<br><br>**签名**:<br>Function() => void                                                                                                                                                                                     | Function       | func.noop                                 |\n| needAdjust           | 是否进行自动位置调整                                                                                                                                                                                                                                      | Boolean        | false                                     |\n| delay                | 弹层在触发以后的延时显示, 单位毫秒 ms                                                                                                                                                                                                                           | Number         | -                                         |\n| afterClose           | 浮层关闭后触发的事件, 如果有动画，则在动画结束后触发<br><br>**签名**:<br>Function() => void                                                                                                                                                                                | Function       | func.noop                                 |\n| shouldUpdatePosition | 强制更新定位信息                                                                                                                                                                                                                                        | Boolean        | -                                         |\n| autoFocus            | 弹层出现后是否自动focus到内部第一个元素                                                                                                                                                                                                                          | Boolean        | true                                      |\n| safeNode             | 安全节点:对于triggetType为click的浮层,会在点击除了浮层外的其它区域时关闭浮层.safeNode用于添加不触发关闭的节点, 值可以是dom节点的id或者是节点的dom对象                                                                                                                                                   | String         | undefined                                 |\n| safeId               | 用来指定safeNode节点的id，和safeNode配合使用                                                                                                                                                                                                                 | String         | null                                      |\n| animation            | 配置动画的播放方式                                                                                                                                                                                                                                       | Object/Boolean | {     in: 'zoomIn',     out: 'zoomOut', } |\n| cache                | 弹层的dom节点关闭时是否删除                                                                                                                                                                                                                                 | Boolean        | false                                     |\n| popupContainer       | 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。                                                                                                                                                                                                             | any            | -                                         |\n| popupStyle           | 弹层组件style，透传给Popup                                                                                                                                                                                                                              | Object         | {}                                        |\n| popupClassName       | 弹层组件className，透传给Popup                                                                                                                                                                                                                          | String         | ''                                        |\n| popupProps           | 弹层组件属性，透传给Popup                                                                                                                                                                                                                                 | Object         | {}                                        |\n| followTrigger        | 是否跟随滚动                                                                                                                                                                                                                                          | Boolean        | -                                         |\n| id                   | 弹层id, 传入值才会支持无障碍                                                                                                                                                                                                                                | String         | -                                         |\n\n### Balloon.Tooltip\n\n| 参数             | 说明                                                                                                                                                                    | 类型           | 默认值         |\n| -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ----------- |\n| children       | tooltip的内容                                                                                                                                                            | any          | -           |\n| align          | 弹出层位置<br><br>**可选值**:<br>'t'(上)<br>'r'(右)<br>'b'(下)<br>'l'(左)<br>'tl'(上左)<br>'tr'(上右)<br>'bl'(下左)<br>'br'(下右)<br>'lt'(左上)<br>'lb'(左下)<br>'rt'(右上)<br>'rb'(右下 及其 两两组合) | Enum         | 'b'         |\n| trigger        | 触发元素                                                                                                                                                                  | any          | &lt;span /> |\n| triggerType    | 触发行为<br>鼠标悬浮,  鼠标点击('hover', 'click')或者它们组成的数组，如 ['hover', 'click'], 强烈不建议使用'focus'，若有复杂交互，推荐使用triggerType为click的Balloon组件                                            | String/Array | 'hover'     |\n| popupStyle     | 弹层组件style，透传给Popup                                                                                                                                                    | Object       | -           |\n| popupClassName | 弹层组件className，透传给Popup                                                                                                                                                | String       | -           |\n| popupProps     | 弹层组件属性，透传给Popup                                                                                                                                                       | Object       | -           |\n| pure           | 是否pure render                                                                                                                                                         | Boolean      | -           |\n| popupContainer | 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数。                                                                                                                                   | any          | -           |\n| followTrigger  | 是否跟随滚动                                                                                                                                                                | Boolean      | -           |\n| id             | 弹层id, 传入值才会支持无障碍                                                                                                                                                      | String       | -           |\n| delay          | 如果需要让 Tooltip 内容可被点击，可以设置这个参数，例如 100                                                                                                                                  | Number       | 0           |\n","breadcrumb":"### Breadcrumb\n\n| 参数        | 说明                                          | 类型              | 默认值                            |\n| --------- | ------------------------------------------- | --------------- | ------------------------------ |\n| children  | 面包屑子节点，需传入 Breadcrumb.Item                  | custom          | -                              |\n| maxNode   | 面包屑最多显示个数，超出部分会被隐藏, 设置为 auto 会自动根据父元素的宽度适配。 | Number/Enum     | 100                            |\n| separator | 分隔符，可以是文本或 Icon                             | ReactNode       | &lt;Icon type=\"arrow-right\" /> |\n| component | 设置标签类型                                      | String/Function | 'nav'                          |\n\n### Breadcrumb.Item\n\n| 参数   | 说明                                           | 类型     | 默认值 |\n| ---- | -------------------------------------------- | ------ | --- |\n| link | 面包屑节点链接，如果设置这个属性，则该节点为`<a />` ，否则是`<span />` | String | -   |\n","button":"### Button\n\n| 参数        | 说明                                                                                                           | 类型       | 默认值      |\n| --------- | ------------------------------------------------------------------------------------------------------------ | -------- | -------- |\n| size      | 按钮的尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                          | Enum     | 'medium' |\n| type      | 按钮的类型<br><br>**可选值**:<br>'primary', 'secondary', 'normal'                                                    | Enum     | 'normal' |\n| iconSize  | 按钮中 Icon 的尺寸，用于替代 Icon 的默认大小<br><br>**可选值**:<br>'xxs', 'xs', 'small', 'medium', 'large', 'xl', 'xxl', 'xxxl' | Enum     | -        |\n| htmlType  | 当 component = 'button' 时，设置 button 标签的 type 值<br><br>**可选值**:<br>'submit', 'reset', 'button'                 | Enum     | 'button' |\n| component | 设置标签类型<br><br>**可选值**:<br>'button', 'a', 'div', 'span'                                                       | Enum     | 'button' |\n| loading   | 设置按钮的载入状态                                                                                                    | Boolean  | false    |\n| ghost     | 是否为幽灵按钮<br><br>**可选值**:<br>true, false, 'light', 'dark'                                                      | Enum     | false    |\n| text      | 是否为文本按钮                                                                                                      | Boolean  | false    |\n| warning   | 是否为警告按钮                                                                                                      | Boolean  | false    |\n| disabled  | 是否禁用                                                                                                         | Boolean  | false    |\n| onClick   | 点击按钮的回调<br><br>**签名**:<br>Function(e: Object) => void<br>**参数**:<br>_e_: {Object} Event Object               | Function | () => {} |\n\n### Button.Group\n\n| 参数   | 说明                  | 类型     | 默认值      |\n| ---- | ------------------- | ------ | -------- |\n| size | 统一设置 Button 组件的按钮大小 | String | 'medium' |\n","calendar":"### Calendar\n\n| 参数                   | 说明                                                                                                                                                                                                                                      | 类型               | 默认值                   |\n| -------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------- | --------------------- |\n| defaultValue         | 默认选中的日期（moment 对象）                                                                                                                                                                                                                      | custom           | -                     |\n| shape                | 展现形态<br><br>**可选值**:<br>'card', 'fullscreen', 'panel'                                                                                                                                                                                   | Enum             | 'fullscreen'          |\n| value                | 选中的日期值 (moment 对象)                                                                                                                                                                                                                      | custom           | -                     |\n| mode                 | 面板模式                                                                                                                                                                                                                                    | Enum             | -                     |\n| showOtherMonth       | 是否展示非本月的日期                                                                                                                                                                                                                              | Boolean          | true                  |\n| defaultVisibleMonth  | 默认展示的月份<br><br>**签名**:<br>Function() => void                                                                                                                                                                                            | Function         | -                     |\n| onSelect             | 选择日期单元格时的回调<br><br>**签名**:<br>Function(value: Object) => void<br>**参数**:<br>_value_: {Object} 对应的日期值 (moment 对象)                                                                                                                        | Function         | func.noop             |\n| onModeChange         | 面板模式变化时的回调<br><br>**签名**:<br>Function(mode: String) => void<br>**参数**:<br>_mode_: {String} 对应面板模式 date month year                                                                                                                       | Function         | func.noop             |\n| onVisibleMonthChange | 展现的月份变化时的回调<br><br>**签名**:<br>Function(value: Object, reason: String) => void<br>**参数**:<br>_value_: {Object} 显示的月份 (moment 对象)<br>_reason_: {String} 触发月份改变原因                                                                          | Function         | func.noop             |\n| dateCellRender       | 自定义日期渲染函数<br><br>**签名**:<br>Function(value: Object) => ReactNode<br>**参数**:<br>_value_: {Object} 日期值（moment对象）<br>**返回值**:<br>{ReactNode} null<br>                                                                                      | Function         | value => value.date() |\n| monthCellRender      | 自定义月份渲染函数<br><br>**签名**:<br>Function(calendarDate: Object) => ReactNode<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>**返回值**:<br>{ReactNode} null<br>                                                               | Function         | -                     |\n| yearRange            | 年份范围，[START_YEAR, END_YEAR] \\(只在shape 为 ‘card’, 'fullscreen' 下生效)                                                                                                                                                                       | Array&lt;Number> | -                     |\n| disabledDate         | 不可选择的日期<br><br>**签名**:<br>Function(calendarDate: Object, view: String) => Boolean<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} null<br> | Function         | -                     |\n","card":"### Card\n\n| 参数              | 说明                                                           | 类型            | 默认值   |\n| --------------- | ------------------------------------------------------------ | ------------- | ----- |\n| media           | 卡片的上的图片 / 视频                                                 | ReactNode     | -     |\n| title           | 卡片的标题                                                        | ReactNode     | -     |\n| subTitle        | 卡片的副标题                                                       | ReactNode     | -     |\n| actions         | 卡片操作组，位置在卡片底部                                                | ReactNode     | -     |\n| showTitleBullet | 是否显示标题的项目符号                                                  | Boolean       | true  |\n| showHeadDivider | 是否展示头部的分隔线                                                   | Boolean       | true  |\n| contentHeight   | 内容区域的固定高度                                                    | String/Number | 120   |\n| extra           | 标题区域的用户自定义内容                                                 | ReactNode     | -     |\n| free            | 是否开启自由模式，开启后card 将使用子组件配合使用, 设置此项后 title, subtitle, 等等属性都将失效 | Boolean       | false |\n\n### Card.Media\n\n| 参数        | 说明      | 类型     | 默认值   |\n| --------- | ------- | ------ | ----- |\n| component | 设置标签类型  | custom | 'div' |\n| image     | 背景图片地址  | String | -     |\n| src       | 媒体源文件地址 | String | -     |\n\n### Card.Header\n\n| 参数        | 说明           | 类型        | 默认值   |\n| --------- | ------------ | --------- | ----- |\n| title     | 卡片的标题        | ReactNode | -     |\n| subTitle  | 卡片的副标题       | ReactNode | -     |\n| extra     | 标题区域的用户自定义内容 | ReactNode | -     |\n| component | 设置标签类型       | custom    | 'div' |\n\n### Card.Content\n\n| 参数        | 说明     | 类型     | 默认值   |\n| --------- | ------ | ------ | ----- |\n| component | 设置标签类型 | custom | 'div' |\n\n### Card.Divider\n\n| 参数        | 说明        | 类型      | 默认值  |\n| --------- | --------- | ------- | ---- |\n| component | 设置标签类型    | custom  | 'hr' |\n| inset     | 分割线是否向内缩进 | Boolean | -    |\n\n### Card.Actions\n\n| 参数        | 说明     | 类型     | 默认值   |\n| --------- | ------ | ------ | ----- |\n| component | 设置标签类型 | custom | 'div' |\n","cascader-select":"### CascaderSelect\n\n| 参数                   | 说明| 类型                      | 默认值                                                                                     |\n| -------------------- || ----------------------- | --------------------------------------------------------------------------------------- |\n| size                 | 选择框大小<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                                                                                                                                                                                                                                                                                        | Enum                    | 'medium'                                                                                |\n| placeholder          | 选择框占位符| String                  | -                                                                                       |\n| disabled             | 是否禁用| Boolean                 | false                                                                                   |\n| hasArrow             | 是否有下拉箭头| Boolean                 | true                                                                                    |\n| hasBorder            | 是否有边框| Boolean                 | true                                                                                    |\n| hasClear             | 是否有清除按钮| Boolean                 | false                                                                                   |\n| label                | 自定义内联 label                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | ReactNode               | -                                                                                       |\n| readOnly             | 是否只读，只读模式下可以展开弹层但不能选                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean                 | -                                                                                       |\n| dataSource           | 数据源，结构可参考下方说明                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Array&lt;Object>        | \\[]                                                                                     |\n| defaultValue         | （非受控）默认值                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | String/Array&lt;String> | null                                                                                    |\n| value                | （受控）当前值| String/Array&lt;String> | -                                                                                       |\n| onChange             | 选中值改变时触发的回调函数<br><br>**签名**:<br>Function(value: String/Array, data: Object/Array, extra: Object) => void<br>**参数**:<br>_value_: {String/Array} 选中的值，单选时返回单个值，多选时返回数组<br>_data_: {Object/Array} 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点<br>_extra_: {Object} 额外参数<br>_extra.selectedPath_: {Array} 单选时选中的数据的路径<br>_extra.checked_: {Boolean} 多选时当前的操作是选中还是取消选中<br>_extra.currentData_: {Object} 多选时当前操作的数据<br>_extra.checkedData_: {Array} 多选时所有被选中的数据<br>_extra.indeterminateData_: {Array} 多选时半选的数据 | Function                | -                                                                                       |\n| defaultExpandedValue | 默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Array&lt;String>        | -                                                                                       |\n| expandTriggerType    | 展开触发的方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Enum                    | 'click'                                                                                 |\n| useVirtual           | 是否开启虚拟滚动                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Boolean                 | false                                                                                   |\n| multiple             | 是否多选| Boolean                 | false                                                                                   |\n| changeOnSelect       | 是否选中即发生改变, 该属性仅在单选模式下有效                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | Boolean                 | false                                                                                   |\n| canOnlyCheckLeaf     | 是否只能勾选叶子项的checkbox，该属性仅在多选模式下有效                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | Boolean                 | false                                                                                   |\n| checkStrictly        | 父子节点是否选中不关联                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Boolean                 | false                                                                                   |\n| listStyle            | 每列列表样式对象                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Object                  | -                                                                                       |\n| listClassName        | 每列列表类名| String                  | -                                                                                       |\n| displayRender        | 选择框单选时展示结果的自定义渲染函数<br><br>**签名**:<br>Function(label: Array) => ReactNode<br>**参数**:<br>_label_: {Array} 选中路径的文本数组<br>**返回值**:<br>{ReactNode} 渲染在选择框中的内容<br>                                                                                                                                                                                                                                                                                                                                                                | Function                | 单选时：labelPath => labelPath.join(' / ')；多选时：labelPath => labelPath[labelPath.length - 1] |\n| itemRender           | 渲染 item 内容的方法<br><br>**签名**:<br>Function(item: Object) => ReactNode<br>**参数**:<br>_item_: {Object} 渲染节点的item<br>**返回值**:<br>{ReactNode} item node<br>                                                                                                                                                                                                                                                                                                                                                                      | Function                | -                                                                                       |\n| showSearch           | 是否显示搜索框| Boolean                 | false                                                                                   |\n| filter               | 自定义搜索函数<br><br>**签名**:<br>Function(searchValue: String, path: Array) => Boolean<br>**参数**:<br>_searchValue_: {String} 搜索的关键字<br>_path_: {Array} 节点路径<br>**返回值**:<br>{Boolean} 是否匹配<br>                                                                                                                                                                                                                                                                                                                                     | Function                | 根据路径所有节点的文本值模糊匹配                                                                        |\n| resultRender         | 搜索结果自定义渲染函数<br><br>**签名**:<br>Function(searchValue: String, path: Array) => ReactNode<br>**参数**:<br>_searchValue_: {String} 搜索的关键字<br>_path_: {Array} 匹配到的节点路径<br>**返回值**:<br>{ReactNode} 渲染的内容<br>                                                                                                                                                                                                                                                                                                                        | Function                | 按照节点文本 a / b / c 的模式渲染                                                                  |\n| resultAutoWidth      | 搜索结果列表是否和选择框等宽                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | Boolean                 | true                                                                                    |\n| notFoundContent      | 无数据时显示内容                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | ReactNode               | 'Not Found'                                                                             |\n| loadData             | 异步加载数据函数<br><br>**签名**:<br>Function(data: Object) => void<br>**参数**:<br>_data_: {Object} 当前点击异步加载的数据                                                                                                                                                                                                                                                                                                                                                                                                                       | Function                | -                                                                                       |\n| header               | 自定义下拉框头部                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | ReactNode               | -                                                                                       |\n| footer               | 自定义下拉框底部                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | ReactNode               | -                                                                                       |\n| defaultVisible       | 初始下拉框是否显示                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | Boolean                 | false                                                                                   |\n| visible              | 当前下拉框是否显示                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | Boolean                 | -                                                                                       |\n| onVisibleChange      | 下拉框显示或关闭时触发事件的回调函数<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 是否显示<br>_type_: {String} 触发显示关闭的操作类型, fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发                                                                                                                                                                                                                                                                                                      | Function                | () => {}                                                                                |\n| popupStyle           | 下拉框自定义样式对象                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Object                  | -                                                                                       |\n| popupClassName       | 下拉框样式自定义类名                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | String                  | -                                                                                       |\n| popupContainer       | 下拉框挂载的容器节点                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | any                     | -                                                                                       |\n| popupProps           | 透传到 Popup 的属性对象                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | Object                  | {}                                                                                      |\n| followTrigger        | 是否跟随滚动| Boolean                 | -                                                                                       |\n| isPreview            | 是否为预览态| Boolean                 | -                                                                                       |\n| renderPreview        | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: Array) => void<br>**参数**:<br>_value_: {Array} 选择值 { label: , value:}                                                                                                                                                                                                                                                                                                                                                                                                         | Function                | -                                                                                       |\n\n<!-- api-extra-start -->\n\n### dataSource数据结构\n\n```js\nconst dataSource = [{\n    value: '2974',\n    label: '西安',\n    children: [\n        { value: '2975', label: '西安市', disabled: true },\n        { value: '2976', label: '高陵县', checkboxDisabled: true },\n        { value: '2977', label: '蓝田县' },\n        { value: '2978', label: '户县' },\n        { value: '2979', label: '周至县' },\n        { value: '4208', label: '灞桥区' },\n        { value: '4209', label: '长安区' },\n        { value: '4210', label: '莲湖区' },\n        { value: '4211', label: '临潼区' },\n        { value: '4212', label: '未央区' },\n        { value: '4213', label: '新城区' },\n        { value: '4214', label: '阎良区' },\n        { value: '4215', label: '雁塔区' },\n        { value: '4388', label: '碑林区' },\n        { value: '610127', label: '其它区' }\n    ]\n}];\n```\n\n数组中 Item 的自定义属性也会被透传到 onChange 函数的 data 参数中。\n\n<!-- api-extra-end -->\n","cascader":"### Cascader\n\n| 参数                   | 说明| 类型                      | 默认值                |\n| -------------------- || ----------------------- | ------------------ |\n| dataSource           | 数据源，结构可参考下方说明                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Array&lt;Object>        | \\[]                |\n| defaultValue         | （非受控）默认值                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | String/Array&lt;String> | null               |\n| value                | （受控）当前值| String/Array&lt;String> | -                  |\n| onChange             | 选中值改变时触发的回调函数<br><br>**签名**:<br>Function(value: String/Array, data: Object/Array, extra: Object) => void<br>**参数**:<br>_value_: {String/Array} 选中的值，单选时返回单个值，多选时返回数组<br>_data_: {Object/Array} 选中的数据，包括 value 和 label，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点<br>_extra_: {Object} 额外参数<br>_extra.selectedPath_: {Array} 单选时选中的数据的路径<br>_extra.checked_: {Boolean} 多选时当前的操作是选中还是取消选中<br>_extra.currentData_: {Object} 多选时当前操作的数据<br>_extra.checkedData_: {Array} 多选时所有被选中的数据<br>_extra.indeterminateData_: {Array} 多选时半选的数据 | Function                | -                  |\n| defaultExpandedValue | （非受控）默认展开值，如果不设置，组件内部会根据 defaultValue/value 进行自动设置                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | Array&lt;String>        | -                  |\n| expandedValue        | （受控）当前展开值                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  | Array&lt;String>        | -                  |\n| expandTriggerType    | 展开触发的方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Enum                    | 'click'            |\n| onExpand             | 展开时触发的回调函数<br><br>**签名**:<br>Function(expandedValue: Array) => void<br>**参数**:<br>_expandedValue_: {Array} 各列展开值的数组                                                                                                                                                                                                                                                                                                                                                                                                        | Function                | -                  |\n| useVirtual           | 是否开启虚拟滚动                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Boolean                 | false              |\n| multiple             | 是否多选                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean                 | false              |\n| canOnlySelectLeaf    | 单选时是否只能选中叶子节点                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Boolean                 | false              |\n| canOnlyCheckLeaf     | 多选时是否只能选中叶子节点                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Boolean                 | false              |\n| checkStrictly        | 父子节点是否选中不关联                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                | Boolean                 | false              |\n| listStyle            | 每列列表样式对象                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | Object                  | -                  |\n| listClassName        | 每列列表类名| String                  | -                  |\n| itemRender           | 每列列表项渲染函数<br><br>**签名**:<br>Function(data: Object) => ReactNode<br>**参数**:<br>_data_: {Object} 数据<br>**返回值**:<br>{ReactNode} 列表项内容<br>                                                                                                                                                                                                                                                                                                                                                                                     | Function                | item => item.label |\n| loadData             | 异步加载数据函数<br><br>**签名**:<br>Function(data: Object, source: Object) => void<br>**参数**:<br>_data_: {Object} 当前点击异步加载的数据<br>_source_: {Object} 当前点击数据，source是原始对象                                                                                                                                                                                                                                                                                                                                                              | Function                | -                  |\n\n<!-- api-extra-start -->\n\n### dataSource数据结构\n\n```js\nconst dataSource = [{\n    value: '2974',\n    label: '西安',\n    children: [\n        { value: '2975', label: '西安市', disabled: true },\n        { value: '2976', label: '高陵县', checkboxDisabled: true },\n        { value: '2977', label: '蓝田县' },\n        { value: '2978', label: '户县' },\n        { value: '2979', label: '周至县' },\n        { value: '4208', label: '灞桥区' },\n        { value: '4209', label: '长安区' },\n        { value: '4210', label: '莲湖区' },\n        { value: '4211', label: '临潼区' },\n        { value: '4212', label: '未央区' },\n        { value: '4213', label: '新城区' },\n        { value: '4214', label: '阎良区' },\n        { value: '4215', label: '雁塔区' },\n        { value: '4388', label: '碑林区' },\n        { value: '610127', label: '其它区' }\n    ]\n}];\n```\n\n数组中 Item 的自定义属性也会被透传到 onChange 函数的 data 参数中。\n\n<!-- api-extra-end -->\n","checkbox":"### Checkbox\n\n| 参数                   | 说明                                                                                                                                         | 类型            | 默认值       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ | ------------- | --------- |\n| id                   | checkbox id, 挂载在input上                                                                                                                     | String        | -         |\n| checked              | 选中状态                                                                                                                                       | Boolean       | -         |\n| defaultChecked       | 默认选中状态                                                                                                                                     | Boolean       | false     |\n| disabled             | 禁用                                                                                                                                         | Boolean       | -         |\n| label                | 通过属性配置label，                                                                                                                               | ReactNode     | -         |\n| indeterminate        | Checkbox 的中间状态，只会影响到 Checkbox 的样式，并不影响其 checked 属性                                                                                         | Boolean       | -         |\n| defaultIndeterminate | Checkbox 的默认中间态，只会影响到 Checkbox 的样式，并不影响其 checked 属性                                                                                        | Boolean       | false     |\n| onChange             | 状态变化时触发的事件<br><br>**签名**:<br>Function(checked: Boolean, e: Event) => void<br>**参数**:<br>_checked_: {Boolean} 是否选中<br>_e_: {Event} Dom 事件对象 | Function      | func.noop |\n| onMouseEnter         | 鼠标进入enter事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} Dom 事件对象                                               | Function      | func.noop |\n| onMouseLeave         | 鼠标离开Leave事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} Dom 事件对象                                               | Function      | func.noop |\n| value                | checkbox 的value                                                                                                                            | String/Number | -         |\n| name                 | name                                                                                                                                       | String        | -         |\n| isPreview            | 是否为预览态                                                                                                                                     | Boolean       | false     |\n| renderPreview        | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                          | Function      | -         |\n\n### Checkbox.Group\n\n| 参数            | 说明                                                                                                                                                                | 类型                                | 默认值      |\n| ------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------- | -------- |\n| disabled      | 整体禁用                                                                                                                                                              | Boolean                           | -        |\n| dataSource    | 可选项列表, 数据项可为 String 或者 Object, 如 `['apple', 'pear', 'orange']` 或者 `[{value: 'apple', label: '苹果',}, {value: 'pear', label: '梨'}, {value: 'orange', label: '橙子'}]` | Array&lt;String>/Array&lt;Object> | \\[]      |\n| value         | 被选中的值列表                                                                                                                                                           | Array/String/Number               | -        |\n| defaultValue  | 默认被选中的值列表                                                                                                                                                         | Array/String/Number               | -        |\n| children      | 通过子元素方式设置内部 checkbox                                                                                                                                              | Array&lt;ReactElement>            | -        |\n| onChange      | 选中值改变时的事件<br><br>**签名**:<br>Function(value: Array, e: Event) => void<br>**参数**:<br>_value_: {Array} 选中项列表<br>_e_: {Event} Dom 事件对象                                | Function                          | () => {} |\n| itemDirection | 子项目的排列方式<br>- hoz: 水平排列 (default)<br>- ver: 垂直排列<br><br>**可选值**:<br>'hoz', 'ver'                                                                                  | Enum                              | 'hoz'    |\n| isPreview     | 是否为预览态                                                                                                                                                            | Boolean                           | false    |\n| renderPreview | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                 | Function                          | -        |\n","collapse":"### Collapse\n\n| 参数                  | 说明                                                 | 类型       | 默认值       |\n| ------------------- | -------------------------------------------------- | -------- | --------- |\n| dataSource          | 使用数据模型构建                                           | Array    | -         |\n| defaultExpandedKeys | 默认展开keys                                           | Array    | -         |\n| expandedKeys        | 受控展开keys                                           | Array    | -         |\n| onExpand            | 展开状态发升变化时候的回调<br><br>**签名**:<br>Function() => void | Function | func.noop |\n| disabled            | 所有禁用                                               | Boolean  | -         |\n| accordion           | 手风琴模式，一次只能打开一个                                     | Boolean  | false     |\n\n### Collapse.Panel\n\n| 参数       | 说明       | 类型        | 默认值 |\n| -------- | -------- | --------- | --- |\n| disabled | 是否禁止用户操作 | Boolean   | -   |\n| title    | 标题       | ReactNode | -   |\n","config-provider":"### ConfigProvider\n\n| 参数             | 说明                                                                                                                                                                                                     | 类型             | 默认值   |\n| -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------- | ----- |\n| errorBoundary  | 是否开启错误捕捉 errorBoundary<br>如需自定义参数，请传入对象 对象接受参数列表如下：<br><br>fallbackUI `Function(error?: {}, errorInfo?: {}) => Element` 捕获错误后的展示<br>afterCatch `Function(error?: {}, errorInfo?: {})` 捕获错误后的行为, 比如埋点上传 | Boolean/Object | false |\n| pure           | 是否开启 Pure Render 模式，会提高性能，但是也会带来副作用                                                                                                                                                                    | Boolean        | -     |\n| warning        | 是否在开发模式下显示组件属性被废弃的 warning 提示                                                                                                                                                                          | Boolean        | true  |\n| rtl            | 是否开启 rtl 模式                                                                                                                                                                                            | Boolean        | -     |\n| device         | 设备类型，针对不同的设备类型组件做出对应的响应式变化<br><br>**可选值**:<br>'tablet', 'desktop', 'phone'                                                                                                                             | Enum           | -     |\n| children       | 组件树                                                                                                                                                                                                    | any            | -     |\n| popupContainer | 指定浮层渲染的父节点, 可以为节点id的字符串，也可以返回节点的函数                                                                                                                                                                     | any            | -     |\n\n<!-- api-extra-start -->\n\n### ConfigProvider.config(Component)\n\n传入组件，生成受 ConfigProvider 控制的 HOC 组件，如果组件没有声明 shouldComponentUpdate 方法，会添加如下 shouldComponentUpdate 方法以支持 ConfigProvider 的 pure 属性\n\n```js\nComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.pure) {\n        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n\n    return true;\n};\n```\n\n### ConfigProvider.getContextProps(props, displayName)\n\n传入组件的 props 和 displayName，得到和 childContext 计算过的包含有 preifx/locale/pure 的对象，一般用于通过静态方法生成脱离组件树的组件。\n\n### ConfigProvider.getContext()\n\n通过该方法可以获取到 ConfigProvider 的上下文，格式如下。若有多层级 ConfigProvider 嵌套，会返回merge后的结果，关系近的优先。\n\n```js\n{\n    prefix: nextPrefix,\n    locale: nextLocale,\n    pure: nextPure,\n    warning: nextWarning\n}\n```\n\n### ConfigProvider.initLocales(locales)\n\n配置所有语言包, 可配合 `ConfigProvider.setLanguage` 方法，确定组件使用的语言包。\n\n```js\nConfigProvider.initLocales({\n    'zh-cn': {},\n    'en-us': {}\n});\n```\n\n### ConfigProvider.setLanguage(language)\n\n设置语言，参数 `language` 需要能在 `ConfigProvider.initLocales` 方法传入的参数的 key 中找到， 默认为 `zh-cn`\n\n```js\nConfigProvider.setLanguage('zh-cn');\n```\n\n### ConfigProvider.setLocale(locale)\n\n直接设置语言包\n\n```js\n// 相当于 同时用ConfigProvider.initLocales 和 ConfigProvider.setLanguage\nConfigProvider.setLocale({\n    DatePicker: {},\n    Dialog: {}\n});\n```\n\n### ConfigProvider.setDirection(dir)\n\n设置组件展示方向，当传入 `rtl`时，会在组件的根DOM节点加上 `dir=\"rtl\"`，同时组件展示rtl视觉。可用于阿拉伯等阅读顺序从右到左的国家。\n\n```js\nConfigProvider.setDirection('rtl');\n```\n\n### ConfigProvider.getLocale()\n\n获取当前的语言包\n\n### ConfigProvider.getLanguage()\n\n获取当前设定的语言\n\n### ConfigProvider.getDirection()\n\n获取当前设定的方向\n\n<!-- api-extra-end -->\n","date-picker":"### DatePicker\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                   | 类型             | 默认值          |\n| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- | ------------ |\n| label               | 输入框内置标签                                                                                                                                                                                                                                                              | ReactNode      | -            |\n| size                | 输入框尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                                  | Enum           | 'medium'     |\n| state               | 输入框状态<br><br>**可选值**:<br>'success', 'loading', 'error'                                                                                                                                                                                                               | Enum           | -            |\n| placeholder         | 输入提示                                                                                                                                                                                                                                                                 | String         | -            |\n| defaultVisibleMonth | 默认展现的月<br><br>**签名**:<br>Function() => MomentObject<br>**返回值**:<br>{MomentObject} 返回包含指定月份的 moment 对象实例<br>                                                                                                                                                          | Function       | -            |\n| value               | 日期值（受控）moment 对象                                                                                                                                                                                                                                                     | custom         | -            |\n| defaultValue        | 初始日期值，moment 对象                                                                                                                                                                                                                                                      | custom         | -            |\n| format              | 日期值的格式（用于限定用户输入和展示）                                                                                                                                                                                                                                                  | String         | 'YYYY-MM-DD' |\n| showTime            | 是否使用时间控件，传入 TimePicker 的属性 { defaultValue, format, ... }                                                                                                                                                                                                             | Object/Boolean | false        |\n| resetTime           | 每次选择日期时是否重置时间（仅在 showTime 开启时有效）                                                                                                                                                                                                                                     | Boolean        | false        |\n| disabledDate        | 禁用日期函数<br><br>**签名**:<br>Function(日期值: MomentObject, view: String) => Boolean<br>**参数**:<br>_日期值_: {MomentObject} null<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} 是否禁用<br>                                                       | Function       | () => false  |\n| footerRender        | 自定义面板页脚<br><br>**签名**:<br>Function() => Node<br>**返回值**:<br>{Node} 自定义的面板页脚组件<br>                                                                                                                                                                                    | Function       | () => null   |\n| onChange            | 日期值改变时的回调<br><br>**签名**:<br>Function(value: MomentObject/String) => void<br>**参数**:<br>_value_: {MomentObject/String} 日期值                                                                                                                                            | Function       | func.noop    |\n| onOk                | 点击确认按钮时的回调<br><br>**签名**:<br>Function() => MomentObject/String<br>**返回值**:<br>{MomentObject/String} 日期值<br>                                                                                                                                                          | Function       | func.noop    |\n| disabled            | 是否禁用                                                                                                                                                                                                                                                                 | Boolean        | -            |\n| hasClear            | 是否显示清空按钮                                                                                                                                                                                                                                                             | Boolean        | true         |\n| visible             | 弹层显示状态                                                                                                                                                                                                                                                               | Boolean        | -            |\n| defaultVisible      | 弹层默认是否显示                                                                                                                                                                                                                                                             | Boolean        | false        |\n| onVisibleChange     | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function       | func.noop    |\n| popupTriggerType    | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                           | Enum           | 'click'      |\n| popupAlign          | 弹层对齐方式,具体含义见 OverLay文档                                                                                                                                                                                                                                               | String         | 'tl tl'      |\n| popupContainer      | 弹层容器                                                                                                                                                                                                                                                                 | any            | -            |\n| popupStyle          | 弹层自定义样式                                                                                                                                                                                                                                                              | Object         | -            |\n| popupClassName      | 弹层自定义样式类                                                                                                                                                                                                                                                             | String         | -            |\n| popupProps          | 弹层其他属性                                                                                                                                                                                                                                                               | Object         | -            |\n| followTrigger       | 是否跟随滚动                                                                                                                                                                                                                                                               | Boolean        | -            |\n| inputProps          | 输入框其他属性                                                                                                                                                                                                                                                              | Object         | -            |\n| dateCellRender      | 自定义日期渲染函数<br><br>**签名**:<br>Function(value: Object) => ReactNode<br>**参数**:<br>_value_: {Object} 日期值（moment对象）<br>**返回值**:<br>{ReactNode} null<br>                                                                                                                   | Function       | -            |\n| monthCellRender     | 自定义月份渲染函数<br><br>**签名**:<br>Function(calendarDate: Object) => ReactNode<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>**返回值**:<br>{ReactNode} null<br>                                                                                            | Function       | -            |\n| dateInputAriaLabel  | 日期输入框的 aria-label 属性                                                                                                                                                                                                                                                 | String         | -            |\n| timeInputAriaLabel  | 时间输入框的 aria-label 属性                                                                                                                                                                                                                                                 | String         | -            |\n| isPreview           | 是否为预览态                                                                                                                                                                                                                                                               | Boolean        | -            |\n| renderPreview       | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: MomentObject) => void<br>**参数**:<br>_value_: {MomentObject} 日期                                                                                                                                                         | Function       | -            |\n\n### DatePicker.MonthPicker\n\n| 参数                 | 说明                                                                                                                                                                                                                                             | 类型        | 默认值         |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| label              | 输入框内置标签                                                                                                                                                                                                                                        | ReactNode | -           |\n| size               | 输入框尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                            | Enum      | 'medium'    |\n| state              | 输入框状态<br><br>**可选值**:<br>'success', 'loading', 'error'                                                                                                                                                                                         | Enum      | -           |\n| placeholder        | 输入提示                                                                                                                                                                                                                                           | String    | -           |\n| defaultVisibleYear | 默认展现的年<br><br>**签名**:<br>Function() => MomentObject<br>**返回值**:<br>{MomentObject} 返回包含指定年份的 moment 对象实例<br>                                                                                                                                    | Function  | -           |\n| value              | 日期值（受控）moment 对象                                                                                                                                                                                                                               | custom    | -           |\n| defaultValue       | 初始日期值，moment 对象                                                                                                                                                                                                                                | custom    | -           |\n| format             | 日期值的格式（用于限定用户输入和展示）                                                                                                                                                                                                                            | String    | 'YYYY-MM'   |\n| disabledDate       | 禁用日期函数<br><br>**签名**:<br>Function(日期值: MomentObject, view: String) => Boolean<br>**参数**:<br>_日期值_: {MomentObject} null<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} 是否禁用<br>                                 | Function  | () => false |\n| footerRender       | 自定义面板页脚<br><br>**签名**:<br>Function() => Node<br>**返回值**:<br>{Node} 自定义的面板页脚组件<br>                                                                                                                                                              | Function  | () => null  |\n| onChange           | 日期值改变时的回调<br><br>**签名**:<br>Function(value: MomentObject/String) => void<br>**参数**:<br>_value_: {MomentObject/String} 日期值                                                                                                                      | Function  | func.noop   |\n| disabled           | 是否禁用                                                                                                                                                                                                                                           | Boolean   | -           |\n| hasClear           | 是否显示清空按钮                                                                                                                                                                                                                                       | Boolean   | true        |\n| visible            | 弹层显示状态                                                                                                                                                                                                                                         | Boolean   | -           |\n| defaultVisible     | 弹层默认是否显示                                                                                                                                                                                                                                       | Boolean   | -           |\n| onVisibleChange    | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function  | func.noop   |\n| popupTriggerType   | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                     | Enum      | 'click'     |\n| popupAlign         | 弹层对齐方式, 具体含义见 OverLay文档                                                                                                                                                                                                                        | String    | 'tl tl'     |\n| popupContainer     | 弹层容器                                                                                                                                                                                                                                           | any       | -           |\n| popupStyle         | 弹层自定义样式                                                                                                                                                                                                                                        | Object    | -           |\n| popupClassName     | 弹层自定义样式类                                                                                                                                                                                                                                       | String    | -           |\n| popupProps         | 弹层其他属性                                                                                                                                                                                                                                         | Object    | -           |\n| followTrigger      | 是否跟随滚动                                                                                                                                                                                                                                         | Boolean   | -           |\n| inputProps         | 输入框其他属性                                                                                                                                                                                                                                        | Object    | -           |\n| monthCellRender    | 自定义月份渲染函数<br><br>**签名**:<br>Function(calendarDate: Object) => ReactNode<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>**返回值**:<br>{ReactNode} null<br>                                                                      | Function  | -           |\n| dateInputAriaLabel | 日期输入框的 aria-label 属性                                                                                                                                                                                                                           | String    | -           |\n| isPreview          | 是否为预览态                                                                                                                                                                                                                                         | Boolean   | -           |\n| renderPreview      | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: MomentObject) => void<br>**参数**:<br>_value_: {MomentObject} 月份                                                                                                                                   | Function  | -           |\n\n### DatePicker.RangePicker\n\n| 参数                      | 说明                                                                                                                                                                                                                                      | 类型                   | 默认值                                                                                          |          |           |     |     |\n| ----------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- | -------------------------------------------------------------------------------------------- | -------- | --------- | --- | --- |\n| size                    | 输入框尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                     | Enum                 | 'medium'                                                                                     |          |           |     |     |\n| type                    | 日期范围类型<br><br>**可选值**:<br>'date', 'month', 'year'                                                                                                                                                                                       | Enum                 | 'date'                                                                                       |          |           |     |     |\n| defaultVisibleMonth     | 默认展示的起始月份<br><br>**签名**:<br>Function() => MomentObject<br>**返回值**:<br>{MomentObject} 返回包含指定月份的 moment 对象实例<br>                                                                                                                          | Function             | -                                                                                            |          |           |     |     |\n| value                   | 日期范围值数组 [moment, moment]                                                                                                                                                                                                                | Array                | -                                                                                            |          |           |     |     |\n| defaultValue            | 初始的日期范围值数组 [moment, moment]                                                                                                                                                                                                             | Array                | -                                                                                            |          |           |     |     |\n| format                  | 日期格式                                                                                                                                                                                                                                    | String               | 'YYYY-MM-DD'                                                                                 |          |           |     |     |\n| showTime                | 是否使用时间控件，支持传入 TimePicker 的属性                                                                                                                                                                                                            | Object/Boolean       | false                                                                                        |          |           |     |     |\n| resetTime               | 每次选择是否重置时间（仅在 showTime 开启时有效）                                                                                                                                                                                                           | Boolean              | false                                                                                        |          |           |     |     |\n| disabledDate            | 禁用日期函数<br><br>**签名**:<br>Function(日期值: MomentObject, view: String) => Boolean<br>**参数**:<br>_日期值_: {MomentObject} null<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} 是否禁用<br>                          | Function             | () => false                                                                                  |          |           |     |     |\n| footerRender            | 自定义面板页脚<br><br>**签名**:<br>Function() => Node<br>**返回值**:<br>{Node} 自定义的面板页脚组件<br>                                                                                                                                                       | Function             | () => null                                                                                   |          |           |     |     |\n| onChange                | 日期范围值改变时的回调 \\[ MomentObject                                                                                                                                                                                                             | String, MomentObject | String ]<br><br>**签名**:<br>Function(value: Array) => void<br>**参数**:<br>_value_: {Array} 日期值 | Function | func.noop |     |     |\n| onOk                    | 点击确认按钮时的回调 返回开始时间和结束时间\\`\\[ MomentObject                                                                                                                                                                                                 | String, MomentObject | String ]\\`<br><br>**签名**:<br>Function() => Array<br>**返回值**:<br>{Array} 日期范围<br>             | Function | func.noop |     |     |\n| label                   | 输入框内置标签                                                                                                                                                                                                                                 | ReactNode            | -                                                                                            |          |           |     |     |\n| state                   | 输入框状态<br><br>**可选值**:<br>'error', 'loading', 'success'                                                                                                                                                                                  | Enum                 | -                                                                                            |          |           |     |     |\n| disabled                | 是否禁用                                                                                                                                                                                                                                    | Boolean              | -                                                                                            |          |           |     |     |\n| hasClear                | 是否显示清空按钮                                                                                                                                                                                                                                | Boolean              | true                                                                                         |          |           |     |     |\n| visible                 | 弹层显示状态                                                                                                                                                                                                                                  | Boolean              | -                                                                                            |          |           |     |     |\n| defaultVisible          | 弹层默认是否显示                                                                                                                                                                                                                                | Boolean              | false                                                                                        |          |           |     |     |\n| onVisibleChange         | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示和隐藏的来源 okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function             | func.noop                                                                                    |          |           |     |     |\n| popupTriggerType        | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                              | Enum                 | 'click'                                                                                      |          |           |     |     |\n| popupAlign              | 弹层对齐方式, 具体含义见 OverLay文档                                                                                                                                                                                                                 | String               | 'tl tl'                                                                                      |          |           |     |     |\n| popupContainer          | 弹层容器                                                                                                                                                                                                                                    | any                  | -                                                                                            |          |           |     |     |\n| popupStyle              | 弹层自定义样式                                                                                                                                                                                                                                 | Object               | -                                                                                            |          |           |     |     |\n| popupClassName          | 弹层自定义样式类                                                                                                                                                                                                                                | String               | -                                                                                            |          |           |     |     |\n| popupProps              | 弹层其他属性                                                                                                                                                                                                                                  | Object               | -                                                                                            |          |           |     |     |\n| followTrigger           | 是否跟随滚动                                                                                                                                                                                                                                  | Boolean              | -                                                                                            |          |           |     |     |\n| inputProps              | 输入框其他属性                                                                                                                                                                                                                                 | Object               | -                                                                                            |          |           |     |     |\n| dateCellRender          | 自定义日期单元格渲染<br><br>**签名**:<br>Function() => void                                                                                                                                                                                         | Function             | -                                                                                            |          |           |     |     |\n| monthCellRender         | 自定义月份渲染函数<br><br>**签名**:<br>Function(calendarDate: Object) => ReactNode<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>**返回值**:<br>{ReactNode} null<br>                                                               | Function             | -                                                                                            |          |           |     |     |\n| startDateInputAriaLabel | 开始日期输入框的 aria-label 属性                                                                                                                                                                                                                  | String               | -                                                                                            |          |           |     |     |\n| startTimeInputAriaLabel | 开始时间输入框的 aria-label 属性                                                                                                                                                                                                                  | String               | -                                                                                            |          |           |     |     |\n| endDateInputAriaLabel   | 结束日期输入框的 aria-label 属性                                                                                                                                                                                                                  | String               | -                                                                                            |          |           |     |     |\n| endTimeInputAriaLabel   | 结束时间输入框的 aria-label 属性                                                                                                                                                                                                                  | String               | -                                                                                            |          |           |     |     |\n| isPreview               | 是否为预览态                                                                                                                                                                                                                                  | Boolean              | -                                                                                            |          |           |     |     |\n| renderPreview           | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: Array) => void<br>**参数**:<br>_value_: {Array} 日期区间                                                                                                                                        | Function             | -                                                                                            |          |           |     |     |\n\n### DatePicker.WeekPicker\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                   | 类型        | 默认值         |\n| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| label               | 输入框内置标签                                                                                                                                                                                                                                                              | ReactNode | -           |\n| size                | 输入框尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                                  | Enum      | 'medium'    |\n| state               | 输入框状态<br><br>**可选值**:<br>'success', 'loading', 'error'                                                                                                                                                                                                               | Enum      | -           |\n| placeholder         | 输入提示                                                                                                                                                                                                                                                                 | String    | -           |\n| defaultVisibleMonth | 默认展现的月<br><br>**签名**:<br>Function() => MomentObject<br>**返回值**:<br>{MomentObject} 返回包含指定月份的 moment 对象实例<br>                                                                                                                                                          | Function  | -           |\n| value               | 日期值（受控）moment 对象                                                                                                                                                                                                                                                     | custom    | -           |\n| defaultValue        | 初始日期值，moment 对象                                                                                                                                                                                                                                                      | custom    | -           |\n| format              | 日期值的格式（用于限定用户输入和展示）                                                                                                                                                                                                                                                  | String    | 'YYYY-wo'   |\n| disabledDate        | 禁用日期函数<br><br>**签名**:<br>Function(日期值: MomentObject, view: String) => Boolean<br>**参数**:<br>_日期值_: {MomentObject} null<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} 是否禁用<br>                                                       | Function  | () => false |\n| footerRender        | 自定义面板页脚<br><br>**签名**:<br>Function() => Node<br>**返回值**:<br>{Node} 自定义的面板页脚组件<br>                                                                                                                                                                                    | Function  | () => null  |\n| onChange            | 日期值改变时的回调<br><br>**签名**:<br>Function(value: MomentObject/String) => void<br>**参数**:<br>_value_: {MomentObject/String} 日期值                                                                                                                                            | Function  | func.noop   |\n| disabled            | 是否禁用                                                                                                                                                                                                                                                                 | Boolean   | -           |\n| hasClear            | 是否显示清空按钮                                                                                                                                                                                                                                                             | Boolean   | true        |\n| visible             | 弹层显示状态                                                                                                                                                                                                                                                               | Boolean   | -           |\n| defaultVisible      | 弹层默认是否显示                                                                                                                                                                                                                                                             | Boolean   | false       |\n| onVisibleChange     | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； okBtnClick 表示由确认按钮触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function  | func.noop   |\n| popupTriggerType    | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                           | Enum      | 'click'     |\n| popupAlign          | 弹层对齐方式,具体含义见 OverLay文档                                                                                                                                                                                                                                               | String    | 'tl tl'     |\n| popupContainer      | 弹层容器                                                                                                                                                                                                                                                                 | any       | -           |\n| popupStyle          | 弹层自定义样式                                                                                                                                                                                                                                                              | Object    | -           |\n| popupClassName      | 弹层自定义样式类                                                                                                                                                                                                                                                             | String    | -           |\n| popupProps          | 弹层其他属性                                                                                                                                                                                                                                                               | Object    | -           |\n| followTrigger       | 是否跟随滚动                                                                                                                                                                                                                                                               | Boolean   | -           |\n| inputProps          | 输入框其他属性                                                                                                                                                                                                                                                              | Object    | -           |\n| dateCellRender      | 自定义日期渲染函数<br><br>**签名**:<br>Function(value: Object) => ReactNode<br>**参数**:<br>_value_: {Object} 日期值（moment对象）<br>**返回值**:<br>{ReactNode} null<br>                                                                                                                   | Function  | -           |\n| monthCellRender     | 自定义月份渲染函数<br><br>**签名**:<br>Function(calendarDate: Object) => ReactNode<br>**参数**:<br>_calendarDate_: {Object} 对应 Calendar 返回的自定义日期对象<br>**返回值**:<br>{ReactNode} null<br>                                                                                            | Function  | -           |\n| isPreview           | 是否为预览态                                                                                                                                                                                                                                                               | Boolean   | -           |\n| renderPreview       | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: MomentObject) => void<br>**参数**:<br>_value_: {MomentObject} 年份                                                                                                                                                         | Function  | -           |\n\n### DatePicker.YearPicker\n\n| 参数                 | 说明                                                                                                                                                                                                                                                 | 类型        | 默认值         |\n| ------------------ | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ----------- |\n| label              | 输入框内置标签                                                                                                                                                                                                                                            | ReactNode | -           |\n| size               | 输入框尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                | Enum      | 'medium'    |\n| state              | 输入框状态<br><br>**可选值**:<br>'success', 'loading', 'error'                                                                                                                                                                                             | Enum      | -           |\n| placeholder        | 输入提示                                                                                                                                                                                                                                               | String    | -           |\n| value              | 日期值（受控）moment 对象                                                                                                                                                                                                                                   | custom    | -           |\n| defaultValue       | 初始日期值，moment 对象                                                                                                                                                                                                                                    | custom    | -           |\n| format             | 日期值的格式（用于限定用户输入和展示）                                                                                                                                                                                                                                | String    | 'YYYY'      |\n| disabledDate       | 禁用日期函数<br><br>**签名**:<br>Function(日期值: MomentObject, view: String) => Boolean<br>**参数**:<br>_日期值_: {MomentObject} null<br>_view_: {String} 当前视图类型，year: 年， month: 月, date: 日<br>**返回值**:<br>{Boolean} 是否禁用<br>                                     | Function  | () => false |\n| footerRender       | 自定义面板页脚<br><br>**签名**:<br>Function() => Node<br>**返回值**:<br>{Node} 自定义的面板页脚组件<br>                                                                                                                                                                  | Function  | () => null  |\n| onChange           | 日期值改变时的回调<br><br>**签名**:<br>Function(value: MomentObject/String) => void<br>**参数**:<br>_value_: {MomentObject/String} 日期值                                                                                                                          | Function  | func.noop   |\n| disabled           | 是否禁用                                                                                                                                                                                                                                               | Boolean   | -           |\n| hasClear           | 是否显示清空按钮                                                                                                                                                                                                                                           | Boolean   | true        |\n| visible            | 弹层显示状态                                                                                                                                                                                                                                             | Boolean   | -           |\n| defaultVisible     | 弹层默认是否显示                                                                                                                                                                                                                                           | Boolean   | -           |\n| onVisibleChange    | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, reason: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_reason_: {String} 触发弹层显示和隐藏的来源 calendarSelect 表示由日期表盘的选择触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function  | func.noop   |\n| popupTriggerType   | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                         | Enum      | 'click'     |\n| popupAlign         | 弹层对齐方式, 具体含义见 OverLay文档                                                                                                                                                                                                                            | String    | 'tl tl'     |\n| popupContainer     | 弹层容器                                                                                                                                                                                                                                               | any       | -           |\n| popupStyle         | 弹层自定义样式                                                                                                                                                                                                                                            | Object    | -           |\n| popupClassName     | 弹层自定义样式类                                                                                                                                                                                                                                           | String    | -           |\n| popupProps         | 弹层其他属性                                                                                                                                                                                                                                             | Object    | -           |\n| followTrigger      | 是否跟随滚动                                                                                                                                                                                                                                             | Boolean   | -           |\n| inputProps         | 输入框其他属性                                                                                                                                                                                                                                            | Object    | -           |\n| dateInputAriaLabel | 日期输入框的 aria-label 属性                                                                                                                                                                                                                               | String    | -           |\n| isPreview          | 是否为预览态                                                                                                                                                                                                                                             | Boolean   | -           |\n| renderPreview      | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: MomentObject) => void<br>**参数**:<br>_value_: {MomentObject} 年份                                                                                                                                       | Function  | -           |\n","dialog":"### Dialog\n\n| 参数                   | 说明                                                                                                                                                                                                               | 类型                | 默认值                                                                               |\n| -------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------- | --------------------------------------------------------------------------------- |\n| visible              | 是否显示                                                                                                                                                                                                             | Boolean           | false                                                                             |\n| title                | 标题                                                                                                                                                                                                               | ReactNode         | -                                                                                 |\n| children             | 内容                                                                                                                                                                                                               | ReactNode         | -                                                                                 |\n| footer               | 底部内容，设置为 false，则不进行显示                                                                                                                                                                                            | Boolean/ReactNode | [&lt;Button type=\"primary\"&gt;确定&lt;/Button&gt;, &lt;Button&gt;取消&lt;/Button&gt;] |\n| footerAlign          | 底部按钮的对齐方式<br><br>**可选值**:<br>'left', 'center', 'right'                                                                                                                                                           | Enum              | 'right'                                                                           |\n| footerActions        | 指定确定按钮和取消按钮是否存在以及如何排列,<br><br>**可选值**：<br>['ok', 'cancel']（确认取消按钮同时存在，确认按钮在左）<br>['cancel', 'ok']（确认取消按钮同时存在，确认按钮在右）<br>['ok']（只存在确认按钮）<br>['cancel']（只存在取消按钮）                                                   | Array             | ['ok', 'cancel']                                                                  |\n| onOk                 | 在点击确定按钮时触发的回调函数<br><br>**签名**:<br>Function(event: Object) => void<br>**参数**:<br>_event_: {Object} 点击事件对象                                                                                                         | Function          | () => {}                                                                          |\n| onCancel             | 在点击取消按钮时触发的回调函数<br><br>**签名**:<br>Function(event: Object) => void<br>**参数**:<br>_event_: {Object} 点击事件对象                                                                                                         | Function          | () => {}                                                                          |\n| okProps              | 应用于确定按钮的属性对象                                                                                                                                                                                                     | Object            | {}                                                                                |\n| cancelProps          | 应用于取消按钮的属性对象                                                                                                                                                                                                     | Object            | {}                                                                                |\n| closeable            | 控制对话框关闭的方式，值可以为字符串或者布尔值，其中字符串是由以下值组成：<br>**close** 表示点击关闭按钮可以关闭对话框<br>**mask** 表示点击遮罩区域可以关闭对话框<br>**esc** 表示按下 esc 键可以关闭对话框<br>如 'close' 或 'close,esc,mask'<br>如果设置为 true，则以上关闭方式全部生效<br>如果设置为 false，则以上关闭方式全部失效 | String/Boolean    | 'esc,close'                                                                       |\n| onClose              | 对话框关闭时触发的回调函数<br><br>**签名**:<br>Function(trigger: String, event: Object) => void<br>**参数**:<br>_trigger_: {String} 关闭触发行为的描述字符串<br>_event_: {Object} 关闭时事件对象                                                     | Function          | () => {}                                                                          |\n| afterClose           | 对话框关闭后触发的回调函数, 如果有动画，则在动画结束后触发<br><br>**签名**:<br>Function() => void                                                                                                                                              | Function          | () => {}                                                                          |\n| hasMask              | 是否显示遮罩                                                                                                                                                                                                           | Boolean           | true                                                                              |\n| animation            | 显示隐藏时动画的播放方式                                                                                                                                                                                                     | Object/Boolean    | {     in: 'fadeInDown',     out: 'fadeOutUp', }                                   |\n| autoFocus            | 对话框弹出时是否自动获得焦点                                                                                                                                                                                                   | Boolean           | false                                                                             |\n| align                | 对话框对齐方式, 具体见Overlay文档                                                                                                                                                                                            | String/Boolean    | 'cc cc'                                                                           |\n| isFullScreen         | 当对话框高度超过浏览器视口高度时，是否显示所有内容而不是出现滚动条以保证对话框完整显示在浏览器视口内，该属性仅在对话框垂直水平居中时生效，即 align 被设置为 'cc cc' 时                                                                                                                      | Boolean           | false                                                                             |\n| shouldUpdatePosition | 是否在对话框重新渲染时及时更新对话框位置，一般用于对话框高度变化后依然能保证原来的对齐方式                                                                                                                                                                    | Boolean           | false                                                                             |\n| minMargin            | 对话框距离浏览器顶部和底部的最小间距，align 被设置为 'cc cc' 并且 isFullScreen 被设置为 true 时不生效                                                                                                                                             | Number            | 40                                                                                |\n| overlayProps         | 透传到弹层组件的属性对象                                                                                                                                                                                                     | Object            | {}                                                                                |\n| height               | 对话框的高度样式属性                                                                                                                                                                                                       | String            | -                                                                                 |\n\n<!-- api-extra-start -->\n\n### Dialog.alert(config)/Dialog.confirm(config)\n\n以下只列举 config 可以传入的常用属性，Dialog 组件的其他属性也可以传入\n\n| 属性           | 说明                | 类型        | 默认值      |\n| :----------- | :---------------- | :-------- | :------- |\n| title        | 标题                | ReactNode | ''       |\n| content      | 内容                | ReactNode | ''       |\n| onOk         | 在点击确定按钮时触发的回调函数   | Function  | () => {} |\n| onCancel     | 在点击取消按钮时触发的回调函数   | Function  | () => {} |\n| messageProps | 内嵌 Message 组件属性对象 | Object    | {}       |\n\n### Dialog.show\n\n以下只列举 config 可以传入的常用属性，Dialog 组件其他属性也可以传入\n\n| 属性       | 说明              | 类型        | 默认值      |\n| :------- | :-------------- | :-------- | :------- |\n| title    | 标题              | ReactNode | ''       |\n| content  | 内容              | ReactNode | ''       |\n| onOk     | 在点击确定按钮时触发的回调函数 | Function  | () => {} |\n| onCancel | 在点击取消按钮时触发的回调函数 | Function  | () => {} |\n\n<!-- api-extra-end -->\n","dropdown":"### Dropdown\n\n> 继承 Popup 的 API，除非特别说明\n\n| 参数              | 说明                                                                                                                                                                                                                                                | 类型             | 默认值                                        |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- | ------------------------------------------ |\n| children        | 弹层内容                                                                                                                                                                                                                                              | ReactNode      | -                                          |\n| visible         | 弹层当前是否显示                                                                                                                                                                                                                                          | Boolean        | -                                          |\n| defaultVisible  | 弹层默认是否显示                                                                                                                                                                                                                                          | Boolean        | false                                      |\n| onVisibleChange | 弹层显示或隐藏时触发的回调函数<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function       | func.noop                                  |\n| trigger         | 触发弹层显示或者隐藏的元素                                                                                                                                                                                                                                     | ReactNode      | -                                          |\n| triggerType     | 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，或者它们组成的数组，如 ['hover', 'click']                                                                                                                                                                                 | String/Array   | 'hover'                                    |\n| disabled        | 设置此属性，弹层无法显示或隐藏                                                                                                                                                                                                                                   | Boolean        | false                                      |\n| align           | 弹层相对于触发元素的定位, 详见 Overlay 的定位部分                                                                                                                                                                                                                    | String         | 'tl bl'                                    |\n| offset          | 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量<br>e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px                                                                                                                                         | Array          | [0, 0]                                     |\n| delay           | 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效                                                                                                                                                                                                 | Number         | 200                                        |\n| autoFocus       | 弹层打开时是否让其中的元素自动获取焦点                                                                                                                                                                                                                               | Boolean        | -                                          |\n| hasMask         | 是否显示遮罩                                                                                                                                                                                                                                            | Boolean        | false                                      |\n| cache           | 隐藏时是否保留子节点                                                                                                                                                                                                                                        | Boolean        | false                                      |\n| animation       | 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画                                                                                                                                                                   | Object/Boolean | { in: 'expandInDown', out: 'expandOutUp' } |\n","field":"### 初始化\n\n    let myfield = new Field(this [,options]);\n\n    或者使用hooks\n\n    let myfield = Field.useField([options]); // 要求 react 版本 > 16.8\n\n| 参数      | 说明             | 类型              | 可选值  | 默认值 |\n| ------- | -------------- | --------------- | ---- | --- |\n| this    | 传入调用class的this | React.Component | 必须设置 |     |\n| options | 一些事件配置, 详细参数如下 | Object          | 非必须  |     |\n\n`options` 配置项\n\n| 参数                 | 说明                                                                                   | 类型                   | 默认值   |\n| ------------------ | ------------------------------------------------------------------------------------ | -------------------- | ----- |\n| onChange           | 所有组件的change都会到达这里[setValue不会触发该函数]                                                   | Function(name,value) |       |\n| parseName          | 是否翻译`init(name)`中的`name`(getValues会把带`.`的字符串转换成对象)                                   | Boolean              | false |\n| forceUpdate        | 仅建议PureComponent的组件打开此强制刷新功能，会带来性能问题(500个组件为例：打开的时候render花费700ms, 关闭时候render花费400ms) | Boolean              | false |\n| scrollToFirstError | field.validate的时候滚动到第一个出错的组件, 如果是整数会进行偏移                                             | Boolean/Number       | true  |\n| autoUnmount        | 自动删除Unmout元素，如果想保留数据可以设置为false                                                       | Boolean              | true  |\n| autoValidate       | 是否修改数据的时候就自动触发校验, 设为 false 后只能通过 validate() 来触发校验                                    | Boolean              | true  |\n| values             | 初始化数据                                                                                | Object               |       |\n\n#### API接口\n\n`new`之后的对象提供的api接口 （例：`myfield.getValues()`）(`set` 开头的api函数不要在render里面操作, 可能会触发死循环)\n\n| 参数               | 说明                                         | 类型                                                                | 可选值                            | 默认值 |\n| ---------------- | ------------------------------------------ | ----------------------------------------------------------------- | ------------------------------ | --- |\n| init             | 初始化每个组件，[详细参数如下](#init)）                   | Function(name:String, option:Object)                              |                                |     |\n| getValues        | 获取一组输入控件的值，如不传入参数，则获取全部组件的值                | Function(\\[names: String\\[]])                                     |                                |     |\n| getValue         | 获取单个输入控件的值                                 | Function(name: String)                                            |                                |     |\n| setValues        | 设置一组输入控件的值（会触发render，请遵循react时机使用)         | Function(obj: Object)                                             |                                |     |\n| setValue         | 设置单个输入控件的值 （会触发render，请遵循react时机使用)        | Function(name: String, value)                                     |                                |     |\n| validate         | 校验并获取一组输入域的值与 Error                        | Function(\\[names: String\\[]], callback: Function(errors, values)) |                                |     |\n| getError         | 获取单个输入控件的 Error                            | Function(name: String)                                            |                                |     |\n| getErrors        | 获取一组输入控件的 Error                            | Function([name: String])                                          |                                |     |\n| setError         | 设置单个输入控件的 Error                            | Function(name: String, errors:String/Array[String])               |                                |     |\n| setErrors        | 设置一组输入控件的 Error                            | Function(obj: Object)                                             |                                |     |\n| reset            | 重置一组输入控件的值、清空校验                            | Function(\\[names: String\\[]])                                     |                                |     |\n| resetToDefault   | 重置一组输入控件的值为默认值                             | Function(\\[names: String\\[]])                                     |                                |     |\n| getState         | 判断校验状态                                     | Function(name: String)                                            | 'error' 'success' 'loading' '' | ''  |\n| getNames         | 获取所有组件的key                                 | Function()                                                        |                                |     |\n| remove           | 删除某一个或者一组控件的数据，删除后与之相关的validate/value都会被清空 | Function(name: String/String\\[])                                  |                                |     |\n| addArrayValue    | 添加 name 是数组格式的数据, 并且自动处理其他 name 的数组错位问题    | Function(key: String, index: Number, value1, value2, ...)         |                                |     |\n| deleteArrayValue | 删除 name 是数组格式的数据, 并且自动处理其他 name 的数组错位问题    | Function(key: String, index: Number, howmany)                     |                                |     |\n\n#### init\n\n    init(name, options, props)\n\n| 参数                        | 说明                                                        | 类型                                    | 可选值  | 默认值        |     |\n| ------------------------- | --------------------------------------------------------- | ------------------------------------- | ---- | ---------- | --- |\n| name                      | 必填输入控件唯一标志                                                | String                                |      |            |     |\n| options.valueName         | 组件值的属性名称，如 Checkbox 的是 `checked`，Input是 `value`           | String                                |      | 'value'    |     |\n| options.initValue         | 组件初始值(组件第一次render的时候才会读取，后面再修改此值无效),类似defaultValue        | any                                   |      |            |     |\n| options.trigger           | 触发数据变化的事件名称                                               | String                                |      | 'onChange' |     |\n| options.rules             | 校验规则                                                      | Array/Object                          |      |            |     |\n| options.getValueFromEvent | 自定义从`onChange`事件中获取value的方式，一般不需要设置. 详细用法查看demo `自定义数据获取` | Function(value,...args) 参数顺序和组件是完全一致的 |      |            |     |\n| props                     | 组件自定义的事件可以写在这里                                            | Object                                |      |            |     |\n| autoValidate              | 是否修改数据的时候自动触发校验单个组件的校验, 设为 false 后只能通过 validate() 来触发校验   | Boolean                               | true |            |     |\n\n返回值\n\n    {id,value,onChange}\n\n#### rules\n\n    {\n        rules:[{ required: true }]\n    }\n\n多个rule\n\n    {\n        rules:[{required:true,trigger:'onBlur'},{pattern:/abcd/,message:'abcd不能缺'},{validator:(rule, value, callback)=>{callback('出错了')}}]\n    }\n\n| 参数        | 说明                                                                                                                                                                | 类型                            | 可选值                  | 使用类型                           |\n| --------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------- | -------------------- | ------------------------------ |\n| required  | 不能为空                                                                                                                                                              | Boolean                       | true                 | `undefined/null/“”/[]` 会触发此规则) |\n| pattern   | 校验正则表达式                                                                                                                                                           | 正则                            |                      |                                |\n| minLength | 字符串最小长度 / 数组最小个数                                                                                                                                                  | Number                        |                      | String/Number/Array            |\n| maxLength | 字符串最大长度 / 数组最大个数                                                                                                                                                  | Number                        |                      | String/Number/Array            |\n| length    | 字符串精确长度 / 数组精确个数                                                                                                                                                  | Number                        |                      | String/Number/Array            |\n| min       | 最小值                                                                                                                                                               | Number                        |                      | String/Number                  |\n| max       | 最大值                                                                                                                                                               | Number                        |                      | String/Number                  |\n| format    | 对常用 pattern 的总结                                                                                                                                                   | String                        | url、email、tel、number | String                         |\n| validator | 自定义校验, 校验的结果通过用户传递给 callback 的参数决定(校验成功的时候不要忘记执行 `callback()`,否则会校验不返回): <br/> - callback() 无参数表示校验成功 <br/> - callback('this is a error msg') 有参数表示校验失败，并且参数为错误信息 | Function(rule,value,callback) |                      |                                |\n| trigger   | 触发校验的事件名称                                                                                                                                                         | String/Array                  | onChange/onBlur/...  | onChange                       |\n| message   | 出错时候信息                                                                                                                                                            | String                        |                      |                                |\n","form":"### Form\n\n| 参数             | 说明                                                                                                                                                                                                                                      | 类型              | 默认值                                                    |\n| -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- | ------------------------------------------------------ |\n| inline         | 内联表单                                                                                                                                                                                                                                    | Boolean         | -                                                      |\n| size           | 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。<br><br>**可选值**:<br>'large'(大)<br>'medium'(中)<br>'small'(小)                                                                                                    | Enum            | 'medium'                                               |\n| fullWidth      | 单个 Item 中表单类组件宽度是否是100%                                                                                                                                                                                                                 | Boolean         | -                                                      |\n| labelAlign     | 标签的位置<br><br>**可选值**:<br>'top'(上)<br>'left'(左)<br>'inset'(内)                                                                                                                                                                            | Enum            | 'left'                                                 |\n| labelTextAlign | 标签的左右对齐方式<br><br>**可选值**:<br>'left'(左)<br>'right'(右)                                                                                                                                                                                    | Enum            | -                                                      |\n| field          | field 实例, 传 false 会禁用 field                                                                                                                                                                                                             | any             | -                                                      |\n| saveField      | 保存 Form 自动生成的 field 对象<br><br>**签名**:<br>Function() => void                                                                                                                                                                             | Function        | func.noop                                              |\n| labelCol       | 控制第一级 Item 的 labelCol                                                                                                                                                                                                                   | Object          | -                                                      |\n| wrapperCol     | 控制第一级 Item 的 wrapperCol                                                                                                                                                                                                                 | Object          | -                                                      |\n| onSubmit       | form内有 `htmlType=\"submit\"` 的元素的时候会触发<br><br>**签名**:<br>Function() => void                                                                                                                                                               | Function        | function preventDefault(e) {     e.preventDefault(); } |\n| children       | 子元素                                                                                                                                                                                                                                     | any             | -                                                      |\n| value          | 表单数值                                                                                                                                                                                                                                    | Object          | -                                                      |\n| onChange       | 表单变化回调<br><br>**签名**:<br>Function(values: Object, item: Object) => void<br>**参数**:<br>_values_: {Object} 表单数据<br>_item_: {Object} 详细<br>_item.name_: {String} 变化的组件名<br>_item.value_: {String} 变化的数据<br>_item.field_: {Object} field 实例 | Function        | func.noop                                              |\n| component      | 设置标签类型                                                                                                                                                                                                                                  | String/Function | 'form'                                                 |\n| device         | 预设屏幕宽度<br><br>**可选值**:<br>'phone', 'tablet', 'desktop'                                                                                                                                                                                  | Enum            | 'desktop'                                              |\n| responsive     | 是否开启内置的响应式布局 （使用ResponsiveGrid）                                                                                                                                                                                                         | Boolean         | -                                                      |\n| isPreview      | 是否开启预览态                                                                                                                                                                                                                                 | Boolean         | -                                                      |\n\n### Form.Item\n\n> 手动传递了 wrapCol labelCol 会使用 Grid 辅助布局; labelAlign='top' 会强制禁用 Grid\n\n| 参数                  | 说明                                                                                                                      | 类型                 | 默认值   |\n| ------------------- | ----------------------------------------------------------------------------------------------------------------------- | ------------------ | ----- |\n| label               | label 标签的文本                                                                                                             | ReactNode          | -     |\n| size                | 单个 Item 的 size 自定义，优先级高于 Form 的 size, 并且当组件与 Item 一起使用时，组件自身设置 size 属性无效。<br><br>**可选值**:<br>'large', 'small', 'medium' | Enum               | -     |\n| labelCol            | label 标签布局，通 `<Col>` 组件，设置 span offset 值，如 {span: 8, offset: 16}，该项仅在垂直表单有效                                             | Object             | -     |\n| wrapperCol          | 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol                                                                                       | Object             | -     |\n| help                | 自定义提示信息，如不设置，则会根据校验规则自动生成.                                                                                              | ReactNode          | -     |\n| extra               | 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。 位于错误信息后面                                                                    | ReactNode          | -     |\n| validateState       | 校验状态，如不设置，则会根据校验规则自动生成<br><br>**可选值**:<br>'error'(失败)<br>'success'(成功)<br>'loading'(校验中)<br>'warning'(警告)               | Enum               | -     |\n| hasFeedback         | 配合 validateState 属性使用，是否展示 success/loading 的校验状态图标, 目前只有Input支持                                                         | Boolean            | false |\n| children            | node 或者 function(values)                                                                                                | ReactNode/Function | -     |\n| fullWidth           | 单个 Item 中表单类组件宽度是否是100%                                                                                                 | Boolean            | -     |\n| labelAlign          | 标签的位置<br><br>**可选值**:<br>'top'(上)<br>'left'(左)<br>'inset'(内)                                                            | Enum               | -     |\n| labelTextAlign      | 标签的左右对齐方式<br><br>**可选值**:<br>'left'(左)<br>'right'(右)                                                                    | Enum               | -     |\n| required            | [表单校验] 不能为空                                                                                                             | Boolean            | -     |\n| asterisk            | required 的星号是否显示                                                                                                        | Boolean            | -     |\n| requiredMessage     | required 自定义错误信息                                                                                                        | String             | -     |\n| requiredTrigger     | required 自定义触发方式                                                                                                        | String/Array       | -     |\n| min                 | [表单校验] 最小值                                                                                                              | Number             | -     |\n| max                 | [表单校验] 最大值                                                                                                              | Number             | -     |\n| minmaxMessage       | min/max 自定义错误信息                                                                                                         | String             | -     |\n| minmaxTrigger       | min/max 自定义触发方式                                                                                                         | String/Array       | -     |\n| minLength           | [表单校验] 字符串最小长度 / 数组最小个数                                                                                                 | Number             | -     |\n| maxLength           | [表单校验] 字符串最大长度 / 数组最大个数                                                                                                 | Number             | -     |\n| minmaxLengthMessage | minLength/maxLength 自定义错误信息                                                                                             | String             | -     |\n| minmaxLengthTrigger | minLength/maxLength 自定义触发方式                                                                                             | String/Array       | -     |\n| length              | [表单校验] 字符串精确长度 / 数组精确个数                                                                                                 | Number             | -     |\n| lengthMessage       | length 自定义错误信息                                                                                                          | String             | -     |\n| lengthTrigger       | length 自定义触发方式                                                                                                          | String/Array       | -     |\n| pattern             | 正则校验                                                                                                                    | any                | -     |\n| patternMessage      | pattern 自定义错误信息                                                                                                         | String             | -     |\n| patternTrigger      | pattern 自定义触发方式                                                                                                         | String/Array       | -     |\n| format              | [表单校验] 四种常用的 pattern<br><br>**可选值**:<br>'number', 'email', 'url', 'tel'                                                 | Enum               | -     |\n| formatMessage       | format 自定义错误信息                                                                                                          | String             | -     |\n| formatTrigger       | format 自定义触发方式                                                                                                          | String/Array       | -     |\n| validator           | [表单校验] 自定义校验函数<br><br>**签名**:<br>Function() => void                                                                     | Function           | -     |\n| validatorTrigger    | validator 自定义触发方式                                                                                                       | String/Array       | -     |\n| autoValidate        | 是否修改数据时自动触发校验                                                                                                           | Boolean            | -     |\n| device              | 预设屏幕宽度<br><br>**可选值**:<br>'phone', 'tablet', 'desktop'                                                                  | Enum               | -     |\n| colSpan             | 在响应式布局模式下，表单项占多少列                                                                                                       | Number             | -     |\n| labelWidth          | 在响应式布局下，且label在左边时，label的宽度是多少                                                                                          | String/Number      | 100   |\n| isPreview           | 是否开启预览态                                                                                                                 | Boolean            | -     |\n| renderPreview       | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: any) => void<br>**参数**:<br>_value_: {any} 根据包裹的组件的 value 类型而决定            | Function           | -     |\n\n### Form.Submit\n\n> 继承 Button API\n\n| 参数       | 说明                                                                                                                                                                           | 类型            | 默认值       |\n| -------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- | --------- |\n| onClick  | 点击提交后触发<br><br>**签名**:<br>Function(value: Object, errors: Object, field: class) => void<br>**参数**:<br>_value_: {Object} 数据<br>_errors_: {Object} 错误数据<br>_field_: {class} 实例 | Function      | func.noop |\n| validate | 是否校验/需要校验的 name 数组                                                                                                                                                           | Boolean/Array | -         |\n| field    | 自定义 field (在 Form 内不需要设置)                                                                                                                                                    | Object        | -         |\n\n### Form.Reset\n\n> 继承 Button API\n\n| 参数        | 说明                                           | 类型       | 默认值       |\n| --------- | -------------------------------------------- | -------- | --------- |\n| names     | 自定义重置的字段                                     | Array    | -         |\n| onClick   | 点击提交后触发<br><br>**签名**:<br>Function() => void | Function | func.noop |\n| toDefault | 返回默认值                                        | Boolean  | -         |\n| field     | 自定义 field (在 Form 内不需要设置)                    | Object   | -         |\n\n### Form.Error\n\n> 自定义错误展示\n\n| 参数       | 说明                                           | 类型                 | 默认值 |\n| -------- | -------------------------------------------- | ------------------ | --- |\n| name     | 表单名                                          | String/Array       | -   |\n| field    | 自定义 field (在 Form 内不需要设置)                    | Object             | -   |\n| children | 自定义错误渲染, 可以是 node 或者 function(errors, state) | ReactNode/Function | -   |\n","grid":"### Grid.Row\n\n| 参数         | 说明                                                                                                                                                                       | 类型                   | 默认值   |\n| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | -------------------- | ----- |\n| children   | 行内容                                                                                                                                                                      | ReactNode            | -     |\n| gutter     | 列间隔                                                                                                                                                                      | String/Number        | 0     |\n| wrap       | 列在行中宽度溢出后是否换行                                                                                                                                                            | Boolean              | false |\n| fixed      | 行在某一断点下宽度是否保持不变（默认行宽度随视口变化而变化）                                                                                                                                           | Boolean              | false |\n| fixedWidth | 固定行的宽度为某一断点的宽度，不受视口影响而变动<br><br>**可选值**:<br>'xxs'(320px)<br>'xs'(480px)<br>'s'(720px)<br>'m'(990px)<br>'l'(1200px)<br>'xl'(1500px)                                       | Enum                 | -     |\n| align      | （不支持IE9浏览器）多列垂直方向对齐方式<br><br>**可选值**:<br>'top'(顶部对齐)<br>'center'(居中对齐)<br>'bottom'(底部对齐)<br>'baseline'(按第一行文字基线对齐)<br>'stretch'(未设置高度或设为 auto，将占满整个容器的高度)                | Enum                 | -     |\n| justify    | （不支持IE9浏览器）行内具有多余空间时的布局方式<br><br>**可选值**:<br>'start'(左对齐)<br>'center'(居中对齐)<br>'end'(右对齐)<br>'space-between'(两端对齐，列之间间距相等)<br>'space-around'(每列具有相同的左右间距，行两端间距是列间距的二分之一) | Enum                 | -     |\n| hidden     | 行在不同断点下的显示与隐藏<br><br>**可选值**:<br>true(在所有断点下隐藏)<br>false(在所有断点下显示)<br>'xs'(在 xs 断点下隐藏）<br>['xxs', 'xs', 's', 'm', 'l', 'xl']\\(在 xxs, xs, s, m, l, xl 断点下隐藏）              | Boolean/String/Array | -     |\n| component  | 指定以何种元素渲染该节点<br>- 默认为 'div'                                                                                                                                              | String/Function      | 'div' |\n\n### Grid.Col\n\n| 参数          | 说明                                                                                                                                                          | 类型                   | 默认值   |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------- | ----- |\n| children    | 列内容                                                                                                                                                         | ReactNode            | -     |\n| span        | 列宽度<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24                                                                                                             | String/Number        | -     |\n| fixedSpan   | 固定列宽度，宽度值为20 \\* 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30                                                                                             | String/Number        | -     |\n| offset      | （不支持IE9浏览器）列偏移<br><br>**可选值**:<br>1, 2, 3, ..., 22, 23, 24                                                                                                  | String/Number        | -     |\n| fixedOffset | （不支持IE9浏览器）固定列偏移，宽度值为20 \\* 栅格数<br><br>**可选值**:<br>1, 2, 3, ..., 28, 29, 30                                                                                  | String/Number        | -     |\n| align       | （不支持IE9浏览器）多列垂直方向对齐方式，可覆盖Row的align属性<br><br>**可选值**:<br>'top', 'center', 'bottom', 'baseline', 'stretch'                                                    | Enum                 | -     |\n| hidden      | 列在不同断点下的显示与隐藏<br><br>**可选值**:<br>true(在所有断点下隐藏)<br>false(在所有断点下显示)<br>'xs'(在 xs 断点下隐藏）<br>['xxs', 'xs', 's', 'm', 'l', 'xl']\\(在 xxs, xs, s, m, l, xl 断点下隐藏） | Boolean/String/Array | -     |\n| xxs         | >=320px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                     | String/Number/Object | -     |\n| xs          | >=480px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                     | String/Number/Object | -     |\n| s           | >=720px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                     | String/Number/Object | -     |\n| m           | >=990px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                     | String/Number/Object | -     |\n| l           | >=1200px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                    | String/Number/Object | -     |\n| xl          | >=1500px，响应式栅格，可为栅格数（span）或一个包含栅格数（span）和偏移栅格数（offset）对象                                                                                                    | String/Number/Object | -     |\n| component   | 指定以何种元素渲染该节点，默认为 'div'                                                                                                                                      | String/Function      | 'div' |\n","icon":"### Icon\n\n| 参数   | 说明                                                                                | 类型          | 默认值      |\n| ---- | --------------------------------------------------------------------------------- | ----------- | -------- |\n| size | 指定图标大小<br><br/>**可选值**<br/> xxs, xs, small, medium, large, xl, xxl, xxxl, inherit | Enum/Number | 'medium' |\n| type | 指定显示哪种图标                                                                          | String      | -        |\n","input":"### Input\n\n| 参数              | 说明                                                                                                                                                                                                                           | 类型            | 默认值       |\n| --------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- | --------- |\n| value           | 当前值                                                                                                                                                                                                                          | String/Number | -         |\n| size            | 尺寸<br><br>**可选值**:<br>'small'(小)<br>'medium'(中)<br>'large'(大)                                                                                                                                                                | Enum          | 'medium'  |\n| defaultValue    | 初始化值                                                                                                                                                                                                                         | String/Number | -         |\n| onChange        | 发生改变的时候触发的回调<br><br>**签名**:<br>Function(value: String, e: Event) => void<br>**参数**:<br>_value_: {String} 数据<br>_e_: {Event} DOM事件对象                                                                                          | Function      | func.noop |\n| onKeyDown       | 键盘按下的时候触发的回调<br><br>**签名**:<br>Function(e: Event, opts: Object) => void<br>**参数**:<br>_e_: {Event} DOM事件对象<br>_opts_: {Object} 可扩展的附加信息：<br> - opts.overMaxLength: {Boolean} 已超出最大长度<br> - opts.beTrimed: {Boolean} 输入的空格被清理 | Function      | func.noop |\n| disabled        | 禁用状态                                                                                                                                                                                                                         | Boolean       | false     |\n| maxLength       | 最大长度                                                                                                                                                                                                                         | Number        | null      |\n| hasLimitHint    | 是否展现最大长度样式                                                                                                                                                                                                                   | Boolean       | false     |\n| cutString       | 当设置了maxLength时，是否截断超出字符串                                                                                                                                                                                                     | Boolean       | true      |\n| readOnly        | 只读                                                                                                                                                                                                                           | Boolean       | false     |\n| trim            | onChange返回会自动去除头尾空字符                                                                                                                                                                                                         | Boolean       | false     |\n| placeholder     | 输入提示                                                                                                                                                                                                                         | String        | -         |\n| onFocus         | 获取焦点时候触发的回调<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                                                                                                  | Function      | func.noop |\n| onBlur          | 失去焦点时候触发的回调<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                                                                                                  | Function      | func.noop |\n| getValueLength  | 自定义字符串计算长度方式<br><br>**签名**:<br>Function(value: String) => Number<br>**参数**:<br>_value_: {String} 数据<br>**返回值**:<br>{Number} 自定义长度<br>                                                                                        | Function      | func.noop |\n| htmlType        | 原生type                                                                                                                                                                                                                       | String        | -         |\n| name            | name                                                                                                                                                                                                                         | String        | -         |\n| state           | 状态<br><br>**可选值**:<br>'error'(错误)<br>'loading'(校验中)<br>'success'(成功)<br>'warning'(警告)                                                                                                                                        | Enum          | -         |\n| isPreview       | 是否为预览态                                                                                                                                                                                                                       | Boolean       | false     |\n| renderPreview   | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                                                                            | Function      | -         |\n| label           | label                                                                                                                                                                                                                        | ReactNode     | -         |\n| hasClear        | 是否出现clear按钮                                                                                                                                                                                                                  | Boolean       | -         |\n| hasBorder       | 是否有边框                                                                                                                                                                                                                        | Boolean       | true      |\n| onPressEnter    | 按下回车的回调<br><br>**签名**:<br>Function() => void                                                                                                                                                                                 | Function      | func.noop |\n| hint            | 水印 (Icon的type类型，和hasClear占用一个地方)                                                                                                                                                                                             | String        | -         |\n| innerBefore     | 文字前附加内容                                                                                                                                                                                                                      | ReactNode     | -         |\n| innerAfter      | 文字后附加内容                                                                                                                                                                                                                      | ReactNode     | -         |\n| addonBefore     | 输入框前附加内容                                                                                                                                                                                                                     | ReactNode     | -         |\n| addonAfter      | 输入框后附加内容                                                                                                                                                                                                                     | ReactNode     | -         |\n| addonTextBefore | 输入框前附加文字                                                                                                                                                                                                                     | ReactNode     | -         |\n| addonTextAfter  | 输入框后附加文字                                                                                                                                                                                                                     | ReactNode     | -         |\n| autoComplete    | (原生input支持)                                                                                                                                                                                                                  | String        | 'off'     |\n| autoFocus       | 自动聚焦(原生input支持)                                                                                                                                                                                                              | Boolean       | -         |\n\n### Input.TextArea\n\n| 参数             | 说明                                                                                                                                                                                                                           | 类型             | 默认值       |\n| -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- | --------- |\n| value          | 当前值                                                                                                                                                                                                                          | String/Number  | -         |\n| defaultValue   | 初始化值                                                                                                                                                                                                                         | String/Number  | -         |\n| onChange       | 发生改变的时候触发的回调<br><br>**签名**:<br>Function(value: String, e: Event) => void<br>**参数**:<br>_value_: {String} 数据<br>_e_: {Event} DOM事件对象                                                                                          | Function       | func.noop |\n| onKeyDown      | 键盘按下的时候触发的回调<br><br>**签名**:<br>Function(e: Event, opts: Object) => void<br>**参数**:<br>_e_: {Event} DOM事件对象<br>_opts_: {Object} 可扩展的附加信息：<br> - opts.overMaxLength: {Boolean} 已超出最大长度<br> - opts.beTrimed: {Boolean} 输入的空格被清理 | Function       | func.noop |\n| disabled       | 禁用状态                                                                                                                                                                                                                         | Boolean        | false     |\n| maxLength      | 最大长度                                                                                                                                                                                                                         | Number         | null      |\n| hasLimitHint   | 是否展现最大长度样式                                                                                                                                                                                                                   | Boolean        | false     |\n| cutString      | 当设置了maxLength时，是否截断超出字符串                                                                                                                                                                                                     | Boolean        | true      |\n| readOnly       | 只读                                                                                                                                                                                                                           | Boolean        | false     |\n| trim           | onChange返回会自动去除头尾空字符                                                                                                                                                                                                         | Boolean        | false     |\n| placeholder    | 输入提示                                                                                                                                                                                                                         | String         | -         |\n| onFocus        | 获取焦点时候触发的回调<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                                                                                                  | Function       | func.noop |\n| onBlur         | 失去焦点时候触发的回调<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                                                                                                  | Function       | func.noop |\n| getValueLength | 自定义字符串计算长度方式<br><br>**签名**:<br>Function(value: String) => Number<br>**参数**:<br>_value_: {String} 数据<br>**返回值**:<br>{Number} 自定义长度<br>                                                                                        | Function       | func.noop |\n| htmlType       | 原生type                                                                                                                                                                                                                       | String         | -         |\n| name           | name                                                                                                                                                                                                                         | String         | -         |\n| state          | 状态<br><br>**可选值**:<br>'error'(错误)<br>'warning'                                                                                                                                                                               | Enum           | -         |\n| isPreview      | 是否为预览态                                                                                                                                                                                                                       | Boolean        | false     |\n| renderPreview  | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                                                                            | Function       | -         |\n| hasBorder      | 是否有边框                                                                                                                                                                                                                        | Boolean        | true      |\n| autoHeight     | 自动高度 true / {minRows: 2, maxRows: 4}                                                                                                                                                                                         | Boolean/Object | false     |\n| rows           | 多行文本框高度 <br />(不要直接用height设置多行文本框的高度, ie9 10会有兼容性问题)                                                                                                                                                                         | Number         | 4         |\n\n### Input.Group\n\n| 参数                   | 说明          | 类型        | 默认值 |\n| -------------------- | ----------- | --------- | --- |\n| addonBefore          | 输入框前附加内容    | ReactNode | -   |\n| addonBeforeClassName | 输入框前附加内容css | String    | -   |\n| addonAfter           | 输入框后附加内容    | ReactNode | -   |\n| addonAfterClassName  | 输入框后额外css   | String    | -   |\n| rtl                  | rtl         | Boolean   | -   |\n","loading":"### Loading\n\n| 参数         | 说明                                                               | 类型      | 默认值      |\n| ---------- | ---------------------------------------------------------------- | ------- | -------- |\n| tip        | 自定义内容                                                            | any     | -        |\n| size       | 设置动画尺寸<br><br>**可选值**:<br>'large'(大号)<br>'medium'(中号)            | Enum    | 'large'  |\n| tipAlign   | 自定义内容位置<br><br>**可选值**:<br>'right'(出现在动画右边)<br>'bottom'(出现在动画下面) | Enum    | 'bottom' |\n| visible    | loading 状态, 默认 true                                              | Boolean | true     |\n| indicator  | 自定义动画                                                            | any     | -        |\n| color      | 动画颜色                                                             | String  | -        |\n| fullScreen | 全屏展示                                                             | Boolean | -        |\n| children   | 子元素                                                              | any     | -        |\n| inline     | should loader be displayed inline                                | Boolean | true     |\n","menu-button":"### MenuButton\n\n| 参数                  | 说明                                                     | 类型        | 默认值       |\n| ------------------- | ------------------------------------------------------ | --------- | --------- |\n| label               | 按钮上的文本内容                                               | ReactNode | -         |\n| autoWidth           | 弹层是否与按钮宽度相同                                            | Boolean   | true      |\n| popupTriggerType    | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'             | Enum      | 'click'   |\n| popupContainer      | 弹层容器                                                   | any       | -         |\n| visible             | 弹层展开状态                                                 | Boolean   | -         |\n| defaultVisible      | 弹层默认是否展开                                               | Boolean   | -         |\n| onVisibleChange     | 弹层在显示和隐藏触发的事件<br><br>**签名**:<br>Function() => void     | Function  | func.noop |\n| popupStyle          | 弹层自定义样式                                                | Object    | -         |\n| popupClassName      | 弹层自定义样式类                                               | String    | -         |\n| popupProps          | 弹层属性透传                                                 | Object    | -         |\n| followTrigger       | 是否跟随滚动                                                 | Boolean   | -         |\n| defaultSelectedKeys | 默认激活的菜单项（用法同 Menu 非受控）                                 | Array     | \\[]       |\n| selectedKeys        | 激活的菜单项（用法同 Menu 受控）                                    | Array     | -         |\n| selectMode          | 菜单的选择模式，同 Menu<br><br>**可选值**:<br>'single', 'multiple' | Enum      | -         |\n| onItemClick         | 点击菜单项后的回调，同 Menu<br><br>**签名**:<br>Function() => void  | Function  | func.noop |\n| onSelect            | 选择菜单后的回调，同 Menu<br><br>**签名**:<br>Function() => void   | Function  | func.noop |\n| menuProps           | 菜单属性透传                                                 | Object    | {}        |\n","menu":"### Menu\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                                                                                                              | 类型              | 默认值        |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- | ---------- |\n| children            | 菜单项和子菜单                                                                                                                                                                                                                                                                                                                                                         | ReactNode       | -          |\n| onItemClick         | 点击菜单项触发的回调函数<br><br>**签名**:<br>Function(key: String, item: Object, event: Object) => void<br>**参数**:<br>_key_: {String} 点击的菜单项的 key 值<br>_item_: {Object} 点击的菜单项对象<br>_event_: {Object} 点击的事件对象                                                                                                                                                                 | Function        | () => {}   |\n| openKeys            | 当前打开的子菜单的 key 值                                                                                                                                                                                                                                                                                                                                                 | String/Array    | -          |\n| defaultOpenKeys     | 初始打开的子菜单的 key 值                                                                                                                                                                                                                                                                                                                                                 | String/Array    | \\[]        |\n| defaultOpenAll      | 初始展开所有的子菜单，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效，优先级高于 defaultOpenKeys                                                                                                                                                                                                                                                                            | Boolean         | false      |\n| onOpen              | 打开或关闭子菜单触发的回调函数<br><br>**签名**:<br>Function(key: Array, extra: Object) => void<br>**参数**:<br>_key_: {Array} 打开的所有子菜单的 key 值<br>_extra_: {Object} 额外参数<br>_extra.key_: {String} 当前操作子菜单的 key 值<br>_extra.open_: {Boolean} 是否是打开                                                                                                                                   | Function        | () => {}   |\n| mode                | 子菜单打开的模式<br><br>**可选值**:<br>'inline', 'popup'                                                                                                                                                                                                                                                                                                                   | Enum            | 'inline'   |\n| triggerType         | 子菜单打开的触发行为<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                                                                                                                  | Enum            | 'click'    |\n| openMode            | 展开内连子菜单的模式，同时可以展开一个子菜单还是多个子菜单，该属性仅在 mode 为 inline 时生效<br><br>**可选值**:<br>'single', 'multiple'                                                                                                                                                                                                                                                                   | Enum            | 'multiple' |\n| inlineIndent        | 内连子菜单缩进距离                                                                                                                                                                                                                                                                                                                                                       | Number          | 20         |\n| popupAutoWidth      | 是否自动让弹层的宽度和菜单项保持一致，如果弹层的宽度比菜单项小则和菜单项保持一致，如果宽度大于菜单项则不做处理                                                                                                                                                                                                                                                                                                         | Boolean         | false      |\n| popupAlign          | 弹层的对齐方式<br><br>**可选值**:<br>'follow', 'outside'                                                                                                                                                                                                                                                                                                                  | Enum            | 'follow'   |\n| popupProps          | 弹层自定义 props                                                                                                                                                                                                                                                                                                                                                     | Object/Function | {}         |\n| popupClassName      | 弹出子菜单自定义 className                                                                                                                                                                                                                                                                                                                                              | String          | -          |\n| popupStyle          | 弹出子菜单自定义 style                                                                                                                                                                                                                                                                                                                                                  | Object          | -          |\n| selectedKeys        | 当前选中菜单项的 key 值                                                                                                                                                                                                                                                                                                                                                  | String/Array    | -          |\n| defaultSelectedKeys | 初始选中菜单项的 key 值                                                                                                                                                                                                                                                                                                                                                  | String/Array    | \\[]        |\n| onSelect            | 选中或取消选中菜单项触发的回调函数<br><br>**签名**:<br>Function(selectedKeys: Array, item: Object, extra: Object) => void<br>**参数**:<br>_selectedKeys_: {Array} 选中的所有菜单项的值<br>_item_: {Object} 选中或取消选中的菜单项<br>_extra_: {Object} 额外参数<br>_extra.select_: {Boolean} 是否是选中<br>_extra.key_: {Array} 菜单项的 key<br>_extra.label_: {Object} 菜单项的文本<br>_extra.keyPath_: {Array} 菜单项 key 的路径 | Function        | () => {}   |\n| selectMode          | 选中模式，单选还是多选，默认无值，不可选<br><br>**可选值**:<br>'single', 'multiple'                                                                                                                                                                                                                                                                                                    | Enum            | -          |\n| shallowSelect       | 是否只能选择第一层菜单项（不能选择子菜单中的菜单项）                                                                                                                                                                                                                                                                                                                                      | Boolean         | false      |\n| hasSelectedIcon     | 是否显示选中图标，如果设置为 false 需配合配置平台设置选中时的背景色以示区分                                                                                                                                                                                                                                                                                                                       | Boolean         | true       |\n| isSelectIconRight   | 是否将选中图标居右，仅当 hasSelectedIcon 为true 时生效。<br>注意：SubMenu 上的选中图标一直居左，不受此API控制                                                                                                                                                                                                                                                                                       | Boolean         | false      |\n| direction           | 菜单第一层展示方向<br><br>**可选值**:<br>'ver', 'hoz'                                                                                                                                                                                                                                                                                                                       | Enum            | 'ver'      |\n| hozAlign            | 横向菜单条 item 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效<br><br>**可选值**:<br>'left', 'right'                                                                                                                                                                                                                                                              | Enum            | 'left'     |\n| hozInLine           | 横向菜单模式下，是否维持在一行，即超出一行折叠成 SubMenu 显示， 仅在 direction='hoz' mode='popup' 时生效                                                                                                                                                                                                                                                                                        | Boolean         | false      |\n| header              | 自定义菜单头部                                                                                                                                                                                                                                                                                                                                                         | ReactNode       | -          |\n| footer              | 自定义菜单尾部                                                                                                                                                                                                                                                                                                                                                         | ReactNode       | -          |\n| autoFocus           | 是否自动获得焦点                                                                                                                                                                                                                                                                                                                                                        | Boolean         | false      |\n| focusedKey          | 当前获得焦点的子菜单或菜单项 key 值                                                                                                                                                                                                                                                                                                                                            | String          | -          |\n| embeddable          | 是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Menu style={{lineHeight: '100px'}}>` 自定义高度                                                                                                                                                                                                                                                         | Boolean         | false      |\n\n### Menu.Item\n\n| 参数       | 说明      | 类型        | 默认值   |\n| -------- | ------- | --------- | ----- |\n| disabled | 是否禁用    | Boolean   | false |\n| helper   | 帮助文本    | ReactNode | -     |\n| children | 菜单项标签内容 | ReactNode | -     |\n\n### Menu.SubMenu\n\n| 参数         | 说明                                                               | 类型        | 默认值             |\n| ---------- | ---------------------------------------------------------------- | --------- | --------------- |\n| label      | 标签内容                                                             | ReactNode | -               |\n| selectable | 是否可选，该属性仅在设置 Menu 组件 selectMode 属性后生效                            | Boolean   | false           |\n| mode       | 子菜单打开方式，如果设置会覆盖 Menu 上的同名属性<br><br>**可选值**:<br>'inline', 'popup' | Enum      | Menu 的 mode 属性值 |\n| children   | 菜单项或下一级子菜单                                                       | ReactNode | -               |\n\n### Menu.PopupItem\n\n| 参数       | 说明      | 类型        | 默认值 |\n| -------- | ------- | --------- | --- |\n| label    | 标签内容    | ReactNode | -   |\n| children | 自定义弹层内容 | ReactNode | -   |\n\n### Menu.CheckboxItem\n\n> 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑\n\n| 参数            | 说明                                                                                                                                                     | 类型        | 默认值      |\n| ------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- | -------- |\n| checked       | 是否选中                                                                                                                                                   | Boolean   | false    |\n| indeterminate | 是否半选中                                                                                                                                                  | Boolean   | false    |\n| disabled      | 是否禁用                                                                                                                                                   | Boolean   | false    |\n| onChange      | 选中或取消选中触发的回调函数<br><br>**签名**:<br>Function(checked: Boolean, event: Object) => void<br>**参数**:<br>_checked_: {Boolean} 是否选中<br>_event_: {Object} 选中事件对象 | Function  | () => {} |\n| helper        | 帮助文本                                                                                                                                                   | ReactNode | -        |\n| children      | 标签内容                                                                                                                                                   | ReactNode | -        |\n\n### Menu.RadioItem\n\n> 该子组件选中情况不受 defaultSelectedKeys/selectedKeys 控制，请自行控制选中逻辑\n\n| 参数       | 说明                                                                                                                                                     | 类型        | 默认值      |\n| -------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | --------- | -------- |\n| checked  | 是否选中                                                                                                                                                   | Boolean   | false    |\n| disabled | 是否禁用                                                                                                                                                   | Boolean   | false    |\n| onChange | 选中或取消选中触发的回调函数<br><br>**签名**:<br>Function(checked: Boolean, event: Object) => void<br>**参数**:<br>_checked_: {Boolean} 是否选中<br>_event_: {Object} 选中事件对象 | Function  | () => {} |\n| helper   | 帮助文本                                                                                                                                                   | ReactNode | -        |\n| children | 标签内容                                                                                                                                                   | ReactNode | -        |\n\n### Menu.Group\n\n| 参数       | 说明   | 类型        | 默认值 |\n| -------- | ---- | --------- | --- |\n| label    | 标签内容 | ReactNode | -   |\n| children | 菜单项  | ReactNode | -   |\n\n### Menu.Divider\n\n<!-- api-extra-start -->\n\n### Menu.create(props)\n\n创建上下文菜单。\n\n-   props 参数可传入 Menu 所有支持的 props\n-   props 额外支持 overlayProps，用来自定义 Menu 所在的弹层\n\n<!-- api-extra-end -->\n","message":"### Message\n\n| 参数             | 说明                                                                                 | 类型        | 默认值       |\n| -------------- | ---------------------------------------------------------------------------------- | --------- | --------- |\n| size           | 反馈大小<br><br>**可选值**:<br>'medium', 'large'                                          | Enum      | 'medium'  |\n| type           | 反馈类型<br><br>**可选值**:<br>'success', 'warning', 'error', 'notice', 'help', 'loading' | Enum      | 'success' |\n| shape          | 反馈外观<br><br>**可选值**:<br>'inline', 'addon', 'toast'                                 | Enum      | 'inline'  |\n| title          | 标题                                                                                 | ReactNode | -         |\n| children       | 内容                                                                                 | ReactNode | -         |\n| defaultVisible | 默认是否显示                                                                             | Boolean   | true      |\n| visible        | 当前是否显示                                                                             | Boolean   | -         |\n| iconType       | 显示的图标类型，会覆盖内部设置的IconType                                                           | String    | -         |\n| closeable      | 显示关闭按钮                                                                             | Boolean   | false     |\n| onClose        | 关闭按钮的回调<br><br>**签名**:<br>Function() => void                                       | Function  | () => {}  |\n| afterClose     | 关闭之后调用的函数<br><br>**签名**:<br>Function() => void                                     | Function  | () => {}  |\n| animation      | 是否开启展开收起动画                                                                         | Boolean   | true      |\n\n<!-- api-extra-start -->\n\n### Message.show\n\n`Message.show(props)` 提供一个单例的调用方式，配置参数如下（继承 `Overlay` 的配置）：\n\n| 参数           | 说明                    | 类型        | 默认值       |\n| ------------ | --------------------- | --------- | --------- |\n| type         | 反馈类型                  | String    | 'success' |\n| title        | 反馈标题                  | ReactNode | -         |\n| content      | 反馈内容                  | ReactNode | -         |\n| duration     | 显示持续时间，0表示一直存在，以毫秒为单位 | Number    | 3000      |\n| align        | 对齐方式，参考Overlay        | String    | 'tc tc'   |\n| offset       | 对齐之后的偏移位置             | Array     | [0, 0]    |\n| hasMask      | 是否带有遮罩                | Boolean   | false     |\n| closeable    | 显示关闭按钮                | Boolean   | false     |\n| afterClose   | 关闭事件的回调函数             | Function  | -         |\n| overlayProps | 透传到弹层的属性对象            | Object    | -         |\n\n示例：\n\n```js\nMessage.show({\n    type: 'error',\n    title: '错误',\n    content: '请联系相关人员反馈！',\n    hasMask: true\n});\n```\n\n### Message.hide\n\n`Message.hide()` 提供关闭反馈弹层的快捷方法。\n\n### Message.[success|error|notice|help|loading]\n\n`Message.show({type: type, title: 'xxx'});` 的便捷调用方法。\n\n示例：\n\n```js\nMessage.success('反馈内容');\n\n// 或者\nMessage.success({\n    title: '反馈内容',\n    duration: 1000\n});\n```\n\n<!-- api-extra-end -->\n","nav":"### Nav\n\n> 继承自 `Menu` 的能力请查看 `Menu` 文档\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                                                                                                                 | 类型           | 默认值                                                                   |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------ | --------------------------------------------------------------------- |\n| children            | 导航项和子导航                                                                                                                                                                                                                                                                                                                                                            | ReactNode    | -                                                                     |\n| type                | 导航类型<br><br>**可选值**:<br>'normal'(普通)<br>'primary'(主要)<br>'secondary'(次要)<br>'line'(线形)                                                                                                                                                                                                                                                                             | Enum         | 'normal'                                                              |\n| direction           | 导航布局<br><br>**可选值**:<br>'hoz'(水平)<br>'ver'(垂直)                                                                                                                                                                                                                                                                                                                     | Enum         | 'ver'                                                                 |\n| hozAlign            | 横向导航条 items 和 footer 的对齐方向，在 direction 设置为 'hoz' 并且 header 存在时生效<br><br>**可选值**:<br>'left', 'right'                                                                                                                                                                                                                                                                | Enum         | 'left'                                                                |\n| activeDirection     | 设置组件选中状态的 active 边方向<br><br>**可选值**:<br>null(无)<br>'top'(上)<br>'bottom'(下)<br>'left'(左)<br>'right'(右)                                                                                                                                                                                                                                                              | Enum         | 当 direction 为 'hoz' 时，默认值为 'bottom'，当 direction 为 'ver' 时，默认值为 'left' |\n| mode                | 子导航打开的模式（水平导航只支持弹出）<br><br>**可选值**:<br>'inline', 'popup'                                                                                                                                                                                                                                                                                                           | Enum         | 'inline'                                                              |\n| triggerType         | 子导航打开的触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                                                                                                                     | Enum         | 'click'                                                               |\n| inlineIndent        | 内联子导航缩进距离                                                                                                                                                                                                                                                                                                                                                          | Number       | 20                                                                    |\n| defaultOpenAll      | 初始展开所有的子导航，只在 mode 设置为 'inline' 以及 openMode 设置为 'multiple' 下生效                                                                                                                                                                                                                                                                                                     | Boolean      | false                                                                 |\n| openMode            | 内联子导航的展开模式，同时可以展开一个同级子导航还是多个同级子导航，该属性仅在 mode 为 inline 时生效<br><br>**可选值**:<br>'single', 'multiple'                                                                                                                                                                                                                                                                  | Enum         | 'multiple'                                                            |\n| selectedKeys        | 当前选中导航项的 key 值                                                                                                                                                                                                                                                                                                                                                     | String/Array | -                                                                     |\n| defaultSelectedKeys | 初始选中导航项的 key 值                                                                                                                                                                                                                                                                                                                                                     | String/Array | \\[]                                                                   |\n| onSelect            | 选中或取消选中导航项触发的回调函数<br><br>**签名**:<br>Function(selectedKeys: Array, item: Object, extra: Object) => void<br>**参数**:<br>_selectedKeys_: {Array} 选中的所有导航项的 key<br>_item_: {Object} 选中或取消选中的导航项<br>_extra_: {Object} 额外参数<br>_extra.select_: {Boolean} 是否是选中<br>_extra.key_: {Array} 导航项的 key<br>_extra.label_: {Object} 导航项的文本<br>_extra.keyPath_: {Array} 导航项 key 的路径 | Function     | -                                                                     |\n| popupAlign          | 弹出子导航的对齐方式（水平导航只支持 follow ）<br><br>**可选值**:<br>'follow', 'outside'                                                                                                                                                                                                                                                                                                 | Enum         | 'follow'                                                              |\n| popupClassName      | 弹出子导航的自定义类名                                                                                                                                                                                                                                                                                                                                                        | String       | -                                                                     |\n| iconOnly            | 是否只显示图标                                                                                                                                                                                                                                                                                                                                                            | Boolean      | -                                                                     |\n| hasArrow            | 是否显示右侧的箭头（仅在 iconOnly=true 时生效）                                                                                                                                                                                                                                                                                                                                    | Boolean      | true                                                                  |\n| hasTooltip          | 是否有 ToolTips （仅在 iconOnly=true 时生效）                                                                                                                                                                                                                                                                                                                                | Boolean      | false                                                                 |\n| header              | 自定义导航头部                                                                                                                                                                                                                                                                                                                                                            | ReactNode    | -                                                                     |\n| footer              | 自定义导航尾部                                                                                                                                                                                                                                                                                                                                                            | ReactNode    | -                                                                     |\n| embeddable          | 是否开启嵌入式模式，一般用于Layout的布局中，开启后没有默认背景、外层border、box-shadow，可以配合`<Nav style={{lineHeight: '100px'}}>` 自定义高度                                                                                                                                                                                                                                                             | Boolean      | false                                                                 |\n\n### Nav.Group\n\n> 继承自 `Menu.Group` 的能力请查看 `Menu.Group` 文档\n\n| 参数       | 说明      | 类型        | 默认值 |\n| -------- | ------- | --------- | --- |\n| label    | 标签内容    | ReactNode | -   |\n| children | 导航项和子导航 | ReactNode | -   |\n\n### Nav.Item\n\n> 继承自 `Menu.Item` 的能力请查看 `Menu.Item` 文档\n\n| 参数       | 说明                                                         | 类型               | 默认值 |\n| -------- | ---------------------------------------------------------- | ---------------- | --- |\n| icon     | 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"icon type\" />` | String/ReactNode | -   |\n| children | 导航内容                                                       | ReactNode        | -   |\n\n### Nav.PopupItem\n\n> 继承自 `Menu.PopupItem` 的能力请查看 `Menu.PopupItem` 文档\n\n| 参数       | 说明                                                          | 类型               | 默认值 |\n| -------- | ----------------------------------------------------------- | ---------------- | --- |\n| icon     | 自定义图标，可以使用 Icon 的 type, 也可以使用组件 `<Icon type=\"icon type\" />` | String/ReactNode | -   |\n| label    | 标签内容                                                        | ReactNode        | -   |\n| children | 弹出内容                                                        | ReactNode        | -   |\n\n### Nav.SubNav\n\n> 继承自 `Menu.SubMenu` 的能力请查看 `Menu.SubMenu` 文档\n\n| 参数         | 说明                                                         | 类型               | 默认值   |\n| ---------- | ---------------------------------------------------------- | ---------------- | ----- |\n| icon       | 自定义图标，可以使用 Icon 的 type，也可以使用组件 `<Icon type=\"your type\" />` | String/ReactNode | -     |\n| label      | 标签内容                                                       | ReactNode        | -     |\n| selectable | 是否可选                                                       | Boolean          | false |\n| children   | 导航项和子导航                                                    | ReactNode        | -     |\n","number-picker":"### NumberPicker\n\n| 参数            | 说明                                                                                                                                             | 类型            | 默认值       |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- | ------------- | --------- |\n| size          | 大小<br><br>**可选值**:<br>'large', 'medium'                                                                                                        | Enum          | 'medium'  |\n| type          | 设置类型<br><br>**可选值**:<br>'normal'(普通)<br>'inline'(内联)                                                                                           | Enum          | 'normal'  |\n| value         | 当前值                                                                                                                                            | Number        | -         |\n| defaultValue  | 默认值                                                                                                                                            | Number        | -         |\n| disabled      | 是否禁用                                                                                                                                           | Boolean       | -         |\n| step          | 步长                                                                                                                                             | Number/String | 1         |\n| precision     | 保留小数点后位数                                                                                                                                       | Number        | 0         |\n| editable      | 用户是否可以输入                                                                                                                                       | Boolean       | true      |\n| autoFocus     | 自动焦点                                                                                                                                           | Boolean       | -         |\n| onChange      | 数值被改变的事件<br><br>**签名**:<br>Function(value: Number, e: Event) => void<br>**参数**:<br>_value_: {Number} 数据<br>_e_: {Event} DOM事件对象                | Function      | func.noop |\n| onKeyDown     | 键盘按下<br><br>**签名**:<br>Function() => void                                                                                                      | Function      | func.noop |\n| onFocus       | 焦点获得<br><br>**签名**:<br>Function() => void                                                                                                      | Function      | -         |\n| onBlur        | 焦点失去<br><br>**签名**:<br>Function() => void                                                                                                      | Function      | func.noop |\n| onCorrect     | 数值订正后的回调<br><br>**签名**:<br>Function(obj: Object) => void<br>**参数**:<br>_obj_: {Object} {currentValue,oldValue:String}                          | Function      | func.noop |\n| max           | 最大值                                                                                                                                            | Number        | Infinity  |\n| min           | 最小值                                                                                                                                            | Number        | -Infinity |\n| format        | 格式化当前值<br><br>**签名**:<br>Function(value: Number) => String/Number<br>**参数**:<br>_value_: {Number} null<br>**返回值**:<br>{String/Number} null<br> | Function      | -         |\n| upBtnProps    | 增加按钮的props                                                                                                                                     | Object        | -         |\n| downBtnProps  | 减少按钮的props                                                                                                                                     | Object        | -         |\n| label         | 内联 label                                                                                                                                       | ReactNode     | -         |\n| innerAfter    | inner after                                                                                                                                    | ReactNode     | -         |\n| isPreview     | 是否为预览态                                                                                                                                         | Boolean       | -         |\n| renderPreview | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                              | Function      | -         |\n| device        | 预设屏幕宽度<br><br>**可选值**:<br>'phone', 'tablet', 'desktop'                                                                                         | Enum          | -         |\n","overlay":"### Overlay\n\n| 参数                     | 说明                                                                                                                                                                                                                                                                                                          | 类型             | 默认值                                        |\n| ---------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------- | ------------------------------------------ |\n| children               | 弹层内容                                                                                                                                                                                                                                                                                                        | any            | -                                          |\n| visible                | 是否显示弹层                                                                                                                                                                                                                                                                                                      | Boolean        | false                                      |\n| onRequestClose         | 弹层请求关闭时触发事件的回调函数<br><br>**签名**:<br>Function(type: String, e: Object) => void<br>**参数**:<br>_type_: {String} 弹层关闭的来源<br>_e_: {Object} DOM 事件                                                                                                                                                                 | Function       | func.noop                                  |\n| target                 | 弹层定位的参照元素                                                                                                                                                                                                                                                                                                   | any            | Position.VIEWPORT                          |\n| align                  | 弹层相对于参照元素的定位, 详见开发指南的[定位部分](#定位)                                                                                                                                                                                                                                                                            | String/Boolean | 'tl bl'                                    |\n| offset                 | 弹层相对于trigger的定位的微调, 接收数组[hoz, ver], 表示弹层在 left / top 上的增量<br>e.g. [100, 100] 表示往右(RTL 模式下是往左) 、下分布偏移100px                                                                                                                                                                                                   | Array          | [0, 0]                                     |\n| container              | 渲染组件的容器，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点                                                                                                                                                                                                                                                     | any            | -                                          |\n| hasMask                | 是否显示遮罩                                                                                                                                                                                                                                                                                                      | Boolean        | false                                      |\n| canCloseByEsc          | 是否支持 esc 按键关闭弹层                                                                                                                                                                                                                                                                                             | Boolean        | true                                       |\n| canCloseByOutSideClick | 点击弹层外的区域是否关闭弹层，不显示遮罩时生效                                                                                                                                                                                                                                                                                     | Boolean        | true                                       |\n| canCloseByMask         | 点击遮罩区域是否关闭弹层，显示遮罩时生效                                                                                                                                                                                                                                                                                        | Boolean        | true                                       |\n| beforeOpen             | 弹层打开前触发事件的回调函数<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                         | Function       | func.noop                                  |\n| onOpen                 | 弹层打开时触发事件的回调函数<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                         | Function       | func.noop                                  |\n| afterOpen              | 弹层打开后触发事件的回调函数, 如果有动画，则在动画结束后触发<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                        | Function       | func.noop                                  |\n| beforeClose            | 弹层关闭前触发事件的回调函数<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                         | Function       | func.noop                                  |\n| onClose                | 弹层关闭时触发事件的回调函数<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                         | Function       | func.noop                                  |\n| afterClose             | 弹层关闭后触发事件的回调函数, 如果有动画，则在动画结束后触发<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                        | Function       | func.noop                                  |\n| beforePosition         | 弹层定位完成前触发的事件<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                           | Function       | func.noop                                  |\n| onPosition             | 弹层定位完成时触发的事件<br><br>**签名**:<br>Function(config: Object, node: Object) => void<br>**参数**:<br>_config_: {Object} 定位的参数<br>_config.align_: {Array} 对齐方式，如 ['cc', 'cc']（如果开启 needAdjust，可能和预先设置的 align 不同）<br>_config.top_: {Number} 距离视口顶部距离<br>_config.left_: {Number} 距离视口左侧距离<br>_node_: {Object} 定位参照的容器节点 | Function       | func.noop                                  |\n| shouldUpdatePosition   | 是否在每次弹层重新渲染后强制更新定位信息，一般用于弹层内容区域大小发生变化时，仍需保持原来的定位方式                                                                                                                                                                                                                                                          | Boolean        | false                                      |\n| autoFocus              | 弹层打开时是否让其中的元素自动获取焦点                                                                                                                                                                                                                                                                                         | Boolean        | false                                      |\n| needAdjust             | 当弹层由于页面滚动等情况不在可视区域时，是否自动调整定位以出现在可视区域                                                                                                                                                                                                                                                                        | Boolean        | true                                       |\n| disableScroll          | 是否禁用页面滚动                                                                                                                                                                                                                                                                                                    | Boolean        | false                                      |\n| cache                  | 隐藏时是否保留子节点                                                                                                                                                                                                                                                                                                  | Boolean        | false                                      |\n| safeNode               | 安全节点，当点击 document 的时候，如果包含该节点则不会关闭弹层，如果是函数需要返回 ref，如果是字符串则是该 DOM 的 id，也可以直接传入 DOM 节点，或者以上值组成的数组                                                                                                                                                                                                             | any            | -                                          |\n| wrapperClassName       | 弹层的根节点的样式类                                                                                                                                                                                                                                                                                                  | String         | -                                          |\n| wrapperStyle           | 弹层的根节点的内联样式                                                                                                                                                                                                                                                                                                 | Object         | -                                          |\n| animation              | 配置动画的播放方式，支持 { in: 'enter-class', out: 'leave-class' } 的对象参数，如果设置为 false，则不播放动画。 请参考 Animate 组件的文档获取可用的动画名                                                                                                                                                                                                  | Object/Boolean | { in: 'expandInDown', out: 'expandOutUp' } |\n\n### Overlay.Popup\n\n> 继承 Overlay 的 API，除非特别说明\n\n| 参数                  | 说明                                                                                                                                                                                                                                                     | 类型           | 默认值                            |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------ | ------------------------------ |\n| children            | 弹层内容                                                                                                                                                                                                                                                   | ReactNode    | -                              |\n| trigger             | 触发弹层显示或隐藏的元素                                                                                                                                                                                                                                           | ReactElement | -                              |\n| triggerType         | 触发弹层显示或隐藏的操作类型，可以是 'click'，'hover'，'focus'，或者它们组成的数组，如 ['hover', 'focus']                                                                                                                                                                              | String/Array | 'hover'                        |\n| triggerClickKeycode | 当 triggerType 为 click 时才生效，可自定义触发弹层显示的键盘码                                                                                                                                                                                                              | Number/Array | [KEYCODE.SPACE, KEYCODE.ENTER] |\n| visible             | 弹层当前是否显示                                                                                                                                                                                                                                               | Boolean      | -                              |\n| defaultVisible      | 弹层默认是否显示                                                                                                                                                                                                                                               | Boolean      | false                          |\n| onVisibleChange     | 弹层显示或隐藏时触发的回调函数<br><br>**签名**:<br>Function(visible: Boolean, type: String, e: Object) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示或隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发<br>_e_: {Object} DOM事件 | Function     | func.noop                      |\n| disabled            | 设置此属性，弹层无法显示或隐藏                                                                                                                                                                                                                                        | Boolean      | false                          |\n| delay               | 弹层显示或隐藏的延时时间（以毫秒为单位），在 triggerType 被设置为 hover 时生效                                                                                                                                                                                                      | Number       | 200                            |\n| canCloseByTrigger   | trigger 是否可以关闭弹层                                                                                                                                                                                                                                       | Boolean      | true                           |\n| target              | 弹层定位的参照元素                                                                                                                                                                                                                                              | any          | target 属性，即触发元素                |\n| followTrigger       | 是否跟随trigger滚动                                                                                                                                                                                                                                          | Boolean      | false                          |\n","pagination":"### Pagination\n\n| 参数               | 说明                                                                                                                                                                            | 类型                                | 默认值            |\n| ---------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------- | -------------- |\n| size             | 分页组件大小<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                          | Enum                              | 'medium'       |\n| type             | 分页组件类型<br><br>**可选值**:<br>'normal', 'simple', 'mini'                                                                                                                          | Enum                              | 'normal'       |\n| shape            | 前进后退按钮样式<br><br>**可选值**:<br>'normal', 'arrow-only', 'arrow-prev-only', 'no-border'                                                                                            | Enum                              | 'normal'       |\n| current          | （受控）当前页码                                                                                                                                                                      | Number                            | -              |\n| defaultCurrent   | （非受控）初始页码                                                                                                                                                                     | Number                            | 1              |\n| onChange         | 页码发生改变时的回调函数<br><br>**签名**:<br>Function(current: Number, e: Object) => void<br>**参数**:<br>_current_: {Number} 改变后的页码数<br>_e_: {Object} 点击事件对象                                 | Function                          | () => {}       |\n| total            | 总记录数                                                                                                                                                                          | Number                            | 100            |\n| totalRender      | 总数的渲染函数<br><br>**签名**:<br>Function(total: Number, range: Array) => void<br>**参数**:<br>_total_: {Number} 总数<br>_range_: {Array} 当前数据在总数中的区间                                    | Function                          | -              |\n| pageShowCount    | 页码显示的数量，更多的使用...代替                                                                                                                                                            | Number                            | 5              |\n| pageSize         | 一页中的记录数                                                                                                                                                                       | Number                            | 10             |\n| pageSizeSelector | 每页显示选择器类型<br><br>**可选值**:<br>false, 'filter', 'dropdown'                                                                                                                      | Enum                              | false          |\n| pageSizeList     | 每页显示选择器可选值                                                                                                                                                                    | Array&lt;Number>/Array&lt;Object> | [5, 10, 20]    |\n| pageNumberRender | 自定义页码渲染函数，函数作用于页码button以及当前页/总页数的数字渲染<br><br>**签名**:<br>Function(index: Number) => ReactNode<br>**参数**:<br>_index_: {Number} 分页的页码，从1开始<br>**返回值**:<br>{ReactNode} 返回渲染结果<br> | Function                          | index => index |\n| pageSizePosition | 每页显示选择器在组件中的位置<br><br>**可选值**:<br>'start', 'end'                                                                                                                              | Enum                              | 'start'        |\n| useFloatLayout   | 存在每页显示选择器时是否使用浮动布局                                                                                                                                                            | Boolean                           | false          |\n| onPageSizeChange | 每页显示记录数量改变时的回调函数<br><br>**签名**:<br>Function(pageSize: Number) => void<br>**参数**:<br>_pageSize_: {Number} 改变后的每页显示记录数                                                          | Function                          | () => {}       |\n| hideOnlyOnePage  | 当分页数为1时，是否隐藏分页器                                                                                                                                                               | Boolean                           | false          |\n| showJump         | type 设置为 normal 时，在页码数超过5页后，会显示跳转输入框与按钮，当设置 showJump 为 false 时，不再显示该跳转区域                                                                                                      | Boolean                           | true           |\n| link             | 设置页码按钮的跳转链接，它的值为一个包含 {page} 的模版字符串，如：<https://www.taobao.com/{page}>                                                                                                          | String                            | -              |\n| popupProps       | 弹层组件属性，透传给Popup                                                                                                                                                               | Object                            | -              |\n","progress":"### Progress\n\n| 参数              | 说明                                                                                                                                                                                          | 类型       | 默认值                                  |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | ------------------------------------ |\n| size            | 尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                            | Enum     | 'medium'                             |\n| shape           | 形态<br><br>**可选值**:<br>'circle', 'line'                                                                                                                                                      | Enum     | 'line'                               |\n| percent         | 所占百分比                                                                                                                                                                                       | Number   | 0                                    |\n| state           | 进度状态, 显示优先级: color > progressive > state<br><br>**可选值**:<br>'normal', 'success', 'error'                                                                                                    | Enum     | 'normal'                             |\n| progressive     | 是否为色彩阶段变化模式, 显示优先级: color > progressive > state                                                                                                                                             | Boolean  | false                                |\n| hasBorder       | 是否添加 Border（只适用于 Line Progress)                                                                                                                                                             | Boolean  | false                                |\n| textRender      | 文本渲染函数<br><br>**签名**:<br>Function(percent: Number, option: Object) => ReactNode<br>**参数**:<br>_percent_: {Number} 当前的进度信息<br>_option_: {Object} 额外的参数<br>**返回值**:<br>{ReactNode} 返回文本节点<br> | Function | percent => `${Math.floor(percent)}%` |\n| color           | 进度条颜色, 显示优先级: color > progressive > state                                                                                                                                                   | String   | -                                    |\n| backgroundColor | 背景色                                                                                                                                                                                         | String   | -                                    |\n","radio":"### Radio\n\n| 参数             | 说明                                                                                                                                         | 类型                    | 默认值       |\n| -------------- | ------------------------------------------------------------------------------------------------------------------------------------------ | --------------------- | --------- |\n| id             | 组件input的id                                                                                                                                 | String                | -         |\n| checked        | 设置radio是否选中                                                                                                                                | Boolean               | -         |\n| defaultChecked | 设置radio是否默认选中                                                                                                                              | Boolean               | -         |\n| label          | 通过属性配置label                                                                                                                                | ReactNode             | -         |\n| onChange       | 状态变化时触发的事件<br><br>**签名**:<br>Function(checked: Boolean, e: Event) => void<br>**参数**:<br>_checked_: {Boolean} 是否选中<br>_e_: {Event} Dom 事件对象 | Function              | func.noop |\n| onMouseEnter   | 鼠标进入enter事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} Dom 事件对象                                               | Function              | func.noop |\n| onMouseLeave   | 鼠标离开事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} Dom 事件对象                                                    | Function              | func.noop |\n| disabled       | radio是否被禁用                                                                                                                                 | Boolean               | -         |\n| value          | radio 的value                                                                                                                               | String/Number/Boolean | -         |\n| name           | name                                                                                                                                       | String                | -         |\n| isPreview      | 是否为预览态                                                                                                                                     | Boolean               | false     |\n| renderPreview  | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                          | Function              | -         |\n\n### Radio.Group\n\n| 参数            | 说明                                                                                                                                                 | 类型                                  | 默认值      |\n| ------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------- | -------- |\n| name          | name                                                                                                                                               | String                              | -        |\n| size          | 与 `shape` 属性配套使用，shape设为button时有效<br><br>**可选值**:<br>'large'(大)<br>'medium'(中)<br>'small'(小)                                                       | Enum                                | 'medium' |\n| shape         | 可以设置成 button 展示形状<br><br>**可选值**:<br>'button'(按钮状)                                                                                                 | Enum                                | -        |\n| value         | radio group的选中项的值                                                                                                                                  | String/Number/Boolean               | -        |\n| defaultValue  | radio group的默认值                                                                                                                                    | String/Number/Boolean               | -        |\n| component     | 设置标签类型                                                                                                                                             | String/Function                     | 'div'    |\n| onChange      | 选中值改变时的事件<br><br>**签名**:<br>Function(value: String/Number, e: Event) => void<br>**参数**:<br>_value_: {String/Number} 选中项的值<br>_e_: {Event} Dom 事件对象 | Function                            | () => {} |\n| disabled      | 表示radio被禁用                                                                                                                                         | Boolean                             | -        |\n| dataSource    | 可选项列表, 数据项可为 String 或者 Object, 如 `['apple', 'pear', 'orange']`                                                                                     | Array&lt;String>/Array&lt;Object>   | \\[]      |\n| children      | 通过子元素方式设置内部radio                                                                                                                                   | Array&lt;ReactElement>/ReactElement | -        |\n| itemDirection | 子项目的排列方式<br>- hoz: 水平排列 (default)<br>- ver: 垂直排列<br><br>**可选值**:<br>'hoz', 'ver'                                                                   | Enum                                | 'hoz'    |\n| isPreview     | 是否为预览态                                                                                                                                             | Boolean                             | false    |\n| renderPreview | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                  | Function                            | -        |\n","range":"### Range\n\n| 参数             | 说明                                                                                                                                                                          | 类型                                     | 默认值            |\n| -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------- | -------------- |\n| slider         | 滑块个数<br><br>**可选值**:<br>'single'(单个)<br>'double'(两个)                                                                                                                        | Enum                                   | 'single'       |\n| min            | 最小值                                                                                                                                                                         | Number                                 | 0              |\n| max            | 最大值                                                                                                                                                                         | Number                                 | 100            |\n| step           | 步长，取值必须大于 0，并且可被 (max - min) 整除。                                                                                                                                            | Number                                 | 1              |\n| value          | 设置当前取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`                                                                                                           | Number/Array&lt;Number>                | -              |\n| defaultValue   | 设置初始取值。当 `slider` 为 `single` 时，使用 `Number`，否则用 `[Number, Number]`                                                                                                           | Number/Array&lt;Number>                | -              |\n| marks          | 刻度数值显示逻辑（false 代表不显示，array 枚举显示的值，number 代表按 number 平分，object 表示按 key 划分，value 值显示）                                                                                         | Boolean/Number/Array&lt;Number>/Object | false          |\n| marksPosition  | marks显示在上方('above')or下方('below')<br><br>**可选值**:<br>'above', 'below'                                                                                                        | Enum                                   | 'above'        |\n| disabled       | 值为 `true` 时，滑块为禁用状态                                                                                                                                                         | Boolean                                | false          |\n| onChange       | 当 Range 的值发生改变后，会触发 onChange 事件，并把改变后的值作为参数传入, 如果设置了value, 要配合此函数做受控使用<br><br>**签名**:<br>Function(value: String/number) => void<br>**参数**:<br>_value_: {String/number} null | Function                               | func.noop      |\n| onProcess      | 滑块拖动的时候触发的事件,不建议在这里setState, 一般情况下不需要用, 滑动时有特殊需求时使用<br><br>**签名**:<br>Function(value: String/number) => void<br>**参数**:<br>_value_: {String/number} null                    | Function                               | func.noop      |\n| hasTip         | 是否显示 tip                                                                                                                                                                    | Boolean                                | true           |\n| tipRender      | 自定义 tip 显示内容<br><br>**签名**:<br>Function(value: Number/String) => ReactNode<br>**参数**:<br>_value_: {Number/String} 值<br>**返回值**:<br>{ReactNode} 显示内容<br>                     | Function                               | value => value |\n| reverse        | 选中态反转                                                                                                                                                                       | Boolean                                | false          |\n| pure           | 是否pure render                                                                                                                                                               | Boolean                                | false          |\n| fixedWidth     | 是否为拖动线段类型,默认slider为double, defaultValue必传且指定区间                                                                                                                              | Boolean                                | false          |\n| tooltipVisible | tooltip是否默认展示                                                                                                                                                               | Boolean                                | false          |\n| rtl            | 是否已rtl模式展示                                                                                                                                                                  | Boolean                                | false          |\n| isPreview      | 是否为预览态                                                                                                                                                                      | Boolean                                | false          |\n| renderPreview  | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                           | Function                               | -              |\n","rating":"### Rating\n\n| 参数            | 说明                                                                                                    | 类型       | 默认值        |\n| ------------- | ----------------------------------------------------------------------------------------------------- | -------- | ---------- |\n| defaultValue  | 默认值                                                                                                   | Number   | 0          |\n| size          | 尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                      | Enum     | 'medium'   |\n| value         | 值                                                                                                     | Number   | -          |\n| count         | 评分的总数                                                                                                 | Number   | 5          |\n| showGrade     | 是否显示 grade                                                                                            | Boolean  | false      |\n| allowHalf     | 是否允许半星评分                                                                                              | Boolean  | false      |\n| onChange      | 用户点击评分时触发的回调<br><br>**签名**:<br>Function(value: String) => void<br>**参数**:<br>_value_: {String} 评分值    | Function | func.noop  |\n| onHoverChange | 用户hover评分时触发的回调<br><br>**签名**:<br>Function(value: String) => void<br>**参数**:<br>_value_: {String} 评分值 | Function | func.noop  |\n| disabled      | 是否禁用                                                                                                  | Boolean  | false      |\n| readAs        | 评分文案生成方法，传入id支持无障碍时，读屏软件可读<br><br>**签名**:<br>Function() => void                                       | Function | val => val |\n| isPreview     | 是否为预览态                                                                                                | Boolean  | false      |\n| renderPreview | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值     | Function | -          |\n| readOnly      | 是否为只读态，效果上同 disabeld                                                                                  | Boolean  | false      |\n","search":"### Search\n\n> 输入框部分继承 Select.AutoComplete 的能力，可以直接用AutoComplete 的 api\n\n| 参数                 | 说明                                                                                                                                                    | 类型            | 默认值       |\n| ------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- | --------- |\n| size               | 大小<br><br>**可选值**:<br>'large'('大')<br>'medium'('小')                                                                                                   | Enum          | 'medium'  |\n| type               | 类型 shape=normal: primary/secondary; shape=simple: normal/dark;<br><br>**可选值**:<br>'primary', 'secondary', 'normal', 'dark'                            | Enum          | 'normal'  |\n| shape              | 形状<br><br>**可选值**:<br>'normal', 'simple'                                                                                                              | Enum          | 'normal'  |\n| defaultValue       | 搜索框默认值                                                                                                                                                | String        | -         |\n| value              | 搜索框数值                                                                                                                                                 | String/Number | -         |\n| onChange           | 输入关键字时的回掉<br><br>**签名**:<br>Function(value: Object) => void<br>**参数**:<br>_value_: {Object} 输入值                                                       | Function      | func.noop |\n| onSearch           | 点击搜索按钮触发的回调<br><br>**签名**:<br>Function(value: String, filterValue: String) => void<br>**参数**:<br>_value_: {String} 输入值<br>_filterValue_: {String} 选项值 | Function      | func.noop |\n| defaultFilterValue | 选择器默认值                                                                                                                                                | String        | -         |\n| filter             | 选择器                                                                                                                                                   | Array         | \\[]       |\n| filterValue        | 选择器值                                                                                                                                                  | String        | -         |\n| onFilterChange     | 选择器发生变化时回调<br><br>**签名**:<br>Function(filter: Object) => void<br>**参数**:<br>_filter_: {Object} value                                                  | Function      | func.noop |\n| dataSource         | 搜索框下拉联想列表                                                                                                                                             | Array         | -         |\n| placeholder        | 默认提示                                                                                                                                                  | String        | -         |\n| searchText         | button 的内容                                                                                                                                            | ReactNode     | -         |\n| filterProps        | 选择器的props                                                                                                                                             | Object        | -         |\n| buttonProps        | 按钮的额外属性                                                                                                                                               | Object        | {}        |\n| popupContent       | 自定义渲染的的下拉框                                                                                                                                            | ReactNode     | -         |\n| followTrigger      | 是否跟随滚动                                                                                                                                                | Boolean       | -         |\n| visible            | 自定义渲染的的下拉框                                                                                                                                            | Boolean       | -         |\n| hasClear           | 是否显示清除按钮                                                                                                                                              | Boolean       | false     |\n| hasIcon            | 是否显示搜索按钮                                                                                                                                              | Boolean       | true      |\n| disabled           | 是否禁用                                                                                                                                                  | Boolean       | false     |\n","select":"### Select\n\n| 参数                    | 说明                                                                                                                                                                                                                                                        | 类型                                     | 默认值                                |\n| --------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------- | ---------------------------------- |\n| size                  | 选择器尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                       | Enum                                   | 'medium'                           |\n| value                 | 当前值，用于受控模式                                                                                                                                                                                                                                                | any                                    | -                                  |\n| defaultValue          | 初始的默认值                                                                                                                                                                                                                                                    | any                                    | -                                  |\n| placeholder           | 没有值的时候的占位符                                                                                                                                                                                                                                                | String                                 | -                                  |\n| autoWidth             | 下拉菜单是否与选择器对齐                                                                                                                                                                                                                                              | Boolean                                | true                               |\n| label                 | 自定义内联 label                                                                                                                                                                                                                                               | ReactNode                              | -                                  |\n| hasClear              | 是否有清除按钮（单选模式有效）                                                                                                                                                                                                                                           | Boolean                                | -                                  |\n| state                 | 校验状态<br><br>**可选值**:<br>'error', 'loading'                                                                                                                                                                                                                | Enum                                   | -                                  |\n| readOnly              | 是否只读，只读模式下可以展开弹层但不能选                                                                                                                                                                                                                                      | Boolean                                | -                                  |\n| disabled              | 是否禁用选择器                                                                                                                                                                                                                                                   | Boolean                                | -                                  |\n| visible               | 当前弹层是否显示                                                                                                                                                                                                                                                  | Boolean                                | -                                  |\n| defaultVisible        | 弹层初始化是否显示                                                                                                                                                                                                                                                 | Boolean                                | -                                  |\n| onVisibleChange       | 弹层显示或隐藏时触发的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发           | Function                               | func.noop                          |\n| popupContainer        | 弹层挂载的容器节点                                                                                                                                                                                                                                                 | any                                    | -                                  |\n| popupClassName        | 弹层的 className                                                                                                                                                                                                                                             | any                                    | -                                  |\n| popupStyle            | 弹层的内联样式                                                                                                                                                                                                                                                   | Object                                 | -                                  |\n| popupProps            | 添加到弹层上的属性                                                                                                                                                                                                                                                 | Object                                 | {}                                 |\n| followTrigger         | 是否跟随滚动                                                                                                                                                                                                                                                    | Boolean                                | -                                  |\n| popupContent          | 自定义弹层的内容                                                                                                                                                                                                                                                  | ReactNode                              | -                                  |\n| menuProps             | 添加到菜单上的属性                                                                                                                                                                                                                                                 | Object                                 | -                                  |\n| filterLocal           | 是否使用本地过滤，在数据源为远程的时候需要关闭此项                                                                                                                                                                                                                                 | Boolean                                | true                               |\n| filter                | 本地过滤方法，返回一个 Boolean 值确定是否保留<br><br>**签名**:<br>Function() => void                                                                                                                                                                                          | Function                               | filter                             |\n| onToggleHighlightItem | 键盘上下键切换菜单高亮选项的回调<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                     | Function                               | func.noop                          |\n| useVirtual            | 是否开启虚拟滚动模式                                                                                                                                                                                                                                                | Boolean                                | -                                  |\n| dataSource            | 传入的数据源，可以动态渲染子项，详见 [dataSource的使用](#dataSource的使用)                                                                                                                                                                                                        | Array&lt;Object/Boolean/Number/String> | -                                  |\n| itemRender            | 渲染 MenuItem 内容的方法<br><br>**签名**:<br>Function(item: Object, searchValue: String) => ReactNode<br>**参数**:<br>_item_: {Object} 渲染节点的item<br>_searchValue_: {String} 搜索关键字（如果开启搜索）<br>**返回值**:<br>{ReactNode} item node<br>                                   | Function                               | -                                  |\n| mode                  | 选择器模式<br><br>**可选值**:<br>'single', 'multiple', 'tag'                                                                                                                                                                                                      | Enum                                   | 'single'                           |\n| notFoundContent       | 弹层内容为空的文案                                                                                                                                                                                                                                                 | ReactNode                              | -                                  |\n| isPreview             | 是否为预览态                                                                                                                                                                                                                                                    | Boolean                                | -                                  |\n| renderPreview         | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                                                                                                         | Function                               | -                                  |\n| onChange              | Select发生改变时触发的回调<br><br>**签名**:<br>Function(value: mixed, actionType: String, item: mixed) => void<br>**参数**:<br>_value_: {mixed} 选中的值<br>_actionType_: {String} 触发的方式, 'itemClick', 'enter', 'tag'<br>_item_: {mixed} 选中的值的对象数据 (useDetailValue=false有效) | Function                               | -                                  |\n| hasBorder             | 是否有边框                                                                                                                                                                                                                                                     | Boolean                                | -                                  |\n| hasArrow              | 是否有下拉箭头                                                                                                                                                                                                                                                   | Boolean                                | true                               |\n| showSearch            | 展开后是否能搜索（tag 模式下固定为true）                                                                                                                                                                                                                                  | Boolean                                | false                              |\n| onSearch              | 当搜索框值变化时回调<br><br>**签名**:<br>Function(value: String) => void<br>**参数**:<br>_value_: {String} 数据                                                                                                                                                           | Function                               | func.noop                          |\n| onSearchClear         | 当搜索框值被清空时候的回调<br><br>**签名**:<br>Function(actionType: String) => void<br>**参数**:<br>_actionType_: {String} 触发的方式, 'select'(选择清空), 'popupClose'(弹窗关闭清空)                                                                                                     | Function                               | func.noop                          |\n| hasSelectAll          | 多选模式下是否有全选功能                                                                                                                                                                                                                                              | Boolean/String                         | -                                  |\n| fillProps             | 填充到选择框里的值的 key\b\b                                                                                                                                                                                                                                          | String                                 | -                                  |\n| useDetailValue        | onChange 返回的 value 使用 dataSource 的对象                                                                                                                                                                                                                      | Boolean                                | -                                  |\n| cacheValue            | dataSource 变化的时是否保留已选的内容                                                                                                                                                                                                                                  | Boolean                                | true                               |\n| valueRender           | 渲染 Select 展现内容的方法<br><br>**签名**:<br>Function(item: Object) => ReactNode<br>**参数**:<br>_item_: {Object} 渲染节点的item<br>**返回值**:<br>{ReactNode} 展现内容<br>                                                                                                      | Function                               | item => item.label \\|\\| item.value |\n| searchValue           | 受控搜索值，一般不需要设置                                                                                                                                                                                                                                             | String                                 | -                                  |\n| tagInline             | 是否一行显示，仅在 mode 为 multiple 的时候生效                                                                                                                                                                                                                           | Boolean                                | false                              |\n| maxTagCount           | 最多显示多少个 tag                                                                                                                                                                                                                                               | Number                                 | -                                  |\n| maxTagPlaceholder     | 隐藏多余 tag 时显示的内容，在 maxTagCount 生效时起作用<br><br>**签名**:<br>Function(selectedValues: number, totalValues: number) => void<br>**参数**:<br>_selectedValues_: {number} 当前已选中的元素<br>_totalValues_: {number} 总待选元素                                                   | Function                               | -                                  |\n| hiddenSelected        | 选择后是否立即隐藏菜单 (mode=multiple/tag 模式生效)                                                                                                                                                                                                                      | Boolean                                | -                                  |\n| onRemove              | tag 删除回调<br><br>**签名**:<br>Function(item: object) => void<br>**参数**:<br>_item_: {object} 渲染节点的item                                                                                                                                                        | Function                               | func.noop                          |\n| onFocus               | 焦点事件<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                 | Function                               | func.noop                          |\n| onBlur                | 失去焦点事件<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                               | Function                               | func.noop                          |\n\n### Select.AutoComplete\n\n| 参数                    | 说明                                                                                                                                                                                                                                              | 类型                      | 默认值       |\n| --------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | --------- |\n| size                  | 选择器尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                             | Enum                    | 'medium'  |\n| value                 | 当前值，用于受控模式                                                                                                                                                                                                                                      | String/Number           | -         |\n| defaultValue          | 初始化的默认值                                                                                                                                                                                                                                         | String/Number           | -         |\n| placeholder           | 没有值的时候的占位符                                                                                                                                                                                                                                      | String                  | -         |\n| autoWidth             | 下拉菜单是否与选择器对齐                                                                                                                                                                                                                                    | Boolean                 | true      |\n| label                 | 自定义内联 label                                                                                                                                                                                                                                     | ReactNode               | -         |\n| hasClear              | 是否有清除按钮（单选模式有效）                                                                                                                                                                                                                                 | Boolean                 | -         |\n| state                 | 校验状态<br><br>**可选值**:<br>'error', 'loading'                                                                                                                                                                                                      | Enum                    | -         |\n| readOnly              | 是否只读，只读模式下可以展开弹层但不能选                                                                                                                                                                                                                            | Boolean                 | -         |\n| disabled              | 是否禁用选择器                                                                                                                                                                                                                                         | Boolean                 | -         |\n| visible               | 当前弹层是否显示                                                                                                                                                                                                                                        | Boolean                 | -         |\n| defaultVisible        | 弹层初始化是否显示                                                                                                                                                                                                                                       | Boolean                 | -         |\n| onVisibleChange       | 弹层显示或隐藏时触发的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否显示<br>_type_: {String} 触发弹层显示或隐藏的来源 fromContent 表示由Dropdown内容触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function                | func.noop |\n| popupContainer        | 弹层挂载的容器节点                                                                                                                                                                                                                                       | any                     | -         |\n| popupClassName        | 弹层的 className                                                                                                                                                                                                                                   | any                     | -         |\n| popupStyle            | 弹层的内联样式                                                                                                                                                                                                                                         | Object                  | -         |\n| popupProps            | 添加到弹层上的属性                                                                                                                                                                                                                                       | Object                  | {}        |\n| followTrigger         | 是否跟随滚动                                                                                                                                                                                                                                          | Boolean                 | -         |\n| popupContent          | 自定义弹层的内容                                                                                                                                                                                                                                        | ReactNode               | -         |\n| menuProps             | 添加到菜单上的属性                                                                                                                                                                                                                                       | Object                  | -         |\n| filterLocal           | 是否使用本地过滤，在数据源为远程的时候需要关闭此项                                                                                                                                                                                                                       | Boolean                 | true      |\n| filter                | 本地过滤方法，返回一个 Boolean 值确定是否保留<br><br>**签名**:<br>Function() => void                                                                                                                                                                                | Function                | filter    |\n| onToggleHighlightItem | 键盘上下键切换菜单高亮选项的回调<br><br>**签名**:<br>Function() => void                                                                                                                                                                                           | Function                | func.noop |\n| useVirtual            | 是否开启虚拟滚动模式                                                                                                                                                                                                                                      | Boolean                 | -         |\n| dataSource            | 传入的数据源，可以动态渲染子项                                                                                                                                                                                                                                 | Array&lt;Object/String> | -         |\n| itemRender            | 渲染 MenuItem 内容的方法<br><br>**签名**:<br>Function(item: Object) => ReactNode<br>**参数**:<br>_item_: {Object} 渲染节点的 item<br>**返回值**:<br>{ReactNode} item node<br>                                                                                      | Function                | -         |\n| isPreview             | 是否为预览态                                                                                                                                                                                                                                          | Boolean                 | -         |\n| renderPreview         | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                                                                                               | Function                | -         |\n| onChange              | Select发生改变时触发的回调<br><br>**签名**:<br>Function(value: mixed, actionType: String, item: mixed) => void<br>**参数**:<br>_value_: {mixed} 选中的值<br>_actionType_: {String} 触发的方式, 'itemClick', 'enter', 'change'<br>_item_: {mixed} 选中的值的对象数据             | Function                | -         |\n| fillProps             | 填充到选择框里的值的 key\b\b，默认是 value                                                                                                                                                                                                                      | String                  | 'value'   |\n\n### Select.OptionGroup\n\n| 参数    | 说明      | 类型        | 默认值 |\n| ----- | ------- | --------- | --- |\n| label | 设置分组的文案 | ReactNode | -   |\n\n### Select.Option\n\n| 参数       | 说明   | 类型      | 默认值 |\n| -------- | ---- | ------- | --- |\n| value    | 选项值  | any     | -   |\n| disabled | 是否禁用 | Boolean | -   |\n","slider":"### Slider\n\n| 参数                 | 说明                                                                                                 | 类型             | 默认值      |\n| ------------------ | -------------------------------------------------------------------------------------------------- | -------------- | -------- |\n| adaptiveHeight     | 是否使用自适应高度                                                                                          | Boolean        | false    |\n| animation          | 动效类型，默认是'slide'                                                                                    | String/Boolean | 'slide'  |\n| arrows             | 是否显示箭头                                                                                             | Boolean        | true     |\n| arrowSize          | 导航箭头大小 可选值: 'medium', 'large'<br><br>**可选值**:<br>'medium', 'large'                                 | Enum           | 'medium' |\n| arrowPosition      | 导航箭头位置 可选值: 'inner', 'outer'<br><br>**可选值**:<br>'inner', 'outer'                                   | Enum           | 'inner'  |\n| arrowDirection     | 导航箭头的方向 可选值: 'hoz', 'ver'<br><br>**可选值**:<br>'hoz', 'ver'                                          | Enum           | 'hoz'    |\n| autoplay           | 是否自动播放                                                                                             | Boolean        | false    |\n| autoplaySpeed      | 自动播放的速度                                                                                            | Number         | 3000     |\n| nextArrow          | 向后箭头                                                                                               | ReactElement   | null     |\n| prevArrow          | 向前箭头                                                                                               | ReactElement   | null     |\n| centerMode         | 是否启用居中模式                                                                                           | Boolean        | false    |\n| dots               | 是否显示导航锚点                                                                                           | Boolean        | true     |\n| dotsDirection      | 导航锚点位置<br><br>**可选值**:<br>'hoz', 'ver'                                                             | Enum           | 'hoz'    |\n| dotRender          | 自定义导航锚点<br><br>**签名**:<br>Function() => void                                                       | Function       | -        |\n| draggable          | 是否可拖拽                                                                                              | Boolean        | true     |\n| infinite           | 是否使用无穷循环模式                                                                                         | Boolean        | true     |\n| defaultActiveIndex | 初始被激活的轮播图                                                                                          | Number         | 0        |\n| lazyLoad           | 是否启用懒加载                                                                                            | Boolean        | false    |\n| slideDirection     | 轮播方向<br><br>**可选值**:<br>'hoz', 'ver'                                                               | Enum           | 'hoz'    |\n| slidesToShow       | 同时展示的图片数量                                                                                          | Number         | 1        |\n| slidesToScroll     | 同时滑动的图片数量                                                                                          | Number         | 1        |\n| speed              | 轮播速度                                                                                               | Number         | 600      |\n| activeIndex        | 跳转到指定的轮播图（受控）                                                                                      | Number         | -        |\n| triggerType        | 锚点导航触发方式<br><br>**可选值**:<br>'click', 'hover'                                                       | Enum           | 'click'  |\n| onChange           | 轮播切换的回调函数<br><br>**签名**:<br>Function(index: Number) => void<br>**参数**:<br>_index_: {Number} 幻灯片的索引 | Function       | () => {} |\n| centerPadding      | Side padding when in center mode (px or %); 展示部分为center，pading会产生前后预览                              | String         | '50px'   |\n| cssEase            | CSS3 Animation Easing,默认‘ease’                                                                     | String         | 'ease'   |\n| focusOnSelect      | 多图轮播时，点击选中后自动居中                                                                                    | Boolean        | false    |\n","split-button":"### SplitButton\n\n| 参数                  | 说明                                                                                                                                                                                                                                        | 类型        | 默认值       |\n| ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | --------- |\n| size                | 按钮组的尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                      | Enum      | 'medium'  |\n| type                | 按钮的类型<br><br>**可选值**:<br>'normal', 'primary', 'secondary'                                                                                                                                                                                 | Enum      | 'normal'  |\n| label               | 主按钮的文案                                                                                                                                                                                                                                    | ReactNode | -         |\n| component           | 设置标签类型<br><br>**可选值**:<br>'button', 'a'                                                                                                                                                                                                   | Enum      | -         |\n| ghost               | 是否为幽灵按钮<br><br>**可选值**:<br>'light', 'dark', false, true                                                                                                                                                                                   | Enum      | -         |\n| defaultSelectedKeys | 默认激活的菜单项（用法同 Menu 非受控）                                                                                                                                                                                                                    | Array     | \\[]       |\n| selectedKeys        | 激活的菜单项（用法同 Menu 受控）                                                                                                                                                                                                                       | Array     | -         |\n| selectMode          | 菜单的选择模式<br><br>**可选值**:<br>'single', 'multiple'                                                                                                                                                                                           | Enum      | -         |\n| onSelect            | 选择菜单项时的回调，参考 Menu<br><br>**签名**:<br>Function() => void                                                                                                                                                                                    | Function  | func.noop |\n| onItemClick         | 点击菜单项时的回调，参考 Menu<br><br>**签名**:<br>Function() => void                                                                                                                                                                                    | Function  | func.noop |\n| triggerProps        | 触发按钮的属性（支持 Button 的所有属性透传）                                                                                                                                                                                                                | Object    | -         |\n| autoWidth           | 弹层菜单的宽度是否与按钮组一致                                                                                                                                                                                                                           | Boolean   | true      |\n| visible             | 弹层是否显示                                                                                                                                                                                                                                    | Boolean   | -         |\n| defaultVisible      | 弹层默认是否显示                                                                                                                                                                                                                                  | Boolean   | -         |\n| onVisibleChange     | 弹层显示状态变化时的回调函数<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层显示状态<br>_type_: {String} 触发弹层显示或隐藏的来源 menuSelect 表示由menu触发； fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发 | Function  | func.noop |\n| popupTriggerType    | 弹层的触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                               | Enum      | 'click'   |\n| popupAlign          | 弹层对齐方式, 详情见Overlay align                                                                                                                                                                                                                  | String    | -         |\n| popupStyle          | 弹层自定义样式                                                                                                                                                                                                                                   | Object    | -         |\n| popupClassName      | 弹层自定义样式类                                                                                                                                                                                                                                  | String    | -         |\n| popupProps          | 透传给弹层的属性                                                                                                                                                                                                                                  | Object    | -         |\n| followTrigger       | 是否跟随滚动                                                                                                                                                                                                                                    | Boolean   | -         |\n| menuProps           | 透传给 Menu 的属性                                                                                                                                                                                                                              | Object    | {}        |\n| leftButtonProps     | 透传给 左侧按钮 的属性                                                                                                                                                                                                                              | Object    | {}        |\n","step":"### Step\n\n| 参数             | 说明                                                                                                                                                                                  | 类型       | 默认值      |\n| -------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | -------- |\n| current        | 当前步骤                                                                                                                                                                                | Number   | 0        |\n| shape          | 类型<br><br>**可选值**:<br>'circle', 'arrow', 'dot'                                                                                                                                      | Enum     | 'circle' |\n| direction      | 展示方向<br><br>**可选值**:<br>'hoz', 'ver'                                                                                                                                                | Enum     | 'hoz'    |\n| labelPlacement | 横向布局时( direction 为 hoz )的内容排列<br><br>**可选值**:<br>'hoz', 'ver'                                                                                                                       | Enum     | 'ver'    |\n| readOnly       | 是否只读模式                                                                                                                                                                              | Boolean  | -        |\n| animation      | 是否开启动效                                                                                                                                                                              | Boolean  | true     |\n| itemRender     | StepItem 的自定义渲染<br><br>**签名**:<br>Function(index: Number, status: String) => Node<br>**参数**:<br>_index_: {Number} 节点索引<br>_status_: {String} 节点状态<br>**返回值**:<br>{Node} 节点的渲染结果<br> | Function | null     |\n\n### Step.Item\n\n| 参数         | 说明                                                                                                                                                                                                       | 类型        | 默认值      |\n| ---------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | -------- |\n| status     | 步骤的状态，如不传，会根据外层的 Step 的 current 属性生成，可选值为 `wait`, `process`, `finish`<br><br>**可选值**:<br>'wait', 'process', 'finish'                                                                                     | Enum      | -        |\n| title      | 标题                                                                                                                                                                                                       | ReactNode | -        |\n| icon       | 图标                                                                                                                                                                                                       | String    | -        |\n| content    | 内容填充, shape为 arrow 时无效                                                                                                                                                                                   | ReactNode | -        |\n| itemRender | StepItem 的自定义渲染, 会覆盖父节点设置的itemRender<br><br>**签名**:<br>Function(index: Number, status: String) => Node<br>**参数**:<br>_index_: {Number} 节点索引<br>_status_: {String} 节点状态<br>**返回值**:<br>{Node} 节点的渲染结果<br> | Function  | -        |\n| percent    | 百分比                                                                                                                                                                                                      | Number    | -        |\n| disabled   | 是否禁用                                                                                                                                                                                                     | Boolean   | -        |\n| onClick    | 点击步骤时的回调<br><br>**签名**:<br>Function(index: Number) => void<br>**参数**:<br>_index_: {Number} 节点索引                                                                                                          | Function  | () => {} |\n","switch":"### Switch\n\n| 参数                | 说明                                                                                                                                             | 类型       | 默认值      |\n| ----------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- | -------- | -------- |\n| checkedChildren   | 打开时的内容                                                                                                                                         | any      | -        |\n| size              | switch的尺寸<br><br>**可选值**:<br>'medium'(正常大小)<br>'small'(缩小版大小)                                                                                  | Enum     | 'medium' |\n| unCheckedChildren | 关闭时的内容                                                                                                                                         | any      | -        |\n| onChange          | 开关状态改变是触发此事件<br><br>**签名**:<br>Function(checked: Boolean, e: Event) => void<br>**参数**:<br>_checked_: {Boolean} 是否为打开状态<br>_e_: {Event} DOM事件对象 | Function | () => {} |\n| checked           | 开关当前的值(针对受控组件)                                                                                                                                 | Boolean  | -        |\n| defaultChecked    | 开关默认值 (针对非受控组件)                                                                                                                                | Boolean  | false    |\n| disabled          | 表示开关被禁用                                                                                                                                        | Boolean  | false    |\n| onClick           | 鼠标点击事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                         | Function | -        |\n| onKeyDown         | 键盘按键事件<br><br>**签名**:<br>Function(e: Event) => void<br>**参数**:<br>_e_: {Event} DOM事件对象                                                         | Function | -        |\n| isPreview         | 是否为预览态                                                                                                                                         | Boolean  | false    |\n| renderPreview     | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                              | Function | -        |\n","tab":"### Tab\n\n| 参数                  | 说明                                                                                                                                                                                                                  | 类型            | 默认值      |\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- | -------- |\n| activeKey           | 被激活的选项卡的 key, 赋值则tab为受控组件, 用户无法切换                                                                                                                                                                                   | Number/String | -        |\n| size                | 尺寸<br><br>**可选值**:<br>'small', 'medium'                                                                                                                                                                             | Enum          | 'medium' |\n| shape               | 外观形态<br><br>**可选值**:<br>'pure', 'wrapped', 'text', 'capsule'                                                                                                                                                        | Enum          | 'pure'   |\n| defaultActiveKey    | 初始化时被激活的选项卡的 key                                                                                                                                                                                                    | Number/String | -        |\n| animation           | 是否开启动效                                                                                                                                                                                                              | Boolean       | true     |\n| excessMode          | 选项卡过多时的滑动模式<br><br>**可选值**:<br>'slide', 'dropdown'                                                                                                                                                                  | Enum          | 'slide'  |\n| tabPosition         | 导航选项卡的位置，只适用于包裹型（wrapped）选项卡<br><br>**可选值**:<br>'top', 'bottom', 'left', 'right'                                                                                                                                    | Enum          | 'top'    |\n| triggerType         | 激活选项卡的触发方式<br><br>**可选值**:<br>'hover', 'click'                                                                                                                                                                      | Enum          | 'click'  |\n| lazyLoad            | 是否延迟加载 TabPane 的内容, 默认开启, 即不提前渲染                                                                                                                                                                                    | Boolean       | true     |\n| unmountInactiveTabs | 是否自动卸载未处于激活状态的选项卡                                                                                                                                                                                                   | Boolean       | false    |\n| navStyle            | 导航条的自定义样式                                                                                                                                                                                                           | Object        | -        |\n| navClassName        | 导航条的自定义样式类                                                                                                                                                                                                          | String        | -        |\n| contentStyle        | 内容区容器的自定义样式                                                                                                                                                                                                         | Object        | -        |\n| contentClassName    | 内容区容器的自定义样式类                                                                                                                                                                                                        | String        | -        |\n| extra               | 导航栏附加内容                                                                                                                                                                                                             | ReactNode     | -        |\n| onClick             | 点击单个选项卡时触发的回调<br><br>**签名**:<br>Function() => void                                                                                                                                                                  | Function      | () => {} |\n| onChange            | 选项卡发生切换时的事件回调<br><br>**签名**:<br>Function(key: String/Number) => void<br>**参数**:<br>_key_: {String/Number} 改变后的 key                                                                                                  | Function      | () => {} |\n| onClose             | 选项卡被关闭时的事件回调<br><br>**签名**:<br>Function(key: String/Number) => void<br>**参数**:<br>_key_: {String/Number} 关闭的选项卡的 key                                                                                                | Function      | () => {} |\n| tabRender           | 自定义选项卡模板渲染函数<br><br>**签名**:<br>Function(key: String, props: Object) => ReactNode<br>**参数**:<br>_key_: {String} 当前 Tab.Item 的 key 值<br>_props_: {Object} 传给 Tab.Item 的所有属性键值对<br>**返回值**:<br>{ReactNode} 返回自定义组件<br> | Function      | -        |\n| popupProps          | 弹层属性透传, 只有当 excessMode 为 dropdown 时生效                                                                                                                                                                               | Object        | -        |\n\n### Tab.Item\n\n| 参数        | 说明         | 类型        | 默认值   |\n| --------- | ---------- | --------- | ----- |\n| title     | 选项卡标题      | ReactNode | -     |\n| closeable | 单个选项卡是否可关闭 | Boolean   | false |\n| disabled  | 选项卡是否被禁用   | Boolean   | -     |\n","table":"### Table\n\n| 参数                    | 说明| 类型            | 默认值      |\n| --------------------- || ------------- | -------- |\n| size                  | 尺寸 small为紧凑模式<br><br>**可选值**:<br>'small', 'medium| Enum          | 'medium' |\n| dataSource            | 表格展示的数据源| Array         | \\[]      |\n| onRowClick            | 点击表格每一行触发的事件<br><br>**签名**:<br>Function(record: Object, index: Number, e: Event) => void<br>**参数**:<br>_record_: {Object} 该行所对应的数据<br>_index_: {Number} 该行所对应的序列<br>_e_: {Event} DOM事件对象| Function      | () => {} |\n| onRowMouseEnter       | 悬浮在表格每一行的时候触发的事件<br><br>**签名**:<br>Function(record: Object, index: Number, e: Event) => void<br>**参数**:<br>_record_: {Object} 该行所对应的数据<br>_index_: {Number} 该行所对应的序列<br>_e_: {Event} DOM事件对象                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 | Function      | () => {} |\n| onRowMouseLeave       | 离开表格每一行的时候触发的事件<br><br>**签名**:<br>Function(record: Object, index: Number, e: Event) => void<br>**参数**:<br>_record_: {Object} 该行所对应的数据<br>_index_: {Number} 该行所对应的序列<br>_e_: {Event} DOM事件对象| Function      | () => {} |\n| onSort                | 点击列排序触发的事件<br><br>**签名**:<br>Function(dataIndex: String, order: String) => void<br>**参数**:<br>_dataIndex_: {String} 指定的排序的字段<br>_order_: {String} 排序对应的顺序, 有`desc`和`asc`两种| Function      | () => {} |\n| onFilter              | 点击过滤确认按钮触发的事件<br><br>**签名**:<br>Function(filterParams: Object) => void<br>**参数**:<br>_filterParams_: {Object} 过滤的字段信息| Function      | () => {} |\n| onResizeChange        | 重设列尺寸的时候触发的事件<br><br>**签名**:<br>Function(dataIndex: String, value: Number) => void<br>**参数**:<br>_dataIndex_: {String} 指定重设的字段<br>_value_: {Number} 列宽变动的数值| Function      | () => {} |\n| rowProps              | 设置每一行的属性，如果返回值和其他针对行操作的属性冲突则无效。<br><br>**签名**:<br>Function(record: Object, index: Number) => Object<br>**参数**:<br>_record_: {Object} 该行所对应的数据<br>_index_: {Number} 该行所对应的序列<br>**返回值**:<br>{Object} 需要设置的行属性<br| Function      | () => {} |\n| cellProps             | 设置单元格的属性，通过该属性可以进行合并单元格<br><br>**签名**:<br>Function(rowIndex: Number, colIndex: Number, dataIndex: String, record: Object) => Object<br>**参数**:<br>_rowIndex_: {Number} 该行所对应的序列<br>_colIndex_: {Number} 该列所对应的序列<br>_dataIndex_: {String} 该列所对应的字段名称<br>_record_: {Object} 该行对应的记录<br>**返回值**:<br>{Object} 返回td元素的所支持的属性对象<br| Function      | () => {} |\n| hasBorder             | 表格是否具有边框| Boolean       | true     |\n| hasHeader             | 表格是否具有头部| Boolean       | true     |\n| isZebra               | 表格是否是斑马线| Boolean       | false    |\n| loading               | 表格是否在加载中| Boolean       | false    |\n| loadingComponent      | 自定义 Loading 组件<br>请务必传递 props, 使用方式： loadingComponent={props => &lt;Loading {...props}/>}<br><br>**签名**:<br>Function(props: Object) => void<br>**参数**:<br>_props_: {Object} 当前点击行的key| Function      | -        |\n| filterParams          | 当前过滤的的keys,使用此属性可以控制表格的头部的过滤选项中哪个菜单被选中,格式为 {dataIndex: {selectedKeys:\\[]}}<br>示例:<br>假设要控制dataIndex为id的列的过滤菜单中key为one的菜单项选中<br>`<Table filterParams={{id: {selectedKeys: ['one']}}}/>`| Object        | -        |\n| sort                  | 当前排序的字段,使用此属性可以控制表格的字段的排序,格式为{dataIndex: 'asc'}| Object        | -        |\n| sortIcons             | 自定义排序按钮，例如上下排布的: `{desc: <Icon style={{top: '6px', left: '4px'}} type={'arrow-down'} size=\"small\" />, asc: <Icon style={{top: '-6px', left: '4px'}} type={'arrow-up'} size=\"small\" />}`| Object        | -        |\n| emptyContent          | 设置数据为空的时候的表格内容展现| ReactNode     | -        |\n| primaryKey            | dataSource当中数据的主键，如果给定的数据源中的属性不包含该主键，会造成选择状态全部选中| String        | 'id'     |\n| expandedRowRender     | 额外渲染行的渲染函数<br><br>**签名**:<br>Function(record: Object, index: Number) => Element<br>**参数**:<br>_record_: {Object} 该行所对应的数据<br>_index_: {Number} 该行所对应的序列<br>**返回值**:<br>{Element} 渲染内容<br| Function      | -        |\n| expandedRowIndent     | 额外渲染行的缩进| Array         | -        |\n| openRowKeys           | 默认情况下展开的渲染行或者Tree, 传入此属性为受控状态| Array         | -        |\n| hasExpandedRowCtrl    | 是否显示点击展开额外渲染行的+号按钮| Boolean       | -        |\n| getExpandedColProps   | 设置额外渲染行的属性<br><br>**签名**:<br>Function() => void| Function      | -        |\n| onRowOpen             | 在额外渲染行或者Tree展开或者收起的时候触发的事件<br><br>**签名**:<br>Function(openRowKeys: Array, currentRowKey: String, expanded: Boolean, currentRecord: Object) => void<br>**参数**:<br>_openRowKeys_: {Array} 展开的渲染行的key<br>_currentRowKey_: {String} 当前点击的渲染行的key<br>_expanded_: {Boolean} 当前点击是展开还是收起<br>_currentRecord_: {Object} 当前点击额外渲染行的记录| Function      | -        |\n| fixedHeader           | 表头是否固定，该属性配合maxBodyHeight使用，当内容区域的高度超过maxBodyHeight的时候，在内容区域会出现滚动条| Boolean       | -        |\n| maxBodyHeight         | 最大内容区域的高度,在`fixedHeader`为`true`的时候,超过这个高度会出现滚动条                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | Number/String | -        |\n| rowSelection          | 是否启用选择模式<br><br>**属性**:<br>_getProps_: {Function} `Function(record, index)=>Object` 获取selection的默认属性<br>_onChange_: {Function} `Function(selectedRowKeys:Array, records:Array)` 选择改变的时候触发的事件，**注意:** 其中records只会包含当前dataSource的数据，很可能会小于selectedRowKeys的长度。<br>_onSelect_: {Function} `Function(selected:Boolean, record:Object, records:Array)` 用户手动选择/取消选择某行的回调<br>_onSelectAll_: {Function} `Function(selected:Boolean, records:Array)` 用户手动选择/取消选择所有行的回调<br>_selectedRowKeys_: {Array} 设置了此属性,将rowSelection变为受控状态,接收值为该行数据的primaryKey的值<br>_mode_: {String} 选择selection的模式, 可选值为`single`, `multiple`，默认为`multiple`<br>_columnProps_: {Function} `Function()=>Object` 选择列 的props，例如锁列、对齐等，可使用`Table.Column` 的所有参数<br>_titleProps_: {Function} `Function()=>Object` 选择列 表头的props，仅在 `multiple` 模式下生效<br>_titleAddons_: {Function} `Function()=>Node` 选择列 表头添加的元素，在`single` `multiple` 下都生效 | Object        | -        |\n| stickyHeader          | 表头是否是sticky| Boolean       | -        |\n| offsetTop             | 距离窗口顶部达到指定偏移量后触发| Number        | -        |\n| affixProps            | affix组件的的属性| Object        | -        |\n| indent                | 在tree模式下的缩进尺寸， 仅在isTree为true时候有效| Number        | -        |\n| isTree                | 开启Table的tree模式, 接收的数据格式中包含children则渲染成tree table                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             | Boolean       | -        |\n| useVirtual            | 是否开启虚拟滚动| Boolean       | -        |\n| onBodyScroll          | 在内容区域滚动的时候触发的函数<br><br>**签名**:<br>Function() => void| Function      | -        |\n| expandedIndexSimulate | 开启时，getExpandedColProps() / rowProps() / expandedRowRender() 的第二个参数 index (该行所对应的序列) 将按照01,2,3,4...的顺序返回，否则返回真实index| Boolean       | false    |\n| crossline             | 在 hover 时出现十字参考轴，适用于表头比较复杂，需要做表头分类的场景。| Boolean       | false    |\n\n### Table.Column\n\n| 参数              | 说明                                                                                                                                                                                                          | 类型                              | 默认值                               |\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------- | --------------------------------- |\n| dataIndex       | 指定列对应的字段，支持`a.b`形式的快速取值                                                                                                                                                                                     | String                          | -                                 |\n| cell            | 行渲染的逻辑<br>value, rowIndex, record, context四个属性只可读不可被更改<br>Function(value, index, record) => Element                                                                                                         | ReactElement/ReactNode/Function | value => value                    |\n| title           | 表头显示的内容                                                                                                                                                                                                     | ReactElement/ReactNode/Function | -                                 |\n| htmlTitle       | 写到 header 单元格上的title属性                                                                                                                                                                                      | String                          | -                                 |\n| sortable        | 是否支持排序                                                                                                                                                                                                      | Boolean                         | -                                 |\n| width           | 列宽，注意在锁列的情况下一定需要配置宽度                                                                                                                                                                                        | Number/String                   | -                                 |\n| align           | 单元格的对齐方式<br><br>**可选值**:<br>'left', 'center', 'right'                                                                                                                                                       | Enum                            | -                                 |\n| alignHeader     | 单元格标题的对齐方式, 不配置默认读取align值<br><br>**可选值**:<br>'left', 'center', 'right'                                                                                                                                      | Enum                            | -                                 |\n| filters         | 生成标题过滤的菜单, 格式为`[{label:'xxx', value:'xxx'}]`                                                                                                                                                                | Array&lt;Object>                | -                                 |\n| filterMode      | 过滤的模式是单选还是多选<br><br>**可选值**:<br>'single', 'multiple'                                                                                                                                                        | Enum                            | 'multiple'                        |\n| filterMenuProps | filter 模式下传递给 Menu 菜单的属性， 默认继承 `Menu` 组件的API<br><br>**属性**:<br>_subMenuSelectable_: {Boolean} 默认为`false` subMenu是否可选择<br>_isSelectIconRight_: {Boolean} 默认为`false` 是否将选中图标居右。注意：SubMenu 上的选中图标一直居左，不受此API控制 | Object                          | {     subMenuSelectable: false, } |\n| lock            | 是否支持锁列,可选值为`left`,`right`, `true`                                                                                                                                                                           | Boolean/String                  | -                                 |\n| resizable       | 是否支持列宽调整, 当该值设为true，table的布局方式会修改为fixed.                                                                                                                                                                    | Boolean                         | false                             |\n| colSpan         | header cell 横跨的格数，设置为0表示不出现此 th                                                                                                                                                                             | Number                          | -                                 |\n\n### Table.ColumnGroup\n\n| 参数    | 说明      | 类型                              | 默认值            |\n| ----- | ------- | ------------------------------- | -------------- |\n| title | 表头显示的内容 | ReactElement/ReactNode/Function | 'column-group' |\n\n### Table.GroupHeader\n\n| 参数                              | 说明                                    | 类型                              | 默认值      |\n| ------------------------------- | ------------------------------------- | ------------------------------- | -------- |\n| cell                            | 行渲染的逻辑                                | ReactElement/ReactNode/Function | () => '' |\n| hasChildrenSelection            | 是否在Children上面渲染selection              | Boolean                         | false    |\n| hasSelection                    | 是否在GroupHeader上面渲染selection           | Boolean                         | true     |\n| useFirstLevelDataWhenNoChildren | 当 dataSouce 里没有 children 时，是否使用内容作为数据 | Boolean                         | false    |\n\n### Table.GroupFooter\n\n| 参数   | 说明     | 类型                              | 默认值      |\n| ---- | ------ | ------------------------------- | -------- |\n| cell | 行渲染的逻辑 | ReactElement/ReactNode/Function | () => '' |\n","tag":"### Tag\n\n| 参数          | 说明                                                                                                                       | 类型       | 默认值       |\n| ----------- | ------------------------------------------------------------------------------------------------------------------------ | -------- | --------- |\n| size        | 标签的尺寸（large 尺寸为兼容表单场景 large = medium）<br><br>**可选值**:<br>'small', 'medium', 'large'                                      | Enum     | 'medium'  |\n| type        | 标签的类型<br><br>**可选值**:<br>'normal', 'primary'                                                                             | Enum     | 'normal'  |\n| color       | 标签颜色, 目前支持：blue、 green、 orange、red、 turquoise、 yellow 和 hex 颜色值 （`color keywords`作为 Tag 组件的保留字，请勿直接使用 ）, `1.19.0` 以上版本生效 | String   | -         |\n| animation   | 是否开启动效                                                                                                                   | Boolean  | false     |\n| afterAppear | 标签出现动画结束后执行的回调<br><br>**签名**:<br>Function() => void                                                                      | Function | func.noop |\n| onClick     | 点击回调<br><br>**签名**:<br>Function() => void                                                                                | Function | func.noop |\n\n### Tag.Closeable\n\n| 参数         | 说明                                                                                                                                                                           | 类型       | 默认值 |\n| ---------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | --- |\n| closeArea  | closeable 标签的 onClose 响应区域, tag: 标签体, tail(默认): 关闭按钮<br><br>**可选值**:<br>'tag', 'tail'                                                                                        | Enum     | -   |\n| size       | 标签的尺寸（large 尺寸为兼容表单场景 large = medium）<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                          | Enum     | -   |\n| onClose    | 点击关闭按钮时的回调<br><br>**签名**:<br>Function(from: String) => Boolean<br>**参数**:<br>_from_: {String} 事件来源, tag: 标签体点击, tail: 关闭按钮点击<br>**返回值**:<br>{Boolean} true则关闭, false阻止关闭<br> | Function | -   |\n| afterClose | 标签关闭后执行的回调<br><br>**签名**:<br>Function() => void                                                                                                                              | Function | -   |\n| onClick    | 点击回调<br><br>**签名**:<br>Function() => void                                                                                                                                    | Function | -   |\n\n### Tag.Selectable\n\n| 参数             | 说明                                                                                                                                           | 类型       | 默认值       |\n| -------------- | -------------------------------------------------------------------------------------------------------------------------------------------- | -------- | --------- |\n| checked        | 标签是否被选中，受控用法<br>tag checked or not, a controlled way                                                                                         | Boolean  | -         |\n| defaultChecked | 标签是否默认被选中，非受控用法<br>tag checked or not by default, a uncontrolled way                                                                         | Boolean  | -         |\n| onChange       | 选中状态变化时触发的事件<br><br>**签名**:<br>Function(checked: Boolean, e: Event) => void<br>**参数**:<br>_checked_: {Boolean} 是否选中<br>_e_: {Event} Dom 事件对象 | Function | func.noop |\n| disabled       | 标签是否被禁用                                                                                                                                      | Boolean  | -         |\n","time-picker":"### TimePicker\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                                              | 类型        | 默认值        |\n| ------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------- | ---------- |\n| label               | 按钮的文案                                                                                                                                                                                                                                                                                           | ReactNode | -          |\n| size                | 时间选择框的尺寸<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                                                          | Enum      | 'medium'   |\n| state               | 输入框状态<br><br>**可选值**:<br>'error', 'success'                                                                                                                                                                                                                                                     | Enum      | -          |\n| placeholder         | 输入框提示                                                                                                                                                                                                                                                                                           | String    | -          |\n| value               | 时间值（moment 对象或时间字符串，受控状态使用）                                                                                                                                                                                                                                                                     | custom    | -          |\n| defaultValue        | 时间初值（moment 对象或时间字符串，非受控状态使用）                                                                                                                                                                                                                                                                   | custom    | -          |\n| hasClear            | 是否允许清空时间                                                                                                                                                                                                                                                                                        | Boolean   | true       |\n| format              | 时间的格式<br><https://momentjs.com/docs/#/parsing/string-format/>                                                                                                                                                                                                                                   | String    | 'HH:mm:ss' |\n| hourStep            | 小时选项步长                                                                                                                                                                                                                                                                                          | Number    | -          |\n| minuteStep          | 分钟选项步长                                                                                                                                                                                                                                                                                          | Number    | -          |\n| secondStep          | 秒钟选项步长                                                                                                                                                                                                                                                                                          | Number    | -          |\n| disabledHours       | 禁用小时函数<br><br>**签名**:<br>Function(index: Number) => Boolean<br>**参数**:<br>_index_: {Number} 时 0 - 23<br>**返回值**:<br>{Boolean} 是否禁用<br>                                                                                                                                                          | Function  | -          |\n| disabledMinutes     | 禁用分钟函数<br><br>**签名**:<br>Function(index: Number) => Boolean<br>**参数**:<br>_index_: {Number} 分 0 - 59<br>**返回值**:<br>{Boolean} 是否禁用<br>                                                                                                                                                          | Function  | -          |\n| disabledSeconds     | 禁用秒钟函数<br><br>**签名**:<br>Function(index: Number) => Boolean<br>**参数**:<br>_index_: {Number} 秒 0 - 59<br>**返回值**:<br>{Boolean} 是否禁用<br>                                                                                                                                                          | Function  | -          |\n| renderTimeMenuItems | 渲染的可选择时间列表<br>[{<br> label: '01',<br> value: 1<br>}]<br><br>**签名**:<br>Function(list: Array, mode: String, value: moment) => Array<br>**参数**:<br>_list_: {Array} 默认渲染的列表<br>_mode_: {String} 渲染的菜单 hour, minute, second<br>_value_: {moment} 当前时间，可能为 null<br>**返回值**:<br>{Array} 返回需要渲染的数据<br> | Function  | -          |\n| visible             | 弹层是否显示（受控）                                                                                                                                                                                                                                                                                      | Boolean   | -          |\n| defaultVisible      | 弹层默认是否显示（非受控）                                                                                                                                                                                                                                                                                   | Boolean   | -          |\n| popupContainer      | 弹层容器                                                                                                                                                                                                                                                                                            | any       | -          |\n| popupAlign          | 弹层对齐方式, 详情见Overlay 文档                                                                                                                                                                                                                                                                           | String    | 'tl tl'    |\n| popupTriggerType    | 弹层触发方式<br><br>**可选值**:<br>'click', 'hover'                                                                                                                                                                                                                                                      | Enum      | 'click'    |\n| onVisibleChange     | 弹层展示状态变化时的回调<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 弹层是否隐藏和显示<br>_type_: {String} 触发弹层显示和隐藏的来源 fromTrigger 表示由trigger的点击触发； docClick 表示由document的点击触发                                                                            | Function  | func.noop  |\n| popupStyle          | 弹层自定义样式                                                                                                                                                                                                                                                                                         | Object    | -          |\n| popupClassName      | 弹层自定义样式类                                                                                                                                                                                                                                                                                        | String    | -          |\n| popupProps          | 弹层属性                                                                                                                                                                                                                                                                                            | Object    | -          |\n| followTrigger       | 是否跟随滚动                                                                                                                                                                                                                                                                                          | Boolean   | -          |\n| disabled            | 是否禁用                                                                                                                                                                                                                                                                                            | Boolean   | false      |\n| isPreview           | 是否为预览态                                                                                                                                                                                                                                                                                          | Boolean   | -          |\n| renderPreview       | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: MomentObject) => void<br>**参数**:<br>_value_: {MomentObject} 时间                                                                                                                                                                                    | Function  | -          |\n| onChange            | 时间值改变时的回调<br><br>**签名**:<br>Function(value: Object/String) => void<br>**参数**:<br>_value_: {Object/String} 时间对象或时间字符串                                                                                                                                                                            | Function  | func.noop  |\n","timeline":"### Timeline\n\n| 参数   | 说明                                                                  | 类型    | 默认值 |\n| ---- | ------------------------------------------------------------------- | ----- | --- |\n| fold | 自定义折叠选项 示例`[{foldArea: [startIndex, endIndex], foldShow: boolean}]` | Array | \\[] |\n\n### Timeline.Item\n\n| 参数        | 说明                                                            | 类型        | 默认值    |\n| --------- | ------------------------------------------------------------- | --------- | ------ |\n| state     | 节点状态<br><br>**可选值**:<br>'done', 'process', 'error', 'success' | Enum      | 'done' |\n| icon      | 图标                                                            | String    | -      |\n| dot       | 自定义时间轴节点                                                      | ReactNode | -      |\n| time      | 格式化后的时间                                                       | ReactNode | -      |\n| title     | 标题                                                            | ReactNode | -      |\n| timeLeft  | 左侧时间                                                          | ReactNode | -      |\n| content   | 右侧内容                                                          | ReactNode | -      |\n| animation | 动画                                                            | Boolean   | true   |\n","transfer":"### Transfer\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                                                                                                                                           | 类型                  | 默认值                                                                   |\n| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- | --------------------------------------------------------------------- |\n| mode                | 移动选项模式<br><br>**可选值**:<br>'normal', 'simple'                                                                                                                                                                                                                                                                                                                                                 | Enum                | 'normal'                                                              |\n| dataSource          | 数据源                                                                                                                                                                                                                                                                                                                                                                                          | Array&lt;Object>    | \\[]                                                                   |\n| value               | （用于受控）当前值                                                                                                                                                                                                                                                                                                                                                                                    | Array&lt;String>    | -                                                                     |\n| defaultValue        | （用于非受控）初始值                                                                                                                                                                                                                                                                                                                                                                                   | Array&lt;String>    | \\[]                                                                   |\n| onChange            | 值发生改变的时候触发的回调函数<br><br>**签名**:<br>Function(value: Array, data: Array, extra: Object) => void<br>**参数**:<br>_value_: {Array} 右面板值<br>_data_: {Array} 右面板数据<br>_extra_: {Object} 额外参数<br>_extra.leftValue_: {Array} 左面板值<br>_extra.leftData_: {Array} 左面板数据<br>_extra.movedValue_: {Array} 发生移动的值<br>_extra.movedData_: {Object} 发生移动的数据<br>_extra.direction_: {String} 移动的方向，值为'left'或'right' | Function            | -                                                                     |\n| disabled            | 是否禁用                                                                                                                                                                                                                                                                                                                                                                                         | Boolean             | false                                                                 |\n| leftDisabled        | 是否禁用左侧面板                                                                                                                                                                                                                                                                                                                                                                                     | Boolean             | false                                                                 |\n| rightDisabled       | 是否禁用右侧面板                                                                                                                                                                                                                                                                                                                                                                                     | Boolean             | false                                                                 |\n| itemRender          | 列表项渲染函数<br><br>**签名**:<br>Function(data: Object) => ReactNode<br>**参数**:<br>_data_: {Object} 数据<br>**返回值**:<br>{ReactNode} 列表项内容<br>                                                                                                                                                                                                                                                         | Function            | data => data.label                                                    |\n| showSearch          | 是否显示搜索框                                                                                                                                                                                                                                                                                                                                                                                      | Boolean             | false                                                                 |\n| filter              | 自定义搜索函数<br><br>**签名**:<br>Function(searchedValue: String, data: Object) => Boolean<br>**参数**:<br>_searchedValue_: {String} 搜索的内容<br>_data_: {Object} 数据<br>**返回值**:<br>{Boolean} 是否匹配到<br>                                                                                                                                                                                                   | Function            | 根据 label 属性匹配                                                         |\n| onSearch            | 搜索框输入时触发的回调函数<br><br>**签名**:<br>Function(searchedValue: String, position: String) => void<br>**参数**:<br>_searchedValue_: {String} 搜索的内容<br>_position_: {String} 搜索面板的位置                                                                                                                                                                                                                      | Function            | () => {}                                                              |\n| searchPlaceholder   | 搜索框占位符                                                                                                                                                                                                                                                                                                                                                                                       | String              | -                                                                     |\n| notFoundContent     | 列表为空显示内容                                                                                                                                                                                                                                                                                                                                                                                     | ReactNode           | 'Not Found'                                                           |\n| titles              | 左右面板标题                                                                                                                                                                                                                                                                                                                                                                                       | Array&lt;ReactNode> | \\[]                                                                   |\n| operations          | 向右向左移动按钮显示内容                                                                                                                                                                                                                                                                                                                                                                                 | Array&lt;ReactNode> | [&lt;Icon type=\"arrow-right\" /&gt;, &lt;Icon type=\"arrow-left\" /&gt;] |\n| defaultLeftChecked  | 左面板默认选中值                                                                                                                                                                                                                                                                                                                                                                                     | Array&lt;String>    | \\[]                                                                   |\n| defaultRightChecked | 右面板默认选中值                                                                                                                                                                                                                                                                                                                                                                                     | Array&lt;String>    | \\[]                                                                   |\n| listClassName       | 左右面板列表自定义样式类名                                                                                                                                                                                                                                                                                                                                                                                | String              | -                                                                     |\n| listStyle           | 左右面板列表自定义样式对象                                                                                                                                                                                                                                                                                                                                                                                | Object              | -                                                                     |\n| sortable            | 是否允许拖拽排序                                                                                                                                                                                                                                                                                                                                                                                     | Boolean             | false                                                                 |\n| onSort              | 拖拽排序时触发的回调函数<br><br>**签名**:<br>Function(value: Array, position: String) => void<br>**参数**:<br>_value_: {Array} 排序后的值<br>_position_: {String} 拖拽的面板位置，值为：left 或 right                                                                                                                                                                                                                         | Function            | () => {}                                                              |\n| id                  | 请设置 id 以保证transfer的可访问性                                                                                                                                                                                                                                                                                                                                                                      | String              | -                                                                     |\n| children            | 接收 children 自定义渲染列表<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                                                                                                                                                     | Function            | -                                                                     |\n","tree-select":"### TreeSelect\n\n| 参数                      | 说明                                                                                                                                                                                                                                                       | 类型                      | 默认值         |\n| ----------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ----------- |\n| children                | 树节点                                                                                                                                                                                                                                                      | ReactNode               | -           |\n| size                    | 选择框大小<br><br>**可选值**:<br>'small', 'medium', 'large'                                                                                                                                                                                                      | Enum                    | 'medium'    |\n| placeholder             | 选择框占位符                                                                                                                                                                                                                                                   | String                  | -           |\n| disabled                | 是否禁用                                                                                                                                                                                                                                                     | Boolean                 | false       |\n| hasArrow                | 是否有下拉箭头                                                                                                                                                                                                                                                  | Boolean                 | true        |\n| hasBorder               | 是否有边框                                                                                                                                                                                                                                                    | Boolean                 | true        |\n| hasClear                | 是否有清空按钮                                                                                                                                                                                                                                                  | Boolean                 | false       |\n| label                   | 自定义内联 label                                                                                                                                                                                                                                              | ReactNode               | -           |\n| readOnly                | 是否只读，只读模式下可以展开弹层但不能选择                                                                                                                                                                                                                                    | Boolean                 | -           |\n| autoWidth               | 下拉框是否与选择器对齐                                                                                                                                                                                                                                              | Boolean                 | true        |\n| dataSource              | 数据源，该属性优先级高于 children                                                                                                                                                                                                                                    | Array&lt;Object>        | -           |\n| value                   | （受控）当前值                                                                                                                                                                                                                                                  | String/Array&lt;String> | -           |\n| defaultValue            | （非受控）默认值                                                                                                                                                                                                                                                 | String/Array&lt;String> | null        |\n| onChange                | 选中值改变时触发的回调函数<br><br>**签名**:<br>Function(value: String/Array, data: Object/Array) => void<br>**参数**:<br>_value_: {String/Array} 选中的值，单选时返回单个值，多选时返回数组<br>_data_: {Object/Array} 选中的数据，包括 value, label, pos, key属性，单选时返回单个值，多选时返回数组，父子节点选中关联时，同时选中，只返回父节点 | Function                | () => {}    |\n| showSearch              | 是否显示搜索框                                                                                                                                                                                                                                                  | Boolean                 | false       |\n| onSearch                | 在搜索框中输入时触发的回调函数<br><br>**签名**:<br>Function(keyword: String) => void<br>**参数**:<br>_keyword_: {String} 输入的关键字                                                                                                                                             | Function                | () => {}    |\n| notFoundContent         | 无数据时显示内容                                                                                                                                                                                                                                                 | ReactNode               | 'Not Found' |\n| multiple                | 是否支持多选                                                                                                                                                                                                                                                   | Boolean                 | false       |\n| treeCheckable           | 下拉框中的树是否支持勾选节点的复选框                                                                                                                                                                                                                                       | Boolean                 | false       |\n| treeCheckStrictly       | 下拉框中的树勾选节点复选框是否完全受控（父子节点选中状态不再关联）                                                                                                                                                                                                                        | Boolean                 | false       |\n| treeCheckedStrategy     | 定义选中时回填的方式<br><br>**可选值**:<br>'all'(返回所有选中的节点)<br>'parent'(父子节点都选中时只返回父节点)<br>'child'(父子节点都选中时只返回子节点)                                                                                                                                                    | Enum                    | 'parent'    |\n| treeDefaultExpandAll    | 下拉框中的树是否默认展开所有节点                                                                                                                                                                                                                                         | Boolean                 | false       |\n| treeDefaultExpandedKeys | 下拉框中的树默认展开节点key的数组                                                                                                                                                                                                                                       | Array&lt;String>        | \\[]         |\n| treeLoadData            | 下拉框中的树异步加载数据的函数，使用请参考[Tree的异步加载数据Demo](https://fusion.design/component/tree)<br><br>**签名**:<br>Function(node: ReactElement) => void<br>**参数**:<br>_node_: {ReactElement} 被点击展开的节点                                                                        | Function                | -           |\n| treeProps               | 透传到 Tree 的属性对象                                                                                                                                                                                                                                           | Object                  | {}          |\n| defaultVisible          | 初始下拉框是否显示                                                                                                                                                                                                                                                | Boolean                 | false       |\n| visible                 | 当前下拉框是否显示                                                                                                                                                                                                                                                | Boolean                 | -           |\n| onVisibleChange         | 下拉框显示或关闭时触发事件的回调函数<br><br>**签名**:<br>Function(visible: Boolean, type: String) => void<br>**参数**:<br>_visible_: {Boolean} 是否显示<br>_type_: {String} 触发显示关闭的操作类型                                                                                            | Function                | () => {}    |\n| popupStyle              | 下拉框自定义样式对象                                                                                                                                                                                                                                               | Object                  | -           |\n| popupClassName          | 下拉框样式自定义类名                                                                                                                                                                                                                                               | String                  | -           |\n| popupContainer          | 下拉框挂载的容器节点                                                                                                                                                                                                                                               | any                     | -           |\n| popupProps              | 透传到 Popup 的属性对象                                                                                                                                                                                                                                          | Object                  | -           |\n| followTrigger           | 是否跟随滚动                                                                                                                                                                                                                                                   | Boolean                 | -           |\n| isPreview               | 是否为预览态                                                                                                                                                                                                                                                   | Boolean                 | -           |\n| renderPreview           | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: Array) => void<br>**参数**:<br>_value_: {Array} 选择值 { label: , value:}                                                                                                                                       | Function                | -           |\n\n<!-- api-extra-start -->\n\n### TreeSelect.Node\n\n| 参数               | 说明                              | 类型        | 默认值   |\n| ---------------- | ------------------------------- | --------- | ----- |\n| children         | 树节点                             | ReactNode | -     |\n| label            | 节点文本内容                          | ReactNode | '---' |\n| selectable       | 单独设置是否支持选中，覆盖 Tree 的 selectable | Boolean   | -     |\n| checkable        | 单独设置是否出现复选框，覆盖 Tree 的 checkable | Boolean   | -     |\n| editable         | 单独设置是否支持编辑，覆盖 Tree 的 editable   | Boolean   | -     |\n| draggable        | 单独设置是否支持拖拽，覆盖 Tree 的 draggable  | Boolean   | -     |\n| disabled         | 是否禁止节点响应                        | Boolean   | false |\n| checkboxDisabled | 是否禁止勾选节点复选框                     | Boolean   | false |\n| isLeaf           | 是否是叶子节点，设置loadData时生效           | Boolean   | false |\n\n### dataSource 数据结构\n\n```js\nconst dataSource = [{\n    label: '服装',\n    value: '1',\n    key: '1',\n    selectable: false,\n    children: [{\n        label: '男装',\n        value: '2',\n        key: '2',\n        children: [{\n            label: '外套',\n            value: '4',\n            key: '4',\n            disableCheckbox: true\n        }, {\n            label: '夹克',\n            value: '5',\n            key: '5',\n            disabled: true\n        }]\n    }, {\n        label: '女装',\n        value: '3',\n        key: '3',\n        children: [{\n            label: '裙子',\n            value: '6',\n            key: '6'\n        }]\n    }]\n}];\n```\n\n如果不传入 key，TreeSelect 会使用内部计算出来的位置字符串作为 key 值，如果你想指定诸如 treeDefaultExpandedKeys 这样的属性，请传入自定义的 key 值，让它和 value 是一个值，是一个很好的办法。\n\n<!-- api-extra-end -->\n","tree":"### Tree\n\n| 参数                  | 说明                                                                                                                                                                                                                                                                                                                                                                                                               | 类型                      | 默认值        |\n| ------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------- | ---------- |\n| children            | 树节点                                                                                                                                                                                                                                                                                                                                                                                                              | ReactNode               | -          |\n| dataSource          | 数据源，该属性优先级高于 children                                                                                                                                                                                                                                                                                                                                                                                            | Array                   | -          |\n| showLine            | 是否显示树的线                                                                                                                                                                                                                                                                                                                                                                                                          | Boolean                 | false      |\n| selectable          | 是否支持选中节点                                                                                                                                                                                                                                                                                                                                                                                                         | Boolean                 | true       |\n| selectedKeys        | （用于受控）当前选中节点 key 的数组                                                                                                                                                                                                                                                                                                                                                                                             | Array&lt;String>        | -          |\n| defaultSelectedKeys | （用于非受控）默认选中节点 key 的数组                                                                                                                                                                                                                                                                                                                                                                                            | Array&lt;String>        | \\[]        |\n| onSelect            | 选中或取消选中节点时触发的回调函数<br><br>**签名**:<br>Function(selectedKeys: Array, extra: Object) => void<br>**参数**:<br>_selectedKeys_: {Array} 选中节点key的数组<br>_extra_: {Object} 额外参数<br>_extra.selectedNodes_: {Array} 选中节点的数组<br>_extra.node_: {Object} 当前操作的节点<br>_extra.selected_: {Boolean} 当前操作是否是选中                                                                                                                         | Function                | func.noop  |\n| multiple            | 是否支持多选                                                                                                                                                                                                                                                                                                                                                                                                           | Boolean                 | false      |\n| checkable           | 是否支持勾选节点的复选框                                                                                                                                                                                                                                                                                                                                                                                                     | Boolean                 | false      |\n| checkedKeys         | （用于受控）当前勾选复选框节点 key 的数组或 `{checked: Array, indeterminate: Array}` 的对象                                                                                                                                                                                                                                                                                                                                            | Array&lt;String>/Object | -          |\n| defaultCheckedKeys  | （用于非受控）默认勾选复选框节点 key 的数组                                                                                                                                                                                                                                                                                                                                                                                         | Array&lt;String>        | \\[]        |\n| checkStrictly       | 勾选节点复选框是否完全受控（父子节点选中状态不再关联）                                                                                                                                                                                                                                                                                                                                                                                      | Boolean                 | false      |\n| checkedStrategy     | 定义选中时回填的方式<br><br>**可选值**:<br>'all'(返回所有选中的节点)<br>'parent'(父子节点都选中时只返回父节点)<br>'child'(父子节点都选中时只返回子节点)                                                                                                                                                                                                                                                                                                            | Enum                    | 'all'      |\n| onCheck             | 勾选或取消勾选复选框时触发的回调函数<br><br>**签名**:<br>Function(checkedKeys: Array, extra: Object) => void<br>**参数**:<br>_checkedKeys_: {Array} 勾选复选框节点key的数组<br>_extra_: {Object} 额外参数<br>_extra.checkedNodes_: {Array} 勾选复选框节点的数组<br>_extra.checkedNodesPositions_: {Array} 包含有勾选复选框节点和其位置的对象的数组<br>_extra.indeterminateKeys_: {Array} 半选复选框节点 key 的数组<br>_extra.node_: {Object} 当前操作的节点<br>_extra.checked_: {Boolean} 当前操作是否是勾选 | Function                | func.noop  |\n| expandedKeys        | （用于受控）当前展开的节点 key 的数组                                                                                                                                                                                                                                                                                                                                                                                            | Array&lt;String>        | -          |\n| defaultExpandedKeys | （用于非受控）默认展开的节点 key 的数组                                                                                                                                                                                                                                                                                                                                                                                           | Array&lt;String>        | \\[]        |\n| defaultExpandAll    | 是否默认展开所有节点                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean                 | false      |\n| autoExpandParent    | 是否自动展开父节点，建议受控时设置为false                                                                                                                                                                                                                                                                                                                                                                                          | Boolean                 | true       |\n| onExpand            | 展开或收起节点时触发的回调函数<br><br>**签名**:<br>Function(expandedKeys: Array, extra: Object) => void<br>**参数**:<br>_expandedKeys_: {Array} 展开的节点key的数组<br>_extra_: {Object} 额外参数<br>_extra.node_: {Object} 当前操作的节点<br>_extra.expanded_: {Boolean} 当前操作是否是展开                                                                                                                                                                    | Function                | func.noop  |\n| editable            | 是否支持编辑节点内容                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean                 | false      |\n| onEditFinish        | 编辑节点内容完成时触发的回调函数<br><br>**签名**:<br>Function(key: String, label: String, node: Object) => void<br>**参数**:<br>_key_: {String} 编辑节点的 key<br>_label_: {String} 编辑节点完成时节点的文本<br>_node_: {Object} 当前编辑的节点                                                                                                                                                                                                              | Function                | func.noop  |\n| draggable           | 是否支持拖拽节点                                                                                                                                                                                                                                                                                                                                                                                                         | Boolean                 | false      |\n| onDragStart         | 开始拖拽节点时触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 拖拽的节点                                                                                                                                                                                                                                                | Function                | func.noop  |\n| onDragEnter         | 拖拽节点进入目标节点时触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 目标节点<br>_info.expandedKeys_: {Array} 当前展开的节点key的数组                                                                                                                                                                                               | Function                | func.noop  |\n| onDragOver          | 拖拽节点在目标节点上移动的时候触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 目标节点                                                                                                                                                                                                                                         | Function                | func.noop  |\n| onDragLeave         | 拖拽节点离开目标节点时触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 目标节点                                                                                                                                                                                                                                             | Function                | func.noop  |\n| onDragEnd           | 拖拽节点拖拽结束时触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 目标节点                                                                                                                                                                                                                                               | Function                | func.noop  |\n| onDrop              | 拖拽节点放入目标节点内或前后触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 目标节点<br>_info.dragNode_: {Object} 拖拽的节点<br>_info.dragNodesKeys_: {Array} 拖拽的节点和其子节点 key 的数组<br>_info.dropPosition_: {Number} 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后                                                                                 | Function                | func.noop  |\n| canDrop             | 节点是否可被作为拖拽的目标节点<br><br>**签名**:<br>Function(info: Object) => Boolean<br>**参数**:<br>_info_: {Object} 拖拽信息<br>_info.node_: {Object} 目标节点<br>_info.dragNode_: {Object} 拖拽的节点<br>_info.dragNodesKeys_: {Array} 拖拽的节点和其子节点 key 的数组<br>_info.dropPosition_: {Number} 放置位置，-1代表当前节点前，0代表当前节点里，1代表当前节点后<br>**返回值**:<br>{Boolean} 是否可以被当作目标节点<br>                                                                          | Function                | () => true |\n| loadData            | 异步加载数据的函数<br><br>**签名**:<br>Function(node: Object) => void<br>**参数**:<br>_node_: {Object} 被点击展开的节点                                                                                                                                                                                                                                                                                                               | Function                | -          |\n| filterTreeNode      | 按需筛选高亮节点<br><br>**签名**:<br>Function(node: Object) => Boolean<br>**参数**:<br>_node_: {Object} 待筛选的节点<br>**返回值**:<br>{Boolean} 是否被筛选中<br>                                                                                                                                                                                                                                                                           | Function                | -          |\n| onRightClick        | 右键点击节点时触发的回调函数<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 信息对象<br>_info.event_: {Object} 事件对象<br>_info.node_: {Object} 点击的节点                                                                                                                                                                                                                                                | Function                | func.noop  |\n| isLabelBlock        | 设置节点是否占满剩余空间，一般用于统一在各节点右侧添加元素(借助 flex 实现，暂时只支持 ie10+)                                                                                                                                                                                                                                                                                                                                                            | Boolean                 | false      |\n| isNodeBlock         | 设置节点是否占满一行                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean/Object          | false      |\n| animation           | 是否开启展开收起动画                                                                                                                                                                                                                                                                                                                                                                                                       | Boolean                 | true       |\n| focusedKey          | 当前获得焦点的子菜单或菜单项 key 值                                                                                                                                                                                                                                                                                                                                                                                             | String                  | -          |\n| renderChildNodes    | 渲染子节点<br><br>**签名**:<br>Function(nodes: Array) => ReactNode<br>**参数**:<br>_nodes_: {Array} 所有的子节点<br>**返回值**:<br>{ReactNode} 返回节点<br>                                                                                                                                                                                                                                                                            | Function                | -          |\n\n### Tree.Node\n\n| 参数               | 说明                              | 类型        | 默认值   |\n| ---------------- | ------------------------------- | --------- | ----- |\n| children         | 树节点                             | ReactNode | -     |\n| label            | 节点文本内容                          | ReactNode | '---' |\n| selectable       | 单独设置是否支持选中，覆盖 Tree 的 selectable | Boolean   | -     |\n| checkable        | 单独设置是否出现复选框，覆盖 Tree 的 checkable | Boolean   | -     |\n| editable         | 单独设置是否支持编辑，覆盖 Tree 的 editable   | Boolean   | -     |\n| draggable        | 单独设置是否支持拖拽，覆盖 Tree 的 draggable  | Boolean   | -     |\n| disabled         | 是否禁止节点响应                        | Boolean   | false |\n| checkboxDisabled | 是否禁止勾选节点复选框                     | Boolean   | false |\n| isLeaf           | 是否是叶子节点，设置loadData时生效           | Boolean   | false |\n\n<!-- api-extra-start -->\n\n可以为 Tree.Node 设置 `key` 值：`<TreeNode key=\"102894\" label=\"女装\" />`，一般为数据的 id 值，但必需保证其全局唯一性，`key` 的默认值为 Tree 内部计算出的位置字符串。\n\n<!-- api-extra-end -->\n","upload":"### Upload\n\n| 参数              | 说明                                                                                                                                                                                                                                              | 类型              | 默认值       |\n| --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------- | --------- |\n| action          | 上传的地址                                                                                                                                                                                                                                           | String          | -         |\n| shape           | 上传按钮形状<br><br>**可选值**:<br>'card'                                                                                                                                                                                                                | Enum            | -         |\n| accept          | 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept)                                                                                           | String          | -         |\n| data            | 上传额外传参                                                                                                                                                                                                                                          | Object/Function | -         |\n| headers         | 设置上传的请求头部                                                                                                                                                                                                                                       | Object          | -         |\n| withCredentials | 是否允许请求携带 cookie                                                                                                                                                                                                                                 | Boolean         | true      |\n| beforeUpload    | 可选参数, 详见 [beforeUpload](#beforeUpload)<br><br>**签名**:<br>Function(file: Object, options: Object) => Boolean/Object/Promise<br>**参数**:<br>_file_: {Object} 所有文件<br>_options_: {Object} 参数<br>**返回值**:<br>{Boolean/Object/Promise} 返回值作用见demo<br> | Function        | func.noop |\n| onProgress      | 上传中<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                        | Function        | func.noop |\n| onSuccess       | 可选参数，上传成功回调函数，参数为请求下响应信息以及文件<br><br>**签名**:<br>Function(file: Object, value: Array) => void<br>**参数**:<br>_file_: {Object} 文件<br>_value_: {Array} 值                                                                                             | Function        | func.noop |\n| onError         | 可选参数，上传失败回调函数，参数为上传失败的信息、响应信息以及文件<br><br>**签名**:<br>Function(file: Object, value: Array) => void<br>**参数**:<br>_file_: {Object} 出错的文件<br>_value_: {Array} 当前值                                                                                   | Function        | func.noop |\n| children        | 子元素                                                                                                                                                                                                                                             | ReactNode       | -         |\n| timeout         | 设置上传超时,单位ms                                                                                                                                                                                                                                     | Number          | -         |\n| method          | 上传方法<br><br>**可选值**:<br>'post', 'put'                                                                                                                                                                                                           | Enum            | 'post'    |\n| request         | 自定义上传方法<br><br>**签名**:<br>Function(option: Object) => Object<br>**参数**:<br>_option_: {Object} null<br>**返回值**:<br>{Object} object with abort method<br>                                                                                         | Function        | -         |\n| name            | 文件名字段                                                                                                                                                                                                                                           | String          | -         |\n| onSelect        | 选择文件回调<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                     | Function        | func.noop |\n| onDrop          | 放文件<br><br>**签名**:<br>Function() => void                                                                                                                                                                                                        | Function        | func.noop |\n| value           | 文件列表                                                                                                                                                                                                                                            | Array           | -         |\n| defaultValue    | 默认文件列表                                                                                                                                                                                                                                          | Array           | -         |\n| listType        | 上传列表的样式<br><br>**可选值**:<br>'text'(文字)<br>'image'(图文)<br>'card'(卡片)                                                                                                                                                                              | Enum            | -         |\n| formatter       | 数据格式化函数，配合自定义 action 使用，参数为服务器的响应数据，详见 [formatter](#formater)<br><br>**签名**:<br>Function(response: Object, file: File) => void<br>**参数**:<br>_response_: {Object} 返回<br>_file_: {File} 文件对象                                                     | Function        | -         |\n| limit           | 最大文件上传个数                                                                                                                                                                                                                                        | Number          | Infinity  |\n| dragable        | 可选参数，是否支持拖拽上传，`ie10+` 支持。                                                                                                                                                                                                                       | Boolean         | -         |\n| useDataURL      | 可选参数，是否本地预览                                                                                                                                                                                                                                     | Boolean         | -         |\n| disabled        | 可选参数，是否禁用上传功能                                                                                                                                                                                                                                   | Boolean         | -         |\n| onChange        | 上传文件改变时的状态<br><br>**签名**:<br>Function(info: Object) => void<br>**参数**:<br>_info_: {Object} 文件事件对象                                                                                                                                               | Function        | func.noop |\n| afterSelect     | 可选参数, 用于校验文件,afterSelect仅在 autoUpload=false 的时候生效,autoUpload=true时,可以使用beforeUpload完全可以替代该功能.<br><br>**签名**:<br>Function(file: Object) => Boolean<br>**参数**:<br>_file_: {Object} null<br>**返回值**:<br>{Boolean} 返回false会阻止上传,其他则表示正常<br>         | Function        | func.noop |\n| onRemove        | 移除文件回调函数<br><br>**签名**:<br>Function(file: Object) => Boolean/Promise<br>**参数**:<br>_file_: {Object} 文件<br>**返回值**:<br>{Boolean/Promise} 返回 false、Promise.resolve(false)、 Promise.reject() 将阻止文件删除<br>                                           | Function        | func.noop |\n| autoUpload      | 自动上传                                                                                                                                                                                                                                            | Boolean         | true      |\n| progressProps   | 透传给Progress props                                                                                                                                                                                                                               | Object          | -         |\n| isPreview       | 是否为预览态                                                                                                                                                                                                                                          | Boolean         | -         |\n| renderPreview   | 预览态模式下渲染的内容<br><br>**签名**:<br>Function(value: number) => void<br>**参数**:<br>_value_: {number} 评分值                                                                                                                                               | Function        | -         |\n\n### Upload.Card\n\n> 继承 Upload 的 API，除非特别说明\n\n| 参数        | 说明                                           | 类型       | 默认值       |\n| --------- | -------------------------------------------- | -------- | --------- |\n| onPreview | 点击图片回调<br><br>**签名**:<br>Function() => void  | Function | func.noop |\n| onChange  | 改变时候的回调<br><br>**签名**:<br>Function() => void | Function | func.noop |\n| onRemove  | 点击移除的回调<br><br>**签名**:<br>Function() => void | Function | -         |\n| onCancel  | 取消上传的回调<br><br>**签名**:<br>Function() => void | Function | -         |\n\n### Upload.Dragger\n\n> IE10+ 支持。继承 Upload 的 API，除非特别说明\n\n### Upload.Selecter\n\n> [底层能力] 可自定义样式的文件选择器\n\n| 参数          | 说明                                                                                                                                                    | 类型       | 默认值       |\n| ----------- | ----------------------------------------------------------------------------------------------------------------------------------------------------- | -------- | --------- |\n| disabled    | 是否禁用上传功能                                                                                                                                              | Boolean  | -         |\n| multiple    | 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件                                                                                                                | Boolean  | false     |\n| dragable    | 是否支持拖拽上传，`ie10+` 支持。                                                                                                                                  | Boolean  | -         |\n| accept      | 接受上传的文件类型 (image/png, image/jpg, .doc, .ppt) 详见 [input accept attribute](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-accept) | String   | -         |\n| onSelect    | 文件选择回调<br><br>**签名**:<br>Function() => void                                                                                                           | Function | func.noop |\n| onDragOver  | 拖拽经过回调<br><br>**签名**:<br>Function() => void                                                                                                           | Function | func.noop |\n| onDragLeave | 拖拽离开回调<br><br>**签名**:<br>Function() => void                                                                                                           | Function | func.noop |\n| onDrop      | 拖拽完成回调<br><br>**签名**:<br>Function() => void                                                                                                           | Function | func.noop |\n"}