{"version":3,"sources":["webpack:///../packages/component/src/components/table/demo/demo17.js"],"names":["generateDataSource","result","i","push","title","id","time","render","value","index","record","demoMeta","zhName","zhDesc","Demo17","useState","className","setClassName","isZebra","setIsZebra","hasBorder","setHasBorder","align","setAlign","SWrapper","onClick","dataSource","Column","dataIndex","cell","width","styled","span","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"6FAAA,2JAIMA,EAAqB,WAEzB,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAK,CACVC,MAAM,4BAA4B,EAAIF,GAAjC,2BACLG,GAAI,aAAeH,EACnBI,KAAM,IAAOJ,IAGjB,OAAOD,GAEHM,EAAS,SAACC,EAAOC,EAAOC,GAC5B,OAAO,qCAAWA,EAAOL,GAAlB,MAsDIM,EAAW,CACtBC,OAAO,KACPC,OAAO,WAGMC,UAxDA,WAAO,IAAD,EACeC,mBAAS,IAApCC,EADY,KACDC,EADC,OAGWF,oBAAS,GAAhCG,EAHY,KAGHC,EAHG,OAKeJ,oBAAS,GAApCK,EALY,KAKDC,EALC,OAOON,mBAAS,QAA5BO,EAPY,KAOLC,EAPK,KAyBnB,OACE,kBAACC,EAAD,KACE,2BACE,kBAAC,IAAD,CAAQC,QAnBM,WAClBN,GAAYD,KAkBR,kBADF,IAGE,kBAAC,IAAD,CAAQO,QAjBO,WACnBJ,GAAcD,KAgBV,iBAHF,IAKE,kBAAC,IAAD,CAAQK,QAfK,WACjBR,EAAa,YAcT,6BALF,IAOE,kBAAC,IAAD,CAAQQ,QAbI,WAChBF,EAAS,WAYL,iCAPF,KAUA,kBAAC,IAAD,CACEG,WAAY1B,IACZkB,QAASA,EACTE,UAAWA,GAEX,kBAAC,IAAMO,OAAP,CAAcvB,MAAM,KAAKwB,UAAU,KAAKN,MAAOA,IAC/C,kBAAC,IAAMK,OAAP,CAAcvB,MAAM,QAAQwB,UAAU,QAAQZ,UAAWA,IACzD,kBAAC,IAAMW,OAAP,CAAcvB,MAAM,OAAOwB,UAAU,SACrC,kBAAC,IAAMD,OAAP,CAAcE,KAAMtB,EAAQuB,MAAO,SAa3C,IAAMN,EAAWO,UAAOC,KAAV,mEAAGD,CAAH,kCAMCE,EAAgBC","file":"303-255ed9c6fd1e8466bd35.js","sourcesContent":["import React, { useState } from 'react'\nimport { Table, Button } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst generateDataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\nconst render = (value, index, record) => {\n  return <a>Remove({record.id})</a>\n}\n\nconst Demo17 = () => {\n  const [className, setClassName] = useState('')\n\n  const [isZebra, setIsZebra] = useState(false)\n\n  const [hasBorder, setHasBorder] = useState(false)\n\n  const [align, setAlign] = useState('left')\n\n  const toggleZebra = () => {\n    setIsZebra(!isZebra)\n  }\n\n  const toggleBorder = () => {\n    setHasBorder(!hasBorder)\n  }\n\n  const makeBeauty = () => {\n    setClassName('beauty')\n  }\n\n  const makeAlign = () => {\n    setAlign('right')\n  }\n\n  return (\n    <SWrapper>\n      <p>\n        <Button onClick={toggleZebra}> Toggle zebra </Button>\n        &nbsp;\n        <Button onClick={toggleBorder}>Toggle border</Button>\n        &nbsp;\n        <Button onClick={makeBeauty}>Make second column beauty</Button>\n        &nbsp;\n        <Button onClick={makeAlign}>Make first column align right</Button>\n        &nbsp;\n      </p>\n      <Table\n        dataSource={generateDataSource()}\n        isZebra={isZebra}\n        hasBorder={hasBorder}\n      >\n        <Table.Column title=\"Id\" dataIndex=\"id\" align={align} />\n        <Table.Column title=\"Title\" dataIndex=\"title\" className={className} />\n        <Table.Column title=\"Time\" dataIndex=\"time\" />\n        <Table.Column cell={render} width={200} />\n      </Table>\n    </SWrapper>\n  )\n}\n\nexport const demoMeta = {\n  zhName: `样式`,\n  zhDesc: `自定义表格边框`,\n}\n\nexport default Demo17\n\nconst SWrapper = styled.span`\n  .beauty {\n    background: #f7f7f7;\n  }\n`\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}