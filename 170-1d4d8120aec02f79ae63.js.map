{"version":3,"sources":["webpack:///../packages/component/src/components/menu/demo/demo6.js"],"names":["CheckboxItem","Menu","RadioItem","Divider","initsexs","initballs","Demo","useState","selectedSex","setSelectedSex","balls","setBalls","SMenu","map","sex","key","checked","onChange","ball","indexOf","check","newKeys","index","concat","slice","demoMeta","zhName","zhDesc","styled","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"2oBAIQA,EAAqCC,OAArCD,aAAcE,EAAuBD,OAAvBC,UAAWC,EAAYF,OAAZE,QAE3BC,EAAW,CAAC,OAAQ,UACpBC,EAAY,CAAC,WAAY,aAAc,cAqD9BC,UAnDF,WAAO,IAAD,EACqBC,mBAAS,QAAxCC,EADU,KACGC,EADH,OAESF,mBAAS,IAA5BG,EAFU,KAEHC,EAFG,KAsBjB,OACE,kBAACC,EAAD,KACGR,EAASS,KAAI,SAAAC,GAAG,OACf,kBAACZ,EAAD,CACEa,IAAKD,EACLE,QAASR,IAAgBM,EACzBG,SAAU,WAvBhBR,EAwBuBK,KAGhBA,MAGL,kBAACX,EAAD,CAASY,IAAI,YACZV,EAAUQ,KAAI,SAAAK,GAAI,OACjB,kBAAClB,EAAD,CACEe,IAAKG,EACLF,QAASN,EAAMS,QAAQD,IAAS,EAChCD,SAAU,SAAAD,GAhCM,IAACD,EAAKK,EACxBC,EACEC,EAFiBP,EAiCCG,EAjCIE,EAiCEJ,EA/BxBM,EAAQZ,EAAMS,QAAQJ,GACxBK,IAAoB,IAAXE,EACXD,EAAUX,EAAMa,OAAOR,IACbK,GAASE,GAAS,IAC5BD,EAAO,YAAOX,EAAMc,MAAM,EAAGF,IAAtB,EAAiCZ,EAAMc,MAAMF,EAAQ,MAG1DD,GACFV,EAASU,KA0BJH,QASJ,IAAMO,EAAW,CACtBC,OAAQ,WACRC,OAAO,oBAGHf,EAAQgB,kBAAO3B,QAAV,+DAAG2B,CAAH,kBAIIC,EAAgBC","file":"170-1d4d8120aec02f79ae63.js","sourcesContent":["import React, { useState } from 'react'\nimport { Menu } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst { CheckboxItem, RadioItem, Divider } = Menu\n\nconst initsexs = ['male', 'female']\nconst initballs = ['football', 'basketball', 'volleyball']\n\nconst Demo = () => {\n  const [selectedSex, setSelectedSex] = useState('male')\n  const [balls, setBalls] = useState([])\n\n  const handleSexCheck = key => {\n    setSelectedSex(key)\n  }\n\n  const handleBallCheck = (key, check) => {\n    let newKeys\n    const index = balls.indexOf(key)\n    if (check && index === -1) {\n      newKeys = balls.concat(key)\n    } else if (!check && index > -1) {\n      newKeys = [...balls.slice(0, index), ...balls.slice(index + 1)]\n    }\n\n    if (newKeys) {\n      setBalls(newKeys)\n    }\n  }\n\n  return (\n    <SMenu>\n      {initsexs.map(sex => (\n        <RadioItem\n          key={sex}\n          checked={selectedSex === sex}\n          onChange={() => {\n            handleSexCheck(sex)\n          }}\n        >\n          {sex}\n        </RadioItem>\n      ))}\n      <Divider key=\"divider\" />\n      {initballs.map(ball => (\n        <CheckboxItem\n          key={ball}\n          checked={balls.indexOf(ball) > -1}\n          onChange={checked => {\n            handleBallCheck(ball, checked)\n          }}\n        >\n          {ball}\n        </CheckboxItem>\n      ))}\n    </SMenu>\n  )\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: '自定义菜单项选择',\n  zhDesc: `展示自定义组合菜单项可选的用法。`,\n}\n\nconst SMenu = styled(Menu)`\n  width: 200px;\n`\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}