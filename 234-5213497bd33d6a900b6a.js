(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{QVhr:function(n,e,a){"use strict";a.r(e),a.d(e,"demoMeta",(function(){return h})),a.d(e,"_demoSrcFiles",(function(){return g}));a("wDqy"),a("yvkl"),a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3");var t=a("mXGw"),r=a.n(t),l=a("BgHK"),o=a("UutA");function s(n,e){var a=Object.keys(n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(n);e&&(t=t.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.push.apply(a,t)}return a}function i(n){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){c(n,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(a,e))}))}return n}function c(n,e,a){return e in n?Object.defineProperty(n,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[e]=a,n}var d=l.Select.AutoComplete,m=["Lucy King","Lily King","Jim Green",{label:"Chinese",children:[{value:"Hang Meimei",label:"Hang Meimei"},"Li Lei",{value:"Gao Hui",label:"Gao Hui",disabled:!0},"Zhang San","Li Si","Wang Wu",{value:"Zhao Benshan",label:"Zhao Benshan",disabled:!0},"Sun Yang","Song Shuying"]},{label:"Pets",children:["Poly","Kitty"]}],p={size:["small","medium","large"],disabled:[!0,!1],hasClear:[!0,!1]},u=o.default.div.withConfig({displayName:"demo11__SWrapper",componentId:"sc-1jonlxb-0"})(["padding:16px;background-color:#f8f8f8;"]),b=o.default.div.withConfig({displayName:"demo11__SController",componentId:"sc-1jonlxb-1"})(["padding:12px 12px 4px;margin-bottom:16px;border:2px dashed #ddd;.next-select{margin-right:8px;margin-bottom:8px;}"]);e.default=function(){var n,e=Object(t.useState)({value:null,size:void 0,disabled:void 0,hasClear:void 0}),a=e[0],o=e[1],s=Object(t.useCallback)((function(n,e){var t,r;"mode"===n?o(i({},a,((t={})[n]=e,t.value=null,t))):o(i({},a,((r={})[n]=e,r)))}),[a]),c=Object(t.useCallback)((function(n){console.log("handleChange: value: ",n),o(i({},a,{value:n}))}),[a]);return r.a.createElement(u,null,r.a.createElement(b,null,(n=a,Object.keys(p).map((function(e){return r.a.createElement(l.Select,{key:e,label:e+": ",value:n[e],dataSource:p[e],onChange:function(n){return s(e,n)}})})))),r.a.createElement(d,Object.assign({},a,{style:{maxWidth:300},onChange:c,dataSource:m})))};var h={zhName:"自动完成大小",zhDesc:"`AutoComplete` 大小、disabled、清除"},g={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo11";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo11.js":"import React, { useState, useCallback } from 'react'\nimport { Select } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nconst { AutoComplete } = Select\n\nconst dataSource = [\n  'Lucy King',\n  'Lily King',\n  'Jim Green',\n  {\n    label: 'Chinese',\n    children: [\n      { value: 'Hang Meimei', label: 'Hang Meimei' },\n      'Li Lei',\n      { value: 'Gao Hui', label: 'Gao Hui', disabled: true },\n      'Zhang San',\n      'Li Si',\n      'Wang Wu',\n      { value: 'Zhao Benshan', label: 'Zhao Benshan', disabled: true },\n      'Sun Yang',\n      'Song Shuying',\n    ],\n  },\n  {\n    label: 'Pets',\n    children: ['Poly', 'Kitty'],\n  },\n]\n\nconst ctrlDataSources = {\n  size: ['small', 'medium', 'large'],\n  disabled: [true, false],\n  hasClear: [true, false],\n}\n\nconst SWrapper = styled.div`\n  padding: 16px;\n  background-color: #f8f8f8;\n`\n\nconst SController = styled.div`\n  padding: 12px 12px 4px;\n  margin-bottom: 16px;\n  border: 2px dashed #ddd;\n  .next-select {\n    margin-right: 8px;\n    margin-bottom: 8px;\n  }\n`\n\nconst Demo11 = () => {\n  const [params, setParams] = useState({\n    value: null,\n    size: undefined,\n    disabled: undefined,\n    hasClear: undefined,\n  })\n\n  const handleCtrlChange = useCallback(\n    (key, value) => {\n      if (key === 'mode') {\n        setParams({\n          ...params,\n          [key]: value,\n          value: null,\n        })\n      } else {\n        setParams({\n          ...params,\n          [key]: value,\n        })\n      }\n    },\n    [params]\n  )\n\n  const handleChange = useCallback(\n    value => {\n      console.log('handleChange: value: ', value)\n      setParams({\n        ...params,\n        value,\n      })\n    },\n    [params]\n  )\n\n  const renderCtrlNodes = state => {\n    const ctrlNodes = Object.keys(ctrlDataSources).map(k => (\n      <Select\n        key={k}\n        label={`${k}: `}\n        value={state[k]}\n        dataSource={ctrlDataSources[k]}\n        onChange={item => handleCtrlChange(k, item)}\n      />\n    ))\n    return ctrlNodes\n  }\n\n  return (\n    <SWrapper>\n      <SController>{renderCtrlNodes(params)}</SController>\n      <AutoComplete\n        {...params}\n        style={{ maxWidth: 300 }}\n        onChange={handleChange}\n        dataSource={dataSource}\n      />\n    </SWrapper>\n  )\n}\n\nexport default Demo11\n\nexport const demoMeta = {\n  zhName: `自动完成大小`,\n  zhDesc: '`AutoComplete` 大小、disabled、清除',\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo11.js"}'}}}]);
//# sourceMappingURL=234-5213497bd33d6a900b6a.js.map