(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{"4NmH":function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return p})),t.d(n,"_demoSrcFiles",(function(){return c}));var a=t("mXGw"),o=t.n(a),r=t("BgHK"),l=r.Form.Item,m=r.Select.Option,s={labelCol:{span:4},wrapperCol:{span:14}};n.default=function(){return o.a.createElement(r.Form,s,o.a.createElement(l,{label:"userName:"},o.a.createElement(r.Input,null)),o.a.createElement(l,{label:"password:"},o.a.createElement(r.Input,{htmlType:"password",name:"resPass",placeholder:"Please Enter Password"})),o.a.createElement(l,{label:"Country:"},o.a.createElement(r.Select,{placeholder:"Please select a country",style:{width:"100%"}},o.a.createElement(m,{value:"china"},"China"),o.a.createElement(m,{value:"use"},"United States"),o.a.createElement(m,{value:"japan"},"Japan"),o.a.createElement(m,{value:"korean"},"South Korea"),o.a.createElement(m,{value:"Thailand"},"Thailand"))),o.a.createElement(l,{label:"Note:",help:"something"},o.a.createElement(r.Input.TextArea,{placeholder:"something",name:"resReremark"})),o.a.createElement(l,{label:" "},o.a.createElement(r.Form.Submit,null,"Submit")))};var p={zhName:"响应式",zhDesc:"可以通过配置 `labelCol` `wrapperCol` 的 `Grid.Col` 响应式属性实现响应式"},c={"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo15";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/styles.less":"","src/demo/demo15.js":'import React from \'react\'\n\nimport { Form, Input, Select } from \'@alicloud/console-components\'\n\nconst FormItem = Form.Item\n\nconst { Option } = Select\n\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 14 },\n}\n\nconst Demo15 = () => (\n  <Form {...formItemLayout}>\n    <FormItem label="userName:">\n      <Input />\n    </FormItem>\n    <FormItem label="password:">\n      <Input\n        htmlType="password"\n        name="resPass"\n        placeholder="Please Enter Password"\n      />\n    </FormItem>\n    <FormItem label="Country:">\n      <Select placeholder="Please select a country" style={{ width: \'100%\' }}>\n        <Option value="china">China</Option>\n        <Option value="use">United States</Option>\n        <Option value="japan">Japan</Option>\n        <Option value="korean">South Korea</Option>\n        <Option value="Thailand">Thailand</Option>\n      </Select>\n    </FormItem>\n    <FormItem label="Note:" help="something">\n      <Input.TextArea placeholder="something" name="resReremark" />\n    </FormItem>\n    <FormItem label=" ">\n      <Form.Submit>Submit</Form.Submit>\n    </FormItem>\n  </Form>\n)\n\nexport default Demo15\n\nexport const demoMeta = {\n  zhName: `响应式`,\n  zhDesc: `可以通过配置 \\`labelCol\\` \\`wrapperCol\\` 的 \\`Grid.Col\\` 响应式属性实现响应式`,\n}\n',"demoMeta.json":'{"entryPath":"src/demo/demo15.js"}'}}}]);
//# sourceMappingURL=113-c154946d5287f112c05b.js.map