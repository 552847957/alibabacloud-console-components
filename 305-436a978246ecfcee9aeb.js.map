{"version":3,"sources":["webpack:///../packages/component/src/components/table/demo/demo19.js"],"names":["dataSource","result","i","push","title","name","id","time","render","value","index","record","rowSelection","onChange","console","log","getProps","disabled","Demo19","useState","widths","setWidths","onResizeChange","dataIndex","Column","resizable","width","cell","demoMeta","zhName","zhDesc","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"m9BAGA,IAGMA,EAAa,WAEjB,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAK,CACVC,MAAO,CACLC,KAAK,4BAA4B,EAAIH,GAAjC,4BAENI,GAAI,aAAeJ,EACnBK,KAAM,IAAOL,IAGjB,OAAOD,GAEHO,EAAS,SAACC,EAAOC,EAAOC,GAC5B,OAAO,qCAAWA,EAAOL,GAAlB,MAEHM,EAAe,CACnBC,SApBe,WAAmB,IAAD,GACjC,EAAAC,SAAQC,IAAR,oBAoBAC,SAAU,SAAAL,GACR,MAAO,CACLM,SAAwB,eAAdN,EAAOL,MA+BRY,UA1BA,WAAO,IAAD,EACSC,mBAAS,CACnCb,GAAI,MADCc,EADY,KACJC,EADI,KAYnB,OACE,kBAAC,IAAD,CACErB,WAAYA,IACZY,aAAcA,EACdU,eAXmB,SAACC,EAAWd,GAAW,IAAD,EAC3CY,EAAU,EAAD,KACJD,GADI,WAENG,GAAYH,EAAOG,GAAad,EAF1B,OAYP,kBAAC,IAAMe,OAAP,CAAcpB,MAAM,KAAKmB,UAAU,KAAKE,WAAS,EAACC,MAAON,EAAOd,KAChE,kBAAC,IAAMkB,OAAP,CAAcpB,MAAM,QAAQmB,UAAU,aAAaG,MAAO,MAC1D,kBAAC,IAAMF,OAAP,CAAcpB,MAAM,OAAOmB,UAAU,OAAOG,MAAO,MACnD,kBAAC,IAAMF,OAAP,CAAcG,KAAMnB,EAAQkB,MAAO,QAOlC,IAAME,EAAW,CACtBC,OAAO,SACPC,OAAQ,8BAGKC,EAAgBC","file":"305-436a978246ecfcee9aeb.js","sourcesContent":["import React, { Component, useState } from 'react'\nimport { Table } from '@alicloud/console-components'\n\nconst onChange = function(...args) {\n  console.log(...args)\n}\nconst dataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: {\n        name: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      },\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\nconst render = (value, index, record) => {\n  return <a>Remove({record.id})</a>\n}\nconst rowSelection = {\n  onChange,\n  getProps: record => {\n    return {\n      disabled: record.id === 100306660942,\n    }\n  },\n}\n\nconst Demo19 = () => {\n  const [widths, setWidths] = useState({\n    id: 100,\n  })\n\n  const onResizeChange = (dataIndex, value) => {\n    setWidths({\n      ...widths,\n      [dataIndex]: widths[dataIndex] + value,\n    })\n  }\n\n  return (\n    <Table\n      dataSource={dataSource()}\n      rowSelection={rowSelection}\n      onResizeChange={onResizeChange}\n    >\n      <Table.Column title=\"Id\" dataIndex=\"id\" resizable width={widths.id} />\n      <Table.Column title=\"Title\" dataIndex=\"title.name\" width={400} />\n      <Table.Column title=\"Time\" dataIndex=\"time\" width={600} />\n      <Table.Column cell={render} width={200} />\n    </Table>\n  )\n}\n\nexport default Demo19;\n\nexport const demoMeta = {\n  zhName: `重设列的尺寸`,\n  zhDesc: '通过`onResizeChange`来让列宽可以调整',\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}