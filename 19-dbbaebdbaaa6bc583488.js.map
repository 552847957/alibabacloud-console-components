{"version":3,"sources":["webpack:///../packages/rc-app-layout/stories/controlled/controlled.tsx"],"names":["Nav","header","Item","key","SubMenu","label","Controlled","useState","collapsed","setCollapsed","nav","navCollapsed","onNavCollapseTriggerClick","prevCollapsed","Header","title","Content","type","size","onClick","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"4FAAA,8HAMMA,EAAM,kBACV,kBAAC,UAAD,CAAaC,OAAO,SAClB,kBAAC,UAAYC,KAAb,CAAkBC,IAAI,YAAtB,MACA,kBAAC,UAAYD,KAAb,CAAkBC,IAAI,YAAtB,MACA,kBAAC,UAAYC,QAAb,CAAqBD,IAAI,MAAME,MAAM,MACnC,kBAAC,UAAYH,KAAb,CAAkBC,IAAI,cAAtB,QACA,kBAAC,UAAYD,KAAb,CAAkBC,IAAI,YAAtB,SAEF,kBAAC,UAAYD,KAAb,CAAkBC,IAAI,QAAtB,QACA,kBAAC,UAAYD,KAAb,CAAkBC,IAAI,YAAtB,YAqCWG,UA7BkB,WAAM,MACHC,oBAAS,GAApCC,EAD8B,KACnBC,EADmB,KAGrC,OACE,kBAAC,IAAD,CACEC,IAAK,kBAACV,EAAD,MACLW,aAAcH,EACdI,0BAA2B,SAACC,GAC1BJ,GAAcI,KAGhB,kBAAC,IAAD,KACE,kBAAC,IAAKC,OAAN,CAAaC,MAAM,OACnB,kBAAC,IAAKC,QAAN,KACE,kBAAC,SAAD,CACEC,KAAK,UACLC,KAAK,QACLC,QAAS,WACPV,GAAcD,KAGfA,EAAY,cAAgB,mBAUhC,IAAMY,EAAgBC","file":"19-dbbaebdbaaa6bc583488.js","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@alicloud/console-components'\nimport AppLayout from '@alicloud/console-components-app-layout'\nimport ConsoleMenu from '@alicloud/console-components-console-menu'\nimport Page from '@alicloud/console-components-page'\n\nconst Nav = () => (\n  <ConsoleMenu header=\"产品控制台\">\n    <ConsoleMenu.Item key=\"overview\">概览</ConsoleMenu.Item>\n    <ConsoleMenu.Item key=\"instance\">实例</ConsoleMenu.Item>\n    <ConsoleMenu.SubMenu key=\"log\" label=\"日志\">\n      <ConsoleMenu.Item key=\"access-log\">访问日志</ConsoleMenu.Item>\n      <ConsoleMenu.Item key=\"load-log\">负载日志</ConsoleMenu.Item>\n    </ConsoleMenu.SubMenu>\n    <ConsoleMenu.Item key=\"help\">产品帮助</ConsoleMenu.Item>\n    <ConsoleMenu.Item key=\"api-docs\">API 文档</ConsoleMenu.Item>\n  </ConsoleMenu>\n)\n\n// 使用 `navCollapsed` 控制导航区域是否展开或收起\n// 该示例使用 class component 并通过 state 完成受控\n// 在实际项目中，你可以通过 React Hooks 或者 Redux 进行状态管理从而完成受控\n\nconst Controlled: React.FC<{}> = () => {\n  const [collapsed, setCollapsed] = useState(false)\n\n  return (\n    <AppLayout\n      nav={<Nav />}\n      navCollapsed={collapsed}\n      onNavCollapseTriggerClick={(prevCollapsed: boolean) => {\n        setCollapsed(!prevCollapsed)\n      }}\n    >\n      <Page>\n        <Page.Header title=\"概览\" />\n        <Page.Content>\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            onClick={() => {\n              setCollapsed(!collapsed)\n            }}\n          >\n            {collapsed ? '展开当前已关闭的导航区' : '收起当前已展开的导航区'}\n          </Button>\n        </Page.Content>\n      </Page>\n    </AppLayout>\n  )\n}\n\nexport default Controlled\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}