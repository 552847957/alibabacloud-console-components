{"version":3,"sources":["webpack:///../packages/component/src/components/table/demo/demo8.js"],"names":["ExpandedApp","props","state","dataSource","load","this","concat","setState","render","style","marginTop","hasHeader","hasBorder","Column","title","dataIndex","width","borderTop","textAlign","background","lineHeight","onClick","bind","index","React","Component","result","i","push","id","time","children","value","record","expandedRowRender","App","openRowKeys","onSort","order","sort","a","b","disabledExpandedCol","getExpandedColProps","console","log","disabled","toggleCol","hasExpandedRowCtrl","onRowOpen","toggleExpand","key","indexOf","splice","rowProps","className","onExpandedRowClick","expandedIndexSimulate","isZebra","expandedRowIndent","sortable","cell","demoMeta","zhName","zhDesc","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"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","file":"356-7e2dbeef6f66b67274ff.js","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Button } from '@alicloud/console-components'\n\nclass ExpandedApp extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSource: this.props.dataSource,\n    }\n  }\n\n  load() {\n    let { dataSource } = this.state\n    dataSource = dataSource.concat(dataSource)\n    this.setState({ dataSource })\n  }\n\n  render() {\n    const style = {\n      borderTop: '1px solid #eee',\n      textAlign: 'center',\n      background: '#f8f8f8',\n      lineHeight: '28px',\n    }\n    return (\n      <div style={{ marginTop: 10 }}>\n        <Table\n          dataSource={this.state.dataSource}\n          hasHeader={false}\n          hasBorder={false}\n        >\n          <Table.Column title=\"Title\" dataIndex=\"title\" />\n          <Table.Column title=\"Time\" dataIndex=\"time\" width={200} />\n        </Table>\n        <p style={style} onClick={this.load.bind(this)}>\n          {this.props.index}: Load more data.{' '}\n        </p>\n      </div>\n    )\n  }\n}\n\nconst dataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n      children: [\n        {\n          title: `Sub title for Quotation ${3 + i}`,\n          time: 2000 + i,\n        },\n        {\n          title: `Sub2 title for Quotation ${3 + i}`,\n          time: 2000 + i,\n        },\n      ],\n    })\n  }\n  return result\n}\nconst render = (value, index, record) => {\n  return <a>Remove({record.id})</a>\n}\nconst expandedRowRender = (record, index) => {\n  const { children } = record\n  return <ExpandedApp dataSource={children} index={index} />\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSource: dataSource(),\n      hasBorder: false,\n      openRowKeys: [],\n    }\n  }\n\n  onSort(dataIndex, order) {\n    const dataSource = this.state.dataSource.sort(function(a, b) {\n      const result = a[dataIndex] - b[dataIndex]\n      return order === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1\n    })\n    this.setState({\n      dataSource,\n    })\n  }\n\n  disabledExpandedCol() {\n    this.setState({\n      getExpandedColProps: (record, index) => {\n        console.log(index)\n        if (index === 3) {\n          return {\n            disabled: true,\n          }\n        }\n      },\n    })\n  }\n\n  toggleCol() {\n    this.setState({\n      hasExpandedRowCtrl: false,\n    })\n  }\n\n  onRowOpen(openRowKeys) {\n    this.setState({ openRowKeys })\n  }\n\n  toggleExpand(record) {\n    const key = record.id\n    const { openRowKeys } = this.state\n    const index = openRowKeys.indexOf(key)\n    if (index > -1) {\n      openRowKeys.splice(index, 1)\n    } else {\n      openRowKeys.push(key)\n    }\n    this.setState({\n      openRowKeys,\n    })\n  }\n\n  rowProps(record, index) {\n    console.log('rowProps', record, index)\n    return { className: `next-myclass-${index}` }\n  }\n\n  onExpandedRowClick(record, index) {\n    console.log('onExpandedRowClick', record, index)\n  }\n\n  render() {\n    const renderTitle = (value, index, record) => {\n      return (\n        <div>\n          {value}\n          <span onClick={this.toggleExpand.bind(this, record)}>\n            index:{index} +++++\n          </span>\n        </div>\n      )\n    }\n    return (\n      <span>\n        <p>\n          {' '}\n          <Button onClick={this.disabledExpandedCol.bind(this)}>\n            {' '}\n            disable fourth row{' '}\n          </Button>{' '}\n          &nbsp;\n          <Button onClick={this.toggleCol.bind(this)}> hide + </Button>\n        </p>\n        <Table\n          dataSource={this.state.dataSource}\n          expandedIndexSimulate\n          isZebra={this.state.isZebra}\n          hasBorder={this.state.hasBorder}\n          onSort={this.onSort.bind(this)}\n          expandedRowRender={expandedRowRender}\n          expandedRowIndent={[1, 1]}\n          openRowKeys={this.state.openRowKeys}\n          getExpandedColProps={this.state.getExpandedColProps}\n          hasExpandedRowCtrl={this.state.hasExpandedRowCtrl}\n          onRowOpen={this.onRowOpen.bind(this)}\n          rowProps={this.rowProps.bind(this)}\n          onExpandedRowClick={this.onExpandedRowClick.bind(this)}\n        >\n          <Table.Column title=\"Id\" dataIndex=\"id\" sortable />\n          <Table.Column title=\"Title\" dataIndex=\"title\" cell={renderTitle} />\n          <Table.Column title=\"Time\" dataIndex=\"time\" width={200} />\n          <Table.Column cell={render} width={200} />\n        </Table>\n      </span>\n    )\n  }\n}\n\nexport const demoMeta = {\n  zhName: `可展开-复杂`,\n  zhDesc:\n    '可以通过 `expandedRowRender` 额外渲染行，但是会包含复杂的组件, 可通过 `expandedIndexSimulate` 设置 index 类型',\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}