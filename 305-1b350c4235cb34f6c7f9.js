(window.webpackJsonp=window.webpackJsonp||[]).push([[305],{DUWo:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return m})),t.d(n,"demoMeta",(function(){return u})),t.d(n,"_demoSrcFiles",(function(){return h}));var a=t("mXGw"),o=t.n(a),r=t("BgHK"),l=t("W0B4"),c=t.n(l);var s=r.Table.Header,i=r.Table.Cell,d=function(){for(var e=[],n=0;n<5;n++)e.push({title:"Quotation for 1PCS Nano "+(3+n)+".0 controller compatible",id:100306660940+n,time:2e3+n});return e},p=function(e,n){var t=e.columns,a=n.onChange,r=t[t.length-1].length;return o.a.createElement(s,e,o.a.createElement("tr",null,o.a.createElement(i,{colSpan:r},o.a.createElement("a",{onClick:function(){return a(!0)},href:"javascript:;"},"Select all")," ",o.a.createElement("a",{onClick:function(){return a(!1)},href:"javascript:;"},"Unselect all"))))};p.contextTypes={onChange:c.a.func};var m=function(e){var n,t;function a(){for(var n,t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];return(n=e.call.apply(e,[this].concat(a))||this).state={selectedKeys:[]},n.dataSource=d(),n.onChange=function(e){var t=[];e&&(t=n.dataSource.map((function(e){return e.id}))),n.onRowChange(t)},n.onRowChange=function(e){n.setState({selectedKeys:e})},n}t=e,(n=a).prototype=Object.create(t.prototype),n.prototype.constructor=n,n.__proto__=t;var l=a.prototype;return l.getChildContext=function(){return{onChange:this.onChange}},l.render=function(){return o.a.createElement("span",null,o.a.createElement(r.Table,{dataSource:this.dataSource,components:{Header:p},rowSelection:{selectedRowKeys:this.state.selectedKeys,onChange:this.onRowChange}},o.a.createElement(r.Table.Column,{title:"Id",dataIndex:"id"}),o.a.createElement(r.Table.Column,{title:"Title",dataIndex:"title"}),o.a.createElement(r.Table.Column,{title:"Time",dataIndex:"time"})))},a}(o.a.Component);m.childContextTypes={onChange:c.a.func};var u={zhName:"扩展",zhDesc:"通过Table暴露的子组件进行扩展"},h={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo18";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo18.js":'import React from \'react\'\nimport { Table } from \'@alicloud/console-components\'\nimport PropTypes from \'prop-types\'\n\nconst { Header, Cell } = Table\nconst generateDataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\n\nconst AppHeader = (props, context) => {\n  const { columns } = props\n  const { onChange } = context\n  const { length } = columns[columns.length - 1]\n  return (\n    <Header {...props}>\n      <tr>\n        <Cell colSpan={length}>\n          <a onClick={() => onChange(true)} href="javascript:;">\n            Select all\n          </a>\n          &nbsp;\n          <a onClick={() => onChange(false)} href="javascript:;">\n            Unselect all\n          </a>\n        </Cell>\n      </tr>\n    </Header>\n  )\n}\n\nAppHeader.contextTypes = {\n  onChange: PropTypes.func,\n}\n\nexport default class Demo18 extends React.Component {\n  static childContextTypes = {\n    onChange: PropTypes.func,\n  }\n\n  state = {\n    selectedKeys: [],\n  }\n\n  getChildContext() {\n    return {\n      onChange: this.onChange,\n    }\n  }\n\n  dataSource = generateDataSource()\n\n  onChange = checked => {\n    let selectedKeys = []\n    if (checked) {\n      selectedKeys = this.dataSource.map(item => item.id)\n    }\n    this.onRowChange(selectedKeys)\n  }\n\n  onRowChange = selectedKeys => {\n    this.setState({\n      selectedKeys,\n    })\n  }\n\n  render() {\n    return (\n      <span>\n        <Table\n          dataSource={this.dataSource}\n          components={{\n            Header: AppHeader,\n          }}\n          rowSelection={{\n            selectedRowKeys: this.state.selectedKeys,\n            onChange: this.onRowChange,\n          }}\n        >\n          <Table.Column title="Id" dataIndex="id" />\n          <Table.Column title="Title" dataIndex="title" />\n          <Table.Column title="Time" dataIndex="time" />\n        </Table>\n      </span>\n    )\n  }\n}\n\nexport const demoMeta = {\n  zhName: `扩展`,\n  zhDesc: `通过Table暴露的子组件进行扩展`,\n}\n',"demoMeta.json":'{"entryPath":"src/demo/demo18.js"}'}}}]);
//# sourceMappingURL=305-1b350c4235cb34f6c7f9.js.map