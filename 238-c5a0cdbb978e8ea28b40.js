(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{o8oW:function(n,e,t){"use strict";t.r(e),t.d(e,"demoMeta",(function(){return m})),t.d(e,"_demoSrcFiles",(function(){return d}));var o=t("mXGw"),r=t.n(o),a=t("BgHK"),c=t("PY4C"),s=t.n(c),l=t("UutA"),i=a.Select.AutoComplete,p=l.default.div.withConfig({displayName:"demo13__SWrapper",componentId:"sc-1pvq75e-0"})(["background-color:#f8f8f8;padding:16px;p{margin-top:0;}.next-select{margin-right:10px;vertical-align:middle;}"]);e.default=function(){var n=Object(o.useState)([]),e=n[0],t=n[1],c=Object(o.useRef)(null),l=Object(o.useCallback)((function(n){c.current&&clearTimeout(c.current),c.current=setTimeout((function(){s()("https://suggest.taobao.com/sug?code=utf-8&q="+n).then((function(n){return n.json()})).then((function(n){var e=n.result.map((function(n){return{label:r.a.createElement("div",null,r.a.createElement(a.Icon,{type:"picture",size:"small"})," ",n[0]),value:n[1],originLabel:n[0]}}));t(e)}))}),100)}),[]);return r.a.createElement(p,null,r.a.createElement(i,{onChange:l,filterLocal:!1,fillProps:"originLabel",placeholder:"search from taobao",dataSource:e}))};var m={zhName:"图文展示",zhDesc:"展示较为复杂的内容展示"},d={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo13";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"src/styles.less":"","src/demo/demo13.js":"import React, { useState, useRef, useCallback } from 'react'\nimport { Select, Icon } from '@alicloud/console-components'\nimport fetchJsonp from 'fetch-jsonp'\nimport styled from 'styled-components'\n\nconst { AutoComplete } = Select\n\nconst SWrapper = styled.div`\n  background-color: #f8f8f8;\n  padding: 16px;\n  p {\n    margin-top: 0;\n  }\n  .next-select {\n    margin-right: 10px;\n    vertical-align: middle;\n  }\n`\n\nconst Demo13 = () => {\n  const [dataSource, setDataSource] = useState([])\n  const searchTimeout = useRef(null)\n  const handleChange = useCallback(value => {\n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current)\n    }\n    searchTimeout.current = setTimeout(() => {\n      fetchJsonp(`https://suggest.taobao.com/sug?code=utf-8&q=${value}`)\n        .then(response => response.json())\n        .then(data => {\n          const newDataSource = data.result.map(item => {\n            return {\n              label: (\n                <div>\n                  <Icon type=\"picture\" size=\"small\" />\n                  &nbsp;{item[0]}\n                </div>\n              ),\n              value: item[1],\n              originLabel: item[0],\n            }\n          })\n          setDataSource(newDataSource)\n        })\n    }, 100)\n  }, [])\n\n  return (\n    <SWrapper>\n      <AutoComplete\n        onChange={handleChange}\n        filterLocal={false}\n        fillProps=\"originLabel\"\n        placeholder=\"search from taobao\"\n        dataSource={dataSource}\n      />\n    </SWrapper>\n  )\n}\nexport default Demo13\n\nexport const demoMeta = {\n  zhName: `图文展示`,\n  zhDesc: `展示较为复杂的内容展示`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo13.js"}'}}}]);
//# sourceMappingURL=238-c5a0cdbb978e8ea28b40.js.map