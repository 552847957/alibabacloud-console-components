{"version":3,"sources":["webpack:///../packages/component/src/components/grid/demo/demo8.js"],"names":["Row","Grid","Col","breakpoints","xxs","xs","s","m","l","xl","Demo8","componentDidMount","row","ReactDOM","findDOMNode","this","refs","fixCol","handleResize","point","innerWidth","window","document","documentElement","clientWidth","body","keys","Object","i","length","width","nextWidth","innerHTML","addEventListener","componentWillUnmount","removeEventListener","render","className","ref","fixed","fixedWidth","React","Component","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"0SAKQA,EAAaC,OAAbD,IAAKE,EAAQD,OAARC,IAEPC,EAAc,CAClBC,IAAK,IACLC,GAAI,IACJC,EAAG,IACHC,EAAG,IACHC,EAAG,KACHC,GAAI,MAGeC,E,wLACnBC,kBAAA,WACE,IAAMC,EAAMC,IAASC,YAAYC,KAAKC,KAAKC,QAC3CF,KAAKG,aAAe,WAIlB,IAHA,IAAIC,EAAQ,GACNC,EAAaC,OAAOD,YAAcE,SAASC,gBAAgBC,aAAeF,SAASG,KAAKD,YACxFE,EAAOC,OAAOD,KAAKvB,GAChByB,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,IAAME,EAAQ3B,EAAYuB,EAAKE,IACzBG,EAAY5B,EAAYuB,EAAKE,EAAI,IACvC,GAAIR,EAAaU,IAAUV,EAAaW,IAAcA,GAAY,CAClEZ,EAAQO,EAAKE,GACb,OAIET,IACFP,EAAIoB,UAAe7B,EAAYgB,GAA/B,OAGJE,OAAOY,iBAAiB,SAAUlB,KAAKG,cACvCH,KAAKG,gB,EAGPgB,qBAAA,WACEb,OAAOc,oBAAoB,SAAUpB,KAAKG,e,EAG5CkB,OAAA,WACE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,cAAf,WACA,kBAACrC,EAAD,KACE,kBAACE,EAAD,cAEF,yBAAKmC,UAAU,cAAf,qBACA,kBAACrC,EAAD,CAAKsC,IAAI,WAAWC,OAAK,GACvB,kBAACrC,EAAD,CAAKoC,IAAI,YAEX,yBAAKD,UAAU,cAAf,yBACA,kBAACrC,EAAD,CAAKwC,WAAW,KACd,kBAACtC,EAAD,iB,GAzCyBuC,IAAMC,WA+C1BC,EAAgBC","file":"166-b912335d313eed363308.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Grid } from '@alicloud/console-components'\nimport './demo8.less'\n\nconst { Row, Col } = Grid\n\nconst breakpoints = {\n  xxs: 320,\n  xs: 480,\n  s: 720,\n  m: 990,\n  l: 1200,\n  xl: 1500\n}\n\nexport default class Demo8 extends React.Component {\n  componentDidMount() {\n    const row = ReactDOM.findDOMNode(this.refs.fixCol)\n    this.handleResize = () => {\n      let point = ''\n      const innerWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      const keys = Object.keys(breakpoints)\n      for (let i = 0; i < keys.length; i++) {\n        const width = breakpoints[keys[i]]\n        const nextWidth = breakpoints[keys[i + 1]]\n        if (innerWidth > width && (innerWidth < nextWidth || !nextWidth)) {\n        point = keys[i]\n        break\n        }\n      }\n\n      if (point) {\n        row.innerHTML = `${breakpoints[point]}px`\n      }\n    }\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  render() {\n    return (\n      <div className=\"type-demo\">\n        <div className=\"demo-title\">Default</div>\n        <Row>\n          <Col>100%</Col>\n        </Row>\n        <div className=\"demo-title\">Set fixed to true</div>\n        <Row ref=\"fixedRow\" fixed>\n          <Col ref=\"fixCol\" />\n        </Row>\n        <div className=\"demo-title\">Set fixedWidth to 's'</div>\n        <Row fixedWidth=\"s\">\n          <Col>720px</Col>\n        </Row>\n      </div>\n    )\n  }\n};\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}