(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{he3o:function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return p})),t.d(n,"_demoSrcFiles",(function(){return b}));var o=t("mXGw"),r=t.n(o),c=t("BgHK"),l=t("UutA");function a(){var e=function(e,n){n||(n=e.slice(0));return e.raw=n,e}(["\n\t.my-context-menu {\n\t\twidth: 120px;\n\t}\n"]);return a=function(){return e},e}var s=c.Menu.SubMenu,i=c.Menu.Item,m=c.Menu.Divider,d=function(){console.log("item 被点击了")};n.default=function(){var e=Object(o.useState)([]),n=e[0],t=e[1],l=function(e){var n=e.filter((function(e){return["sub-1","sub-2"].indexOf(e)>-1}));t(n)};return r.a.createElement(u,{onContextMenu:function(e){e.preventDefault();var t=e.target.getBoundingClientRect(),o=t.top,a=t.left;console.log("selectedKeys:",n),c.Menu.create({target:e.target,offset:[e.clientX-a,e.clientY-o],className:"my-context-menu",popupClassName:"my-context-menu",onItemClick:d,selectedKeys:n,selectMode:"multiple",onSelect:l,children:[r.a.createElement(i,{key:"1"},"Option 1"),r.a.createElement(i,{key:"2"},"Option 2"),r.a.createElement(i,{key:"3"},"Option 3"),r.a.createElement(m,{key:"divider-1"}),r.a.createElement(s,{key:"sub-menu",label:"Sub menu"},r.a.createElement(i,{key:"sub-1"},"Sub option 1"),r.a.createElement(i,{key:"sub-2"},"Sub option 2")),r.a.createElement(i,{key:"4"},"Option 4"),r.a.createElement(m,{key:"divider-2"}),r.a.createElement(i,{key:"5"},"Option 5")]})}},r.a.createElement(y,null),"Right click here to see the context menu!")};var p={zhName:"创建上下文菜单",zhDesc:"展示如何创建自定义的上下文菜单。"},u=l.default.div.withConfig({displayName:"demo8__SWrapper",componentId:"sc-1uijmrq-0"})(["width:500px;height:200px;line-height:200px;text-align:center;background:#ddd;border:1px solid black;"]),y=Object(l.createGlobalStyle)(a()),b={"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"src/styles.less":"","src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo8";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/demo/demo8.js":"import React, { useState } from 'react'\nimport { Menu } from '@alicloud/console-components'\nimport styled, { createGlobalStyle } from 'styled-components'\n\nconst { SubMenu, Item, Divider } = Menu\n\nconst handleItemClick = () => {\n  console.log('item 被点击了')\n}\n\nconst Demo = () => {\n  const [selectedKeys, setSelectedKeys] = useState([])\n\n  const handleSelect = keys => {\n    const newKeys = keys.filter(key => {\n      return ['sub-1', 'sub-2'].indexOf(key) > -1\n    })\n    setSelectedKeys(newKeys)\n  }\n\n  const createContextMenu = e => {\n    e.preventDefault()\n\n    const { target } = e\n    const { top, left } = target.getBoundingClientRect()\n    console.log('selectedKeys:', selectedKeys)\n\n    Menu.create({\n      target: e.target,\n      offset: [e.clientX - left, e.clientY - top],\n      className: 'my-context-menu',\n      popupClassName: 'my-context-menu',\n      onItemClick: handleItemClick,\n      selectedKeys,\n      selectMode: 'multiple',\n      onSelect: handleSelect,\n      children: [\n        <Item key=\"1\">Option 1</Item>,\n        <Item key=\"2\">Option 2</Item>,\n        <Item key=\"3\">Option 3</Item>,\n        <Divider key=\"divider-1\" />,\n        <SubMenu key=\"sub-menu\" label=\"Sub menu\">\n          <Item key=\"sub-1\">Sub option 1</Item>\n          <Item key=\"sub-2\">Sub option 2</Item>\n        </SubMenu>,\n        <Item key=\"4\">Option 4</Item>,\n        <Divider key=\"divider-2\" />,\n        <Item key=\"5\">Option 5</Item>,\n      ],\n    })\n  }\n\n  return (\n    <SWrapper onContextMenu={createContextMenu}>\n      <MyContextMenuStyle />\n      Right click here to see the context menu!\n    </SWrapper>\n  )\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: '创建上下文菜单',\n  zhDesc: `展示如何创建自定义的上下文菜单。`,\n}\n\nconst SWrapper = styled.div`\n  width: 500px;\n  height: 200px;\n  line-height: 200px;\n  text-align: center;\n  background: #ddd;\n  border: 1px solid black;\n`\nconst MyContextMenuStyle = createGlobalStyle`\n\t.my-context-menu {\n\t\twidth: 120px;\n\t}\n`\n","demoMeta.json":'{"entryPath":"src/demo/demo8.js"}'}}}]);
//# sourceMappingURL=173-7d60f69143dd2ea3c2d6.js.map