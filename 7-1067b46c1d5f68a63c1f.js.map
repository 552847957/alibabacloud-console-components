{"version":3,"sources":["webpack:///../packages/rc-intl/es/factory.js","webpack:///../packages/rc-intl/es/utils/extractWindComponentMessages.js","webpack:///../packages/rc-intl/es/utils/useIntlContext/createIntlProvider.js","webpack:///../packages/rc-intl/es/utils/useIntlContext/withIntl.js","webpack:///../packages/rc-intl/es/utils/displayName.js","webpack:///../packages/rc-intl/es/utils/useIntlContext/withRcIntl.js","webpack:///../packages/rc-intl/es/react.js","webpack:///../packages/rc-intl/es/index.js","webpack:///../packages/rc-intl/es/Store.js","webpack:///../packages/rc-intl/es/presets/date.js","webpack:///../packages/rc-intl/es/utils/getLocale.js","webpack:///../packages/rc-intl/es/IntlBase.js","webpack:///../packages/rc-intl/stories/basic/index.tsx","webpack:///../packages/rc-intl/es/utils/escapeValues.js","webpack:///../packages/rc-intl/es/VanillaIntl.js","webpack:///../packages/rc-intl/es/ReactIntl.js"],"names":["create","instance","Object","assign","formatMessage","bind","set","resetStore","setLocale","setMessages","getLocale","getMessages","message","html","formatHTMLMessage","date","formatDate","number","formatNumber","defaultOptions","namespace","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","compatLocale","locale","createIntlProvider","intl","props","obj","result","_props$messages","messages","_props$locale","_props$baseComponentK","baseComponentKeyPrefix","_props$configProvider","configProviderProps","children","baseComponentMessages","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","rawMessages","options","undefined","prefix","concat","indexOf","replace","extractWindComponentMessages","momentLocale","React","createElement","Provider","extend","_props$messages2","ConfigProvider","_extends","Fragment","withIntl","mapIntlToProps","WrappedComponent","HOC","hocProps","Consumer","value","injectProps","displayName","wrapperName","name","getDisplayName","wrapDisplayName","withRcIntl","_ref","_ref$namespace","_ref$defaultMessages","defaultMessages","_ref$defaultLocaleMes","defaultLocaleMessages","componentName","flattenedMessages","keyPrefix","_hocProps$messages","propsMessages","_ref2","_ref2$intl","globIntl","_ref2$messages","globMessages","_ref2$locale","pickedMessages","forOwn","get","pickMessageSuccess","isPlainObject","warning","String","componentMessages","intlInstance","ReactIntl","isCrossModules","IntlProvider","withProvider","providerProps","intlExtended","glob","window","global","Store","_classCallCheck","this","_store","_createClass","year","month","day","time","hour12","hour","minute","second","dateTime","presets","dateTimeWithTimeZone","timeZoneName","fromHtml","document","getElementsByTagName","getAttribute","err","console","warn","fromNavigator","navigator","language","fromGlobalIdentifier","captures","isArray","len","identifier","fromCookie","Cookie","_options$globalIdenti","globalIdentifier","_options$cookie","cookie","_options$html","_options$navigator","_options$fallback","fallback","_options$transformer","transformer","kebabCase","IntlBase","data","_options$isCrossModul","restOptions","_objectWithoutProperties","LOCALE_ACCESS_KEY","MESSAGES_ACCESS_KEY","determineLocale","opts","isNil","dateFormatPreset","Intl","DateTimeFormat","format","NumberFormat","ALIYUN_CONSOLE_CONFIG","LANG","RComponentWithIntl","intl0","normalTextWithNonRuntime","App","state","isPanelVisible","togglePanel","setState","prevState","render","type","current","Date","count","id","defaultMessage","values","vars","readOnly","text","Component","_demoSrcFiles","__demo_loader_placeholder__","escapeOnlyStringValue","escape","escapeValues","mapValues","VanillaIntl","_IntlBase","_possibleConstructorReturn","_getPrototypeOf","_inherits","_getExactOptionsForFo","getExactOptionsForFormat","exactKey","exactDefaultMessage","exactValues","prototype","toString","call","IntlMessageFormat","_getExactOptionsForFo2","escapedValues","vals","ReferenceError","preferString","valuesForSuper","exactId","exactPreferString","uid","Math","floor","random","generateToken","createTokenGenerator","valuesMap","tokenDelimiter","isEmpty","isValidElement","token","cloneElement","hasReactElementValue","nodes","split","map","part","_getExactOptionsForVa","getExactOptionsForVanillaFormat","__html","dangerouslySetInnerHTML"],"mappings":"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","file":"7-1067b46c1d5f68a63c1f.js","sourcesContent":["var create = function create(instance) {\n  var intl = Object.assign(instance.formatMessage.bind(instance), {\n    set: instance.set.bind(instance),\n    resetStore: instance.resetStore.bind(instance),\n    setLocale: instance.setLocale.bind(instance),\n    setMessages: instance.setMessages.bind(instance),\n    getLocale: instance.getLocale.bind(instance),\n    getMessages: instance.getMessages.bind(instance),\n    message: instance.formatMessage.bind(instance),\n    html: instance.formatHTMLMessage.bind(instance),\n    date: instance.formatDate.bind(instance),\n    number: instance.formatNumber.bind(instance)\n  });\n  return intl;\n};\n\nexport { create };","import set from 'lodash/set';\nvar defaultOptions = {\n  namespace: '@wind_v2.base'\n};\nexport default function extractWindComponentMessages(rawMessages) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultOptions;\n  var result = {};\n  var namespace = options.namespace;\n  var prefix = \"\".concat(namespace, \".\");\n  Object.keys(rawMessages).forEach(function (key) {\n    if (key.indexOf(prefix) === 0) {\n      set(result, key.replace(prefix, ''), rawMessages[key]);\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport set from 'lodash/set';\nimport { ConfigProvider } from '@alicloud/console-components';\nimport { Provider } from '@alicloud/console-components-intl-context';\nimport extractWindComponentMessages from '../extractWindComponentMessages';\n\n/**\n * Compatible `locale` to moment's locale format\n * moment's doesn't recognize regionless chinese locale like `zh`\n * @param {String} locale\n * @return {String}\n */\nvar compatLocale = function compatLocale(locale) {\n  return locale === 'zh' ? 'zh-cn' : locale;\n}; // TODO: 把normalize放在set的时候\n\n\nvar normalize = function normalize(obj) {\n  var result = {};\n  Object.keys(obj).forEach(function (key) {\n    set(result, key, obj[key]);\n  });\n  return result;\n};\n/* eslint-disable react/static-property-placement */\n\n\nvar createIntlProvider = function createIntlProvider(intl) {\n  var IntlProvider = function IntlProvider(props) {\n    var _props$messages = props.messages,\n        messages = _props$messages === void 0 ? intl.getMessages() || {} : _props$messages,\n        _props$locale = props.locale,\n        locale = _props$locale === void 0 ? intl.getLocale() : _props$locale,\n        _props$baseComponentK = props.baseComponentKeyPrefix,\n        baseComponentKeyPrefix = _props$baseComponentK === void 0 ? '@wind_v2.base' : _props$baseComponentK,\n        _props$configProvider = props.configProviderProps,\n        configProviderProps = _props$configProvider === void 0 ? {} : _props$configProvider,\n        children = props.children;\n\n    var extendProviderValue = function extendProviderValue() {\n      var _props$messages2 = props.messages,\n          rawMessages = _props$messages2 === void 0 ? intl.getMessages() || {} : _props$messages2;\n      return {\n        rawMessages: rawMessages,\n        intl: intl\n      };\n    };\n\n    var baseComponentMessages = _objectSpread({}, extractWindComponentMessages(messages, {\n      namespace: baseComponentKeyPrefix\n    }), {\n      momentLocale: locale && compatLocale(locale)\n    });\n\n    return React.createElement(Provider, {\n      locale: locale,\n      messages: normalize(messages),\n      extend: extendProviderValue\n    }, React.createElement(ConfigProvider, _extends({}, configProviderProps, {\n      locale: baseComponentMessages\n    }), React.createElement(React.Fragment, null, children)));\n  };\n\n  IntlProvider.propTypes = {\n    locale: PropTypes.string,\n    messages: PropTypes.objectOf(PropTypes.any),\n    baseComponentKeyPrefix: PropTypes.string,\n    configProviderProps: PropTypes.objectOf(PropTypes.any)\n  };\n  return IntlProvider;\n};\n\nexport default createIntlProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { Consumer } from '@alicloud/console-components-intl-context';\nimport { wrapDisplayName } from '../displayName';\n/**\n * @description\n * A factory that create HOC to consume the intl-context.\n * The component wrapped by the HOC will get intl-related values from props.\n * Other wind components use intl-context to read localization-related config.\n */\n\nvar withIntl = function withIntl(mapIntlToProps) {\n  return function (WrappedComponent) {\n    var HOC = function HOC(props) {\n      var hocProps = props;\n      return React.createElement(Consumer, null, function (value) {\n        var injectProps = mapIntlToProps ? mapIntlToProps(value, hocProps) : value;\n        return React.createElement(WrappedComponent, _extends({}, hocProps, injectProps));\n      });\n    };\n\n    HOC.displayName = wrapDisplayName(WrappedComponent, 'withIntl');\n    return HOC;\n  };\n};\n\nexport default withIntl;","// https://reactjs.org/docs/higher-order-components.html#convention-wrap-the-display-name-for-easy-debugging\nexport function getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nexport function wrapDisplayName(WrappedComponent, wrapperName) {\n  return \"\".concat(wrapperName, \"(\").concat(getDisplayName(WrappedComponent), \")\");\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport forOwn from 'lodash/forOwn';\nimport isPlainObject from 'lodash/isPlainObject';\nimport ReactIntl from '../../ReactIntl';\nimport withIntl from './withIntl';\nimport { create } from '../../factory';\n\nvar getPrefixedMessages = function getPrefixedMessages(messages, prefix) {\n  var flattenedMessages = {};\n  forOwn(messages, function (value, key) {\n    set(flattenedMessages, key, value);\n  });\n  return get(flattenedMessages, prefix);\n};\n/**\n * @public\n * Other wind components use intl-context to read localization-related config.\n * This is how they consume intl-context.\n */\n\n\nvar withRcIntl = function withRcIntl(_ref) {\n  var _ref$namespace = _ref.namespace,\n      namespace = _ref$namespace === void 0 ? '@wind_v2.rc' : _ref$namespace,\n      _ref$defaultMessages = _ref.defaultMessages,\n      defaultMessages = _ref$defaultMessages === void 0 ? {} : _ref$defaultMessages,\n      _ref$defaultLocaleMes = _ref.defaultLocaleMessages,\n      defaultLocaleMessages = _ref$defaultLocaleMes === void 0 ? {} : _ref$defaultLocaleMes,\n      componentName = _ref.componentName;\n  return withIntl(function (value, hocProps) {\n    var keyPrefix = \"\".concat(namespace, \".\").concat(componentName);\n    var _hocProps$messages = hocProps.messages,\n        propsMessages = _hocProps$messages === void 0 ? {} : _hocProps$messages;\n\n    var _ref2 = value || {},\n        _ref2$intl = _ref2.intl,\n        globIntl = _ref2$intl === void 0 ? undefined : _ref2$intl,\n        _ref2$messages = _ref2.messages,\n        globMessages = _ref2$messages === void 0 ? {} : _ref2$messages,\n        _ref2$locale = _ref2.locale,\n        locale = _ref2$locale === void 0 ? 'en' : _ref2$locale;\n\n    var pickedMessages = getPrefixedMessages(globMessages, keyPrefix);\n    var pickMessageSuccess = isPlainObject(pickedMessages);\n\n    if (!pickMessageSuccess) {\n      warning(false, \"[@ali/wind-intl] Messages[\".concat(keyPrefix, \"] should be an object, but get \").concat(String(pickedMessages)));\n    }\n\n    var componentMessages = _objectSpread({}, defaultLocaleMessages[locale] || {}, {}, defaultMessages, {}, pickMessageSuccess ? pickedMessages : {}, {}, propsMessages);\n\n    var intlInstance = new ReactIntl({\n      locale: locale,\n      messages: componentMessages\n    }, {\n      isCrossModules: false\n    });\n    var intl = create(intlInstance);\n    return {\n      globIntl: globIntl,\n      globMessages: globMessages,\n      intl: intl,\n      locale: locale,\n      messages: componentMessages\n    };\n  });\n};\n\nexport default withRcIntl;","import ReactIntl from './ReactIntl';\nimport { create } from './factory';\nvar intlInstance = new ReactIntl();\nvar intl = create(intlInstance);\nexport default intl;","import React from 'react';\nimport { Consumer } from '@alicloud/console-components-intl-context';\nimport intl from './react';\nimport createIntlProvider from './utils/useIntlContext/createIntlProvider';\n\n/**\n * @public\n * IntlProvider use the config of global intl as default\n */\nvar IntlProvider = createIntlProvider(intl);\n/**\n * @public\n * A factory that create HOC to provide value to the intl-context.\n * The component subtree under this HOC can get the provided value from intl-context, which is a smaller influence compared to `intl.set()` in the top level.\n * User can use this to config the localization of wind components, which consume intl-context.\n * Notice that the top level intl instance will always use the top level config.\n */\n\nvar withProvider = function withProvider(providerProps) {\n  return function (WrappedComponent) {\n    var HOC = function HOC(props) {\n      return React.createElement(IntlProvider, providerProps, React.createElement(WrappedComponent, props));\n    };\n\n    HOC.displayName = \"withIntlProvider(\".concat(WrappedComponent.displayName || 'UnknownComponent', \")\");\n    return HOC;\n  };\n};\n/**\n * @public\n * These tools are only useful for users that use other wind components.\n * For users that don't, use intl instance （from ./react.ts） directly.\n */\n\n\nexport var intlExtended = Object.assign(intl, {\n  IntlProvider: IntlProvider,\n  withProvider: withProvider,\n  Consumer: Consumer\n});\nexport default intlExtended;\nexport { intlExtended as intl, IntlProvider, withProvider, Consumer };\nexport { default as ReactIntl } from './ReactIntl';\nexport { default as IntlBase } from './IntlBase';\nexport * from './types';\nexport { default as presets } from './presets/date';\nexport * from './presets/date';\nexport { default as withRcIntl } from './utils/useIntlContext/withRcIntl';","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nvar glob = function () {\n  if (typeof window !== 'undefined') return window;\n  if (typeof global !== 'undefined') return global;\n  return {};\n}();\n\nvar WIND_INTL_STORE = '__WIND_INTL_STORE__';\n\nif (!glob[WIND_INTL_STORE]) {\n  glob[WIND_INTL_STORE] = {};\n}\n\nvar Store =\n/*#__PURE__*/\nfunction () {\n  _createClass(Store, null, [{\n    key: \"create\",\n    value: function create() {\n      var isCrossModules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      return new Store(isCrossModules);\n    }\n  }]);\n\n  function Store() {\n    var isCrossModules = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    _classCallCheck(this, Store);\n\n    this._store = isCrossModules ? glob[WIND_INTL_STORE] : {};\n  }\n\n  _createClass(Store, [{\n    key: \"set\",\n    value: function set(key, value) {\n      this._store[key] = value;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._store[key];\n    }\n  }]);\n\n  return Store;\n}();\n\nexport default Store;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar date = {\n  year: 'numeric',\n  month: 'short',\n  day: 'numeric'\n};\nvar time = {\n  hour12: false,\n  hour: '2-digit',\n  minute: '2-digit',\n  second: '2-digit'\n};\n\nvar dateTime = _objectSpread({}, date, {}, time);\n\nvar dateTimeWithTimeZone = _objectSpread({}, dateTime, {\n  timeZoneName: 'long'\n});\n/** @public */\n\n\nvar presets = {\n  date: date,\n  time: time,\n  dateTime: dateTime,\n  dateTimeWithTimeZone: dateTimeWithTimeZone\n};\n/**\n * @public\n */\n\nexport default presets;","/* eslint-disable no-console */\nimport * as Cookie from 'js-cookie';\nimport get from 'lodash/get';\nimport isArray from 'lodash/isArray';\nimport kebabCase from 'lodash/kebabCase';\n\nvar fromHtml = function fromHtml() {\n  var result;\n\n  try {\n    result = document.getElementsByTagName('html')[0].getAttribute('lang');\n  } catch (err) {\n    console.warn(err);\n  }\n\n  return result;\n};\n\nvar fromNavigator = function fromNavigator() {\n  var result;\n\n  try {\n    result = window.navigator.language;\n  } catch (err) {\n    console.warn(err);\n  }\n\n  return result;\n};\n\nvar fromGlobalIdentifier = function fromGlobalIdentifier(captures) {\n  if (typeof captures === 'string') {\n    return fromGlobalIdentifier([captures]);\n  }\n\n  if (!isArray(captures)) {\n    return;\n  }\n\n  for (var i = 0, len = captures.length; i < len; i++) {\n    var identifier = captures[i];\n\n    if (typeof identifier === 'string') {\n      var value = get(window, identifier);\n\n      if (value) {\n        return value;\n      }\n    }\n  }\n};\n\nvar fromCookie = function fromCookie(captures) {\n  if (typeof captures === 'string') {\n    return fromCookie([captures]);\n  }\n\n  if (!isArray(captures)) {\n    return;\n  }\n\n  for (var i = 0, len = captures.length; i < len; i++) {\n    var key = captures[i];\n\n    if (typeof key === 'string') {\n      var value = Cookie.get(key);\n\n      if (value) {\n        return value;\n      }\n    }\n  }\n};\n\nvar DEFAULT_FALLBACK_LOCALE = 'en';\n\nvar getLocale = function getLocale() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$globalIdenti = options.globalIdentifier,\n      globalIdentifier = _options$globalIdenti === void 0 ? [// LOCALE is not support yet\n  'ALIYUN_CONSOLE_CONFIG.LOCALE', 'ALIYUN_CONSOLE_CONFIG.LANG'] : _options$globalIdenti,\n      _options$cookie = options.cookie,\n      cookie = _options$cookie === void 0 ? [// aliyun_locale is not support yet\n  'aliyun_locale', 'aliyun_lang'] : _options$cookie,\n      _options$html = options.html,\n      html = _options$html === void 0 ? true : _options$html,\n      _options$navigator = options.navigator,\n      navigator = _options$navigator === void 0 ? true : _options$navigator,\n      _options$fallback = options.fallback,\n      fallback = _options$fallback === void 0 ? DEFAULT_FALLBACK_LOCALE : _options$fallback,\n      _options$transformer = options.transformer,\n      transformer = _options$transformer === void 0 ? kebabCase : _options$transformer;\n  return transformer(fromGlobalIdentifier(globalIdentifier) || fromCookie(cookie) || (html ? fromHtml() : null) || (navigator ? fromNavigator() : null) || fallback || DEFAULT_FALLBACK_LOCALE);\n};\n\nexport default getLocale;","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport isNil from 'lodash/isNil';\nimport Store from './Store';\nimport getLocale from './utils/getLocale';\nimport dateFormatPreset from './presets/date';\n\n/**\n * @public\n */\nvar IntlBase =\n/*#__PURE__*/\nfunction () {\n  _createClass(IntlBase, null, [{\n    key: \"LOCALE_ACCESS_KEY\",\n    get: function get() {\n      return 'locale';\n    }\n  }, {\n    key: \"MESSAGES_ACCESS_KEY\",\n    get: function get() {\n      return 'messages';\n    }\n  }]);\n\n  function IntlBase() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, IntlBase);\n\n    var _options$isCrossModul = options.isCrossModules,\n        isCrossModules = _options$isCrossModul === void 0 ? true : _options$isCrossModul,\n        restOptions = _objectWithoutProperties(options, [\"isCrossModules\"]);\n\n    var locale = data.locale,\n        messages = data.messages;\n    this._store = Store.create(isCrossModules);\n\n    if (locale || messages) {\n      this.set({\n        locale: locale,\n        messages: messages\n      }, restOptions);\n    }\n  }\n\n  _createClass(IntlBase, [{\n    key: \"resetStore\",\n    value: function resetStore(isCrossModules) {\n      this._store = Store.create(isCrossModules);\n    }\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this._store.set(IntlBase.LOCALE_ACCESS_KEY, locale);\n    }\n  }, {\n    key: \"getLocale\",\n    value: function getLocale() {\n      return this._store.get(IntlBase.LOCALE_ACCESS_KEY);\n    }\n  }, {\n    key: \"setMessages\",\n    value: function setMessages(messages) {\n      this._store.set(IntlBase.MESSAGES_ACCESS_KEY, messages);\n    }\n  }, {\n    key: \"getMessages\",\n    value: function getMessages() {\n      return this._store.get(IntlBase.MESSAGES_ACCESS_KEY);\n    }\n  }, {\n    key: \"set\",\n    value: function set(data) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var locale = data.locale,\n          messages = data.messages;\n      var determineLocale = options.determineLocale;\n\n      if (locale) {\n        this.setLocale(locale);\n      } else if (determineLocale) {\n        this.setLocale(getLocale(determineLocale));\n      }\n\n      if (messages) {\n        this.setMessages(messages);\n      }\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(value, options) {\n      var result = String(value);\n      var opts;\n\n      if (isNil(options)) {\n        opts = dateFormatPreset.dateTime;\n      } else if (typeof options === 'string') {\n        opts = get(dateFormatPreset, options, dateFormatPreset.dateTime);\n      } else {\n        opts = options;\n      }\n\n      try {\n        result = new Intl.DateTimeFormat(this.getLocale(), opts).format(value);\n      } catch (err) {\n        warning(false, err.message || 'Uncaught error');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(value, options) {\n      var result = String(value);\n\n      try {\n        result = new Intl.NumberFormat(this.getLocale(), options).format(value);\n      } catch (err) {\n        warning(false, err.message || 'Uncaught error');\n      }\n\n      return result;\n    }\n  }]);\n\n  return IntlBase;\n}();\n\nexport default IntlBase;","import React, { Component } from 'react'\nimport { Pagination, Input } from '@alicloud/console-components'\nimport intl, {\n  withProvider,\n  withRcIntl,\n  IWindIntlPublic,\n} from '@alicloud/console-components-intl'\n\n/* eslint-disable */\nif (typeof window !== 'undefined')\n  (window as any).ALIYUN_CONSOLE_CONFIG = {\n    LANG: 'zh-Hant',\n  }\n\nconst messages = {\n  'text.normal': 'This is a normal text.',\n  'text.normal.with.non.runtime': 'This is a normal text with non-runtime.',\n  'text.with.vars': 'This is a { type } text.',\n  'text.with.condition.vars': `This is a { type, select,\n      simple { SIMPLE }\n      vars { VARIABLES-INCLUDES }\n      cond { CONDITIONAL-VARIABLES-INCLUDES }\n    } text.`,\n  'text.with.date': 'Current datetime is { current, date }',\n  'text.with.number.and.plural': `You have { count, plural,\n      =0 { no messages }\n      =1 { only one message }\n      =2 { two messages }\n      other { # messages }\n    }`,\n  'text.with.html': 'This is a <strong>{text}</strong> text.',\n  '@wind_v2.base.Pagination.next': 'Next page',\n  '@wind_v2.rc.RComponent.test': 'withRcIntl works!',\n}\n\nconst RComponent: React.FC<{ intl: IWindIntlPublic }> = ({ intl: intl0 }) => (\n  <>\n    <p>{intl0('test')}</p>\n  </>\n)\nconst RComponentWithIntl = withRcIntl({\n  componentName: 'RComponent',\n})(RComponent)\n\nintl.set({\n  messages,\n  locale: 'en-US',\n})\n\nconst normalTextWithNonRuntime = intl('text.normal.with.non.runtime')\n\ninterface IAppState {\n  isPanelVisible: boolean\n}\n\nclass App extends Component<{}, IAppState> {\n  state = {\n    isPanelVisible: false,\n  }\n\n  togglePanel = () => {\n    this.setState(prevState => ({\n      isPanelVisible: !prevState.isPanelVisible,\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <p>{intl('text.normal')}</p>\n        <p>{normalTextWithNonRuntime}</p>\n        <p>{intl('text.with.vars', { type: 'variables-includes' })}</p>\n        <p>\n          {intl('text.with.vars', {\n            type: <strong>component-variables-includes</strong>,\n          })}\n        </p>\n        <p>{intl('text.with.condition.vars', { type: 'simple' })}</p>\n        <p>{intl('text.with.condition.vars', { type: 'vars' })}</p>\n        <p>{intl('text.with.condition.vars', { type: 'cond' })}</p>\n        <p>{intl('text.with.date', { current: new Date() })}</p>\n        <p>{intl('text.with.number.and.plural', { count: 0 })}</p>\n        <p>{intl('text.with.number.and.plural', { count: 1 })}</p>\n        <p>{intl('text.with.number.and.plural', { count: 2 })}</p>\n        <p>{intl('text.with.number.and.plural', { count: 100 })}</p>\n        <p>{intl('text.with.number.and.plural', { count: 1000 })}</p>\n        <p>\n          {intl({\n            id: 'text.with.default.message',\n            defaultMessage: 'This is a text with default message.',\n          })}\n        </p>\n        <p>\n          {intl({\n            id: 'text.with.default.message.and.vars',\n            defaultMessage: 'This is a text with {defaultMessage} and {vars}.',\n            values: {\n              defaultMessage: <strong>default message</strong>,\n              vars: <Input value=\"variables\" readOnly />,\n            },\n          })}\n        </p>\n        <p>{intl.html('text.with.html', { text: 'html-include' })}</p>\n        <p>{intl.date(new Date())}</p>\n        <p>{intl.date(new Date(), 'date')}</p>\n        <p>{intl.date(new Date(), 'time')}</p>\n        <p>{intl.date(new Date(), 'dateTimeWithTimeZone')}</p>\n        <p>{intl.number(1000.099)}</p>\n        <Pagination />\n        <RComponentWithIntl />\n      </>\n    )\n  }\n}\n\nexport default withProvider()(App)\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__","import mapValues from 'lodash/mapValues';\nimport escape from 'escape-html';\n\nvar escapeOnlyStringValue = function escapeOnlyStringValue(value) {\n  if (typeof value === 'string') {\n    return escape(value);\n  }\n\n  return value;\n};\n\nvar escapeValues = function escapeValues(values) {\n  return mapValues(values, escapeOnlyStringValue);\n};\n\nexport default escapeValues;","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport warning from 'warning';\nimport IntlMessageFormat from 'intl-messageformat';\nimport get from 'lodash/get';\nimport isNil from 'lodash/isNil';\nimport isPlainObject from 'lodash/isPlainObject';\nimport escapeValues from './utils/escapeValues';\nimport IntlBase from './IntlBase';\n/* eslint-disable no-dupe-class-members */\n\nvar VanillaIntl =\n/*#__PURE__*/\nfunction (_IntlBase) {\n  _inherits(VanillaIntl, _IntlBase);\n\n  function VanillaIntl() {\n    _classCallCheck(this, VanillaIntl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VanillaIntl).apply(this, arguments));\n  }\n\n  _createClass(VanillaIntl, [{\n    key: \"formatMessage\",\n    value: function formatMessage(key, values) {\n      var _getExactOptionsForFo = getExactOptionsForFormat(key, values),\n          exactKey = _getExactOptionsForFo.exactKey,\n          exactDefaultMessage = _getExactOptionsForFo.exactDefaultMessage,\n          exactValues = _getExactOptionsForFo.exactValues;\n\n      var messages = this.getMessages();\n      var message = get(messages, exactKey, exactDefaultMessage);\n\n      if (isNil(message)) {\n        if (!messages) {\n          warning(false, \"[@ali/wind-intl] Cannot format \\\"\".concat(exactKey, \"\\\" before messages is set.\") + \"will resolve this message with key: \".concat(exactKey));\n        }\n\n        warning(false, \"[@ali/wind-intl] Cannot read \".concat(exactKey, \" from messages, \") + \"will resolve this message with key: \".concat(exactKey));\n        return exactKey;\n      }\n\n      if (typeof message !== 'string') {\n        warning(false, \"[@ali/wind-intl] Expect message to be a string, but get \".concat(Object.prototype.toString.call(message), \". will resolve this message with key: \").concat(exactKey));\n        return exactKey;\n      }\n\n      var locale = this.getLocale();\n\n      if (!locale) {\n        warning(false, \"[@ali/wind-intl] Locale is not set. Using default locale.\");\n      }\n\n      var result = exactKey;\n\n      try {\n        result = new IntlMessageFormat(message, locale).format(exactValues);\n      } catch (err) {\n        warning(false, err.message || 'Uncaught error');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"formatHTMLMessage\",\n    value: function formatHTMLMessage(key, values) {\n      var _getExactOptionsForFo2 = getExactOptionsForFormat(key, values),\n          exactKey = _getExactOptionsForFo2.exactKey,\n          exactDefaultMessage = _getExactOptionsForFo2.exactDefaultMessage,\n          exactValues = _getExactOptionsForFo2.exactValues;\n\n      var escapedValues = exactValues && escapeValues(exactValues);\n      return this.formatMessage({\n        id: exactKey,\n        defaultMessage: exactDefaultMessage,\n        values: escapedValues\n      });\n    }\n  }]);\n\n  return VanillaIntl;\n}(IntlBase);\n\nexport default VanillaIntl;\n/**\n * @description get exact option for multi-signature method\n */\n\nexport function getExactOptionsForFormat(key, values) {\n  var exactKey;\n  var exactDefaultMessage;\n  var exactValues = isPlainObject(values) ? values : {};\n\n  if (typeof key === 'string') {\n    exactKey = key;\n  } else {\n    var id = key.id,\n        defaultMessage = key.defaultMessage,\n        vals = key.values;\n\n    if (typeof id !== 'string') {\n      throw new ReferenceError(\"[@ali/wind-intl] Expect id to be a string but get a \".concat(Object.prototype.toString.call(id), \".\"));\n    }\n\n    exactKey = id;\n    exactDefaultMessage = defaultMessage;\n\n    if (isPlainObject(vals)) {\n      exactValues = vals;\n    }\n  }\n\n  return {\n    exactKey: exactKey,\n    exactDefaultMessage: exactDefaultMessage,\n    exactValues: exactValues\n  };\n}","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\n\n/* eslint-disable react/no-danger */\nimport React, { isValidElement, cloneElement } from 'react';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isEmpty from 'lodash/isEmpty';\nimport mapValues from 'lodash/mapValues';\nimport VanillaIntl, { getExactOptionsForFormat as getExactOptionsForVanillaFormat } from './VanillaIntl';\nimport IntlBase from './IntlBase';\n\nvar createTokenGenerator = function createTokenGenerator(uid) {\n  var i = 0;\n  return function () {\n    i += 1;\n    return \"\".concat(uid, \"_\").concat(i);\n  };\n};\n/* eslint-disable no-dupe-class-members */\n\n/** @public */\n\n\nvar ReactIntl =\n/*#__PURE__*/\nfunction (_IntlBase) {\n  _inherits(ReactIntl, _IntlBase);\n\n  function ReactIntl() {\n    _classCallCheck(this, ReactIntl);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReactIntl).apply(this, arguments));\n  }\n\n  _createClass(ReactIntl, [{\n    key: \"formatMessage\",\n    value: function formatMessage(key, values, preferString) {\n      var _getExactOptionsForFo = getExactOptionsForFormat(key, values, preferString),\n          exactId = _getExactOptionsForFo.exactId,\n          exactDefaultMessage = _getExactOptionsForFo.exactDefaultMessage,\n          exactValues = _getExactOptionsForFo.exactValues,\n          exactPreferString = _getExactOptionsForFo.exactPreferString;\n\n      var uid = Math.floor(Math.random() * 0x10000000000).toString(16);\n      var generateToken = createTokenGenerator(uid);\n      var valuesMap = {};\n      var tokenDelimiter = \"_@@__#\".concat(uid, \"__@@_\");\n      var valuesForSuper;\n\n      if (isPlainObject(exactValues) && !isEmpty(exactValues)) {\n        valuesForSuper = mapValues(exactValues, function (value) {\n          if (isValidElement(value)) {\n            var token = generateToken(); // TODO: this random key break snapshot testing\n\n            valuesMap[token] = cloneElement(value, {\n              key: token\n            });\n            return \"\".concat(tokenDelimiter).concat(token).concat(tokenDelimiter);\n          }\n\n          return value;\n        });\n      } else {\n        valuesForSuper = {};\n      }\n\n      var message = VanillaIntl.prototype.formatMessage.call(this, {\n        id: exactId,\n        defaultMessage: exactDefaultMessage,\n        values: valuesForSuper\n      });\n      var hasReactElementValue = !isEmpty(valuesMap);\n\n      if (exactPreferString && !hasReactElementValue) {\n        return message;\n      }\n\n      var nodes = message;\n\n      if (hasReactElementValue) {\n        nodes = message.split(tokenDelimiter).map(function (part) {\n          return get(valuesMap, part, part);\n        });\n      }\n\n      return React.createElement(React.Fragment, null, nodes);\n    }\n  }, {\n    key: \"formatHTMLMessage\",\n    value: function formatHTMLMessage(key, values) {\n      var _getExactOptionsForVa = getExactOptionsForVanillaFormat(key, values),\n          exactKey = _getExactOptionsForVa.exactKey,\n          exactDefaultMessage = _getExactOptionsForVa.exactDefaultMessage,\n          exactValues = _getExactOptionsForVa.exactValues;\n\n      var message = VanillaIntl.prototype.formatHTMLMessage.call(this, {\n        id: exactKey,\n        defaultMessage: exactDefaultMessage,\n        values: exactValues\n      });\n      var html = {\n        __html: message\n      };\n      return React.createElement(\"span\", {\n        dangerouslySetInnerHTML: html\n      });\n    }\n  }]);\n\n  return ReactIntl;\n}(IntlBase);\n\nexport default ReactIntl;\n\nfunction getExactOptionsForFormat(key, values, preferString) {\n  var exactId;\n  var exactDefaultMessage;\n  var exactValues = isPlainObject(values) ? values : {};\n  var exactPreferString;\n\n  if (isPlainObject(key)) {\n    var _ref = key,\n        id = _ref.id,\n        defaultMessage = _ref.defaultMessage,\n        vals = _ref.values;\n    exactId = id;\n    exactDefaultMessage = defaultMessage;\n\n    if (isPlainObject(vals)) {\n      exactValues = vals;\n    }\n  } else if (typeof key === 'string') {\n    exactId = key;\n  } else {\n    exactId = key.toString();\n    warning(false, \"[@ali/wind-intl] format key should be a string, but get \".concat(Object.prototype.toString.call(key), \". will use \\\"\").concat(exactId, \"\\\" as format key\"));\n  }\n\n  if (typeof values === 'boolean') {\n    exactPreferString = values;\n  } else {\n    exactPreferString = preferString !== false;\n  }\n\n  return {\n    exactId: exactId,\n    exactDefaultMessage: exactDefaultMessage,\n    exactValues: exactValues,\n    exactPreferString: exactPreferString\n  };\n}"],"sourceRoot":""}