(window.webpackJsonp=window.webpackJsonp||[]).push([[342],{ZOSG:function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return c})),t.d(n,"_demoSrcFiles",(function(){return p}));var a=t("mXGw"),l=t.n(a),o=t("BgHK");function r(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}var i=[{id:"001",time:1951,title:{name:"The Old Man and the Sea"}},{id:"002",time:1925,title:{name:"the great gatsby"}},{id:"003",time:1719,title:{name:"The adventures of Robinson Crusoe"}}],s=function(e){function n(n){var t;return(t=e.call(this,n)||this).onKeyDown=function(e){var n=e.keyCode;n>36&&n<41&&e.stopPropagation()},t.onBlur=function(e){t.setState({editable:!1,cellTitle:e.target.value})},t.onDblClick=function(){t.setState({editable:!0})},t.state={cellTitle:n.defaultTitle,editable:!1},t}r(n,e);var t=n.prototype;return t.componentWillReceiveProps=function(e){e.defaultTitle!==this.state.cellTitle&&this.setState({cellTitle:e.defaultTitle})},t.render=function(){var e=this.state,n=e.cellTitle;return e.editable?l.a.createElement(o.Input,{autoFocus:!0,defaultValue:n,onKeyDown:this.onKeyDown,onBlur:this.onBlur}):l.a.createElement("span",{onDoubleClick:this.onDblClick},n)},n}(l.a.Component),d=function(e){function n(n){var t;return(t=e.call(this,n)||this).renderCell=function(e,n,t){return l.a.createElement(s,{defaultTitle:e})},t.state={dataSource:i,id:""},t}return r(n,e),n.prototype.render=function(){return l.a.createElement("div",null,l.a.createElement(o.Table,{dataSource:this.state.dataSource},l.a.createElement(o.Table.Column,{title:"Id",dataIndex:"id"}),l.a.createElement(o.Table.Column,{title:"Title",dataIndex:"title.name",cell:this.renderCell}),l.a.createElement(o.Table.Column,{title:"Time",dataIndex:"time"})))},n}(l.a.Component);n.default=d;var c={zhName:"可编辑的表格",zhDesc:"单元格可编辑的表格"},p={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo24";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo24.js":"import React from 'react'\nimport { Table, Input } from '@alicloud/console-components'\n\nconst result = [\n  {\n    id: '001',\n    time: 1951,\n    title: { name: 'The Old Man and the Sea' },\n  },\n  {\n    id: '002',\n    time: 1925,\n    title: { name: 'the great gatsby' },\n  },\n  {\n    id: '003',\n    time: 1719,\n    title: { name: 'The adventures of Robinson Crusoe' },\n  },\n]\n\nclass EditablePane extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cellTitle: props.defaultTitle,\n      editable: false,\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.defaultTitle !== this.state.cellTitle) {\n      this.setState({\n        cellTitle: nextProps.defaultTitle,\n      })\n    }\n  }\n\n  onKeyDown = e => {\n    const { keyCode } = e\n    // Stop bubble up the events of keyUp, keyDown, keyLeft, and keyRight\n    if (keyCode > 36 && keyCode < 41) {\n      e.stopPropagation()\n    }\n  }\n\n  onBlur = e => {\n    this.setState({\n      editable: false,\n      cellTitle: e.target.value,\n    })\n  }\n\n  onDblClick = () => {\n    this.setState({\n      editable: true,\n    })\n  }\n\n  render() {\n    const { cellTitle, editable } = this.state\n    if (editable) {\n      return (\n        <Input\n          autoFocus\n          defaultValue={cellTitle}\n          onKeyDown={this.onKeyDown}\n          onBlur={this.onBlur}\n        />\n      )\n    }\n    return <span onDoubleClick={this.onDblClick}>{cellTitle}</span>\n  }\n}\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      dataSource: result,\n      id: '',\n    }\n  }\n\n  renderCell = (value, index, record) => {\n    return <EditablePane defaultTitle={value} />\n  }\n\n  render() {\n    return (\n      <div>\n        <Table dataSource={this.state.dataSource}>\n          <Table.Column title=\"Id\" dataIndex=\"id\" />\n          <Table.Column\n            title=\"Title\"\n            dataIndex=\"title.name\"\n            cell={this.renderCell}\n          />\n          <Table.Column title=\"Time\" dataIndex=\"time\" />\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default Demo\n\nexport const demoMeta = {\n  zhName: `可编辑的表格`,\n  zhDesc: `单元格可编辑的表格`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo24.js"}'}}}]);
//# sourceMappingURL=342-c3d616a0784d26dd30a5.js.map