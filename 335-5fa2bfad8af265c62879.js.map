{"version":3,"sources":["webpack:///../packages/component/src/components/table/demo/demo18.js"],"names":["Header","Table","Cell","dataSource","result","i","push","title","id","time","AppHeader","props","context","columns","onChange","length","colSpan","onClick","href","contextTypes","PropTypes","func","Demo18","state","selectedKeys","checked","map","item","onRowChange","setState","getChildContext","this","render","components","rowSelection","selectedRowKeys","Column","dataIndex","React","Component","childContextTypes","demoMeta","zhName","zhDesc","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"iSAKQA,EAAiBC,QAAjBD,OAAQE,EAASD,QAATC,KACVC,EAAa,WAEjB,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,EAAOE,KAAK,CACVC,MAAM,4BAA4B,EAAIF,GAAjC,2BACLG,GAAI,aAAeH,EACnBI,KAAM,IAAOJ,IAGjB,OAAOD,GAGHM,EAAY,SAACC,EAAOC,GAAa,IAC7BC,EAAYF,EAAZE,QACAC,EAAaF,EAAbE,SACAC,EAAWF,EAAQA,EAAQE,OAAS,GAApCA,OACR,OACE,kBAACf,EAAWW,EACV,4BACE,kBAACT,EAAD,CAAMc,QAASD,GACb,uBAAGE,QAAS,kBAAMH,GAAS,IAAOI,KAAK,gBAAvC,cADF,IAKE,uBAAGD,QAAS,kBAAMH,GAAS,IAAQI,KAAK,gBAAxC,oBASVR,EAAUS,aAAe,CACvBL,SAAUM,IAAUC,M,IAGDC,E,4JAKnBC,MAAQ,CACNC,aAAc,I,EAShBrB,WAAaA,I,EAEbW,SAAW,SAAAW,GACT,IAAID,EAAe,GACfC,IACFD,EAAe,EAAKrB,WAAWuB,KAAI,SAAAC,GAAI,OAAIA,EAAKnB,OAElD,EAAKoB,YAAYJ,I,EAGnBI,YAAc,SAAAJ,GACZ,EAAKK,SAAS,CACZL,kB,oHAlBJM,gBAAA,WACE,MAAO,CACLhB,SAAUiB,KAAKjB,W,EAoBnBkB,OAAA,WACE,OACE,8BACE,kBAAC,QAAD,CACE7B,WAAY4B,KAAK5B,WACjB8B,WAAY,CACVjC,OAAQU,GAEVwB,aAAc,CACZC,gBAAiBJ,KAAKR,MAAMC,aAC5BV,SAAUiB,KAAKH,cAGjB,kBAAC,QAAMQ,OAAP,CAAc7B,MAAM,KAAK8B,UAAU,OACnC,kBAAC,QAAMD,OAAP,CAAc7B,MAAM,QAAQ8B,UAAU,UACtC,kBAAC,QAAMD,OAAP,CAAc7B,MAAM,OAAO8B,UAAU,Y,GA9CXC,IAAMC,WAArBjB,EACZkB,kBAAoB,CACzB1B,SAAUM,IAAUC,MAmDjB,IAAMoB,EAAW,CACtBC,OAAO,KACPC,OAAO,qBAGMC,EAAgBC","file":"335-5fa2bfad8af265c62879.js","sourcesContent":["import React, { Component } from 'react'\nimport { Table } from '@alicloud/console-components'\nimport PropTypes from 'prop-types'\n\n/* eslint-disable react/no-multi-comp,react/prop-types */\nconst { Header, Cell } = Table\nconst dataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\n\nconst AppHeader = (props, context) => {\n  const { columns } = props\n  const { onChange } = context\n  const { length } = columns[columns.length - 1]\n  return (\n    <Header {...props}>\n      <tr>\n        <Cell colSpan={length}>\n          <a onClick={() => onChange(true)} href=\"javascript:;\">\n            Select all\n          </a>\n          &nbsp;\n          <a onClick={() => onChange(false)} href=\"javascript:;\">\n            Unselect all\n          </a>\n        </Cell>\n      </tr>\n    </Header>\n  )\n}\n\nAppHeader.contextTypes = {\n  onChange: PropTypes.func,\n}\n\nexport default class Demo18 extends React.Component {\n  static childContextTypes = {\n    onChange: PropTypes.func,\n  }\n\n  state = {\n    selectedKeys: [],\n  }\n\n  getChildContext() {\n    return {\n      onChange: this.onChange,\n    }\n  }\n\n  dataSource = dataSource()\n\n  onChange = checked => {\n    let selectedKeys = []\n    if (checked) {\n      selectedKeys = this.dataSource.map(item => item.id)\n    }\n    this.onRowChange(selectedKeys)\n  }\n\n  onRowChange = selectedKeys => {\n    this.setState({\n      selectedKeys,\n    })\n  }\n\n  render() {\n    return (\n      <span>\n        <Table\n          dataSource={this.dataSource}\n          components={{\n            Header: AppHeader,\n          }}\n          rowSelection={{\n            selectedRowKeys: this.state.selectedKeys,\n            onChange: this.onRowChange,\n          }}\n        >\n          <Table.Column title=\"Id\" dataIndex=\"id\" />\n          <Table.Column title=\"Title\" dataIndex=\"title\" />\n          <Table.Column title=\"Time\" dataIndex=\"time\" />\n        </Table>\n      </span>\n    )\n  }\n}\n\nexport const demoMeta = {\n  zhName: `扩展`,\n  zhDesc: `通过Table暴露的子组件进行扩展`,\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}