{"version":3,"sources":["webpack:///../packages/component/src/components/field/demo/demo6.js"],"names":["Demo","field","Field","onChange","name","value","console","log","setValue","length","props","dispatch","type","payload","componentWillReceiveProps","nextProps","this","setValues","email","newlen","setEmail","render","init","newLen","initValue","rules","required","message","onClick","bind","React","Component","ReduxDemo","connect","state","formReducer","store","createStore","combineReducers","action","demoMeta","zhName","zhDesc","Demo6","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"ooCAkBMA,E,4JAQJC,MAAQ,IAAIC,IAAJ,KAAgB,CACtBC,SAAU,SAACC,EAAMC,GAAW,IAAD,EACzBC,QAAQC,IAAI,WAAYH,EAAMC,GAC9B,EAAKJ,MAAMO,SAAS,SAAUH,EAAMI,QACpC,EAAKC,MAAMC,SAAS,CAClBC,KAAM,cACNC,SAAO,OACJT,GAAOC,EADH,Q,oHAbbS,0BAAA,SAA0BC,GACxBC,KAAKf,MAAMgB,UAAU,CACnBC,MAAOH,EAAUG,MACjBC,OAAQJ,EAAUG,MAAMT,U,EAiB5BW,SAAA,WACEJ,KAAKN,MAAMC,SAAS,CAClBC,KAAM,cACNC,QAAS,CACPK,MAAO,mB,EAKbG,OAAA,WAAU,IACAC,EAASN,KAAKf,MAAdqB,KACFC,EAASD,EAAK,SAAU,CAAEE,UAAWR,KAAKN,MAAMQ,MAAMT,SAE5D,OACE,6BACE,kBAAC,IACKa,EACF,QACA,CAAEE,UAAWR,KAAKN,MAAMQ,OACxB,CACEO,MAAO,CACL,CAAEC,UAAU,EAAMd,KAAM,QAASe,QAAS,wBAPpD,iBAYiBJ,EAAOlB,MACtB,qCAAWW,KAAKN,MAAMQ,OACtB,kBAAC,IAAD,CAAQU,QAASZ,KAAKI,SAASS,KAAKb,OAApC,S,GAjDWc,IAAMC,WAuDnBC,EAAYC,aAAQ,SAAAC,GACxB,MAAO,CACLhB,MAAOgB,EAAMC,YAAYjB,SAFXe,CAIfjC,GAEGoC,EAAQC,YACZC,YAAgB,CACdH,YA3EJ,SAAqBD,EAAuCK,GAC1D,YADkE,IAA/CL,MAAQ,CAAEhB,MAAO,qBAC5BqB,EAAO3B,MACb,IAAK,cACH,OAAO,EAAP,KACKsB,GACAK,EAAO1B,SAEd,QACE,OAAOqB,OA+EAM,EAAW,CACtBC,OAAO,YACPC,OAAO,mDAGMC,UAbD,kBACZ,kBAAC,IAAD,CAAUP,MAAOA,GACf,6BACE,kBAACJ,EAAD,SAYG,IAAMY,EAAgBC","file":"102-21a5355a3d60dcd3f7a1.js","sourcesContent":["import React from 'react'\nimport { Input, Button, Field } from '@alicloud/console-components'\n\nimport { combineReducers, createStore } from 'redux'\nimport { Provider, connect } from 'react-redux'\n\nfunction formReducer(state = { email: 'frankqian@qq.com' }, action) {\n  switch (action.type) {\n    case 'save_fields':\n      return {\n        ...state,\n        ...action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nclass Demo extends React.Component {\n  componentWillReceiveProps(nextProps) {\n    this.field.setValues({\n      email: nextProps.email,\n      newlen: nextProps.email.length,\n    })\n  }\n\n  field = new Field(this, {\n    onChange: (name, value) => {\n      console.log('onChange', name, value)\n      this.field.setValue('newlen', value.length)\n      this.props.dispatch({\n        type: 'save_fields',\n        payload: {\n          [name]: value,\n        },\n      })\n    },\n  })\n\n  setEmail() {\n    this.props.dispatch({\n      type: 'save_fields',\n      payload: {\n        email: 'qq@gmail.com',\n      },\n    })\n  }\n\n  render() {\n    const { init } = this.field\n    const newLen = init('newlen', { initValue: this.props.email.length })\n\n    return (\n      <div>\n        <Input\n          {...init(\n            'email',\n            { initValue: this.props.email },\n            {\n              rules: [\n                { required: true, type: 'email', message: 'at least 5 chars' },\n              ],\n            }\n          )}\n        />\n        now length is:{newLen.value}\n        <p>email: {this.props.email}</p>\n        <Button onClick={this.setEmail.bind(this)}>set</Button>\n      </div>\n    )\n  }\n}\n\nconst ReduxDemo = connect(state => {\n  return {\n    email: state.formReducer.email,\n  }\n})(Demo)\n\nconst store = createStore(\n  combineReducers({\n    formReducer,\n  })\n)\n\nconst Demo6 = () => (\n  <Provider store={store}>\n    <div>\n      <ReduxDemo />\n    </div>\n  </Provider>\n)\n\nexport const demoMeta = {\n  zhName: `redux 中使用`,\n  zhDesc: `在 \\`redux\\` 中使用, 在 \\`componentWillReceiveProps\\` 更新`,\n}\n\nexport default Demo6\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}