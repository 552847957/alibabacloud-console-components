{"version":3,"sources":["webpack:///../packages/component/src/components/select/demo/demo13.js"],"names":["AutoComplete","Select","SWrapper","styled","div","Demo13","useState","dataSource","setDataSource","searchTimeout","useRef","handleChange","useCallback","value","current","clearTimeout","setTimeout","fetchJsonp","then","response","json","data","newDataSource","result","map","item","label","type","size","originLabel","onChange","filterLocal","fillProps","placeholder","demoMeta","zhName","zhDesc","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"6FAAA,oKAKQA,EAAiBC,SAAjBD,aAEFE,EAAWC,UAAOC,IAAV,uEAAGD,CAAH,kHAoDCE,UAxCA,WAAO,IAAD,EACiBC,mBAAS,IAAtCC,EADY,KACAC,EADA,KAEbC,EAAgBC,iBAAO,MACvBC,EAAeC,uBAAY,SAAAC,GAC3BJ,EAAcK,SAChBC,aAAaN,EAAcK,SAE7BL,EAAcK,QAAUE,YAAW,WACjCC,IAAW,+CAA+CJ,GACvDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAgBD,EAAKE,OAAOC,KAAI,SAAAC,GACpC,MAAO,CACLC,MACE,6BACE,kBAAC,OAAD,CAAMC,KAAK,UAAUC,KAAK,UAD5B,IAESH,EAAK,IAGhBZ,MAAOY,EAAK,GACZI,YAAaJ,EAAK,OAGtBjB,EAAcc,QAEjB,OACF,IAEH,OACE,kBAACpB,EAAD,KACE,kBAACF,EAAD,CACE8B,SAAUnB,EACVoB,aAAa,EACbC,UAAU,cACVC,YAAY,qBACZ1B,WAAYA,MAOb,IAAM2B,EAAW,CACtBC,OAAO,OACPC,OAAO,eAGMC,EAAgBC","file":"236-a42b12862a0a7b108505.js","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\nimport { Select, Icon } from '@alicloud/console-components'\nimport fetchJsonp from 'fetch-jsonp'\nimport styled from 'styled-components'\n\nconst { AutoComplete } = Select\n\nconst SWrapper = styled.div`\n  background-color: #f8f8f8;\n  padding: 16px;\n  p {\n    margin-top: 0;\n  }\n  .next-select {\n    margin-right: 10px;\n    vertical-align: middle;\n  }\n`\n\nconst Demo13 = () => {\n  const [dataSource, setDataSource] = useState([])\n  const searchTimeout = useRef(null)\n  const handleChange = useCallback(value => {\n    if (searchTimeout.current) {\n      clearTimeout(searchTimeout.current)\n    }\n    searchTimeout.current = setTimeout(() => {\n      fetchJsonp(`https://suggest.taobao.com/sug?code=utf-8&q=${value}`)\n        .then(response => response.json())\n        .then(data => {\n          const newDataSource = data.result.map(item => {\n            return {\n              label: (\n                <div>\n                  <Icon type=\"picture\" size=\"small\" />\n                  &nbsp;{item[0]}\n                </div>\n              ),\n              value: item[1],\n              originLabel: item[0],\n            }\n          })\n          setDataSource(newDataSource)\n        })\n    }, 100)\n  }, [])\n\n  return (\n    <SWrapper>\n      <AutoComplete\n        onChange={handleChange}\n        filterLocal={false}\n        fillProps=\"originLabel\"\n        placeholder=\"search from taobao\"\n        dataSource={dataSource}\n      />\n    </SWrapper>\n  )\n}\nexport default Demo13\n\nexport const demoMeta = {\n  zhName: `图文展示`,\n  zhDesc: `展示较为复杂的内容展示`,\n}\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}