(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{"3hb7":function(n,e,t){"use strict";t.r(e),t.d(e,"demoMeta",(function(){return d})),t.d(e,"_demoSrcFiles",(function(){return u}));t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3"),t("1c7q");var o=t("mXGw"),a=t.n(o),l=t("BgHK"),r=t("UutA");function s(n){n.preventDefault()}var i=r.default.ul.withConfig({displayName:"demo15__SOverlayContent",componentId:"sc-1otk2qx-0"})(["border:1px solid #dddddd;padding:10px;background:#ffffff;margin:0;font-size:12px;font-family:Arial;box-shadow:2px 2px 20px rgba(0,0,0,0.15);> li{list-style:none;line-height:30px;padding:0 5px;cursor:pointer;}> li:hover{background:#f8f8f8;}> li:last-child{border-width:0;}"]),p=function(n){var e=[{label:"value1",value:1},{label:"value2",value:2}],t=n.className,o=function(n,e){if(null==n)return{};var t,o,a={},l=Object.keys(n);for(o=0;o<l.length;o++)t=l[o],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,["className"]);return a.a.createElement(i,Object.assign({className:t},o),e.map((function(e){return a.a.createElement("li",{key:e.value,onClick:function(){!function(e){n.onChange(e)}(e)}},e.label)})))},c=r.default.div.withConfig({displayName:"demo15__SWrapper",componentId:"sc-1otk2qx-1"})(["background-color:#f8f8f8;padding:16px;position:relative;p{margin-top:0;}"]);e.default=function(){var n=Object(o.useState)(null),e=n[0],t=n[1],r=Object(o.useState)(!1),i=r[0],d=r[1],u=Object(o.useCallback)((function(n){d(!1),t(n)}),[]),m=Object(o.useCallback)((function(n){d(n)}),[]),f=a.a.createElement(p,{onChange:u,onMouseDown:s});return a.a.createElement(c,null,a.a.createElement(l.Select,{placeholder:"custom popupContent",visible:i,onVisibleChange:m,value:e,popupContent:f,popupContainer:function(n){return n.parentNode}}))};var d={zhName:"弹层定制",zhDesc:"通过 popupContent 定制 Select 弹层， Select 使用 popupContent 中渲染出的 item 的 value 作为菜单项的key，如果没有提供或者自定义渲染 key 请使用 valueRender"},u={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo15";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo15.js":"import React, { useState, useCallback } from 'react'\nimport { Select } from '@alicloud/console-components'\nimport styled from 'styled-components'\n\nfunction preventDefault(e) {\n  e.preventDefault()\n}\n\nconst SOverlayContent = styled.ul`\n  border: 1px solid #dddddd;\n  padding: 10px;\n  background: #ffffff;\n  margin: 0;\n  font-size: 12px;\n  font-family: Arial;\n  box-shadow: 2px 2px 20px rgba(0, 0, 0, 0.15);\n  > li {\n    list-style: none;\n    line-height: 30px;\n    padding: 0 5px;\n    cursor: pointer;\n  }\n\n  > li:hover {\n    background: #f8f8f8;\n  }\n\n  > li:last-child {\n    border-width: 0;\n  }\n`\n\nconst Menu = props => {\n  const data = [\n    {\n      label: 'value1',\n      value: 1,\n    },\n    {\n      label: 'value2',\n      value: 2,\n    },\n  ]\n\n  const handleClick = item => {\n    props.onChange(item)\n  }\n\n  const renderItems = () =>\n    data.map(item => (\n      <li\n        key={item.value}\n        onClick={() => {\n          handleClick(item)\n        }}\n      >\n        {item.label}\n      </li>\n    ))\n\n  const { className, ...others } = props\n  return (\n    <SOverlayContent className={className} {...others}>\n      {renderItems()}\n    </SOverlayContent>\n  )\n}\n\nconst SWrapper = styled.div`\n  background-color: #f8f8f8;\n  padding: 16px;\n  position: relative;\n  p {\n    margin-top: 0;\n  }\n`\nconst Demo15 = () => {\n  const [value, setValue] = useState(null)\n  const [visible, setVisible] = useState(false)\n\n  const handleSelect = useCallback(val => {\n    setVisible(false)\n    setValue(val)\n  }, [])\n\n  const onVisibleChange = useCallback(vis => {\n    setVisible(vis)\n  }, [])\n\n  const popupContent = (\n    <Menu onChange={handleSelect} onMouseDown={preventDefault} />\n  )\n\n  return (\n    <SWrapper>\n      <Select\n        placeholder=\"custom popupContent\"\n        visible={visible}\n        onVisibleChange={onVisibleChange}\n        value={value}\n        popupContent={popupContent}\n        popupContainer={node => {\n          return node.parentNode\n        }}\n      />\n    </SWrapper>\n  )\n}\n\nexport default Demo15\n\nexport const demoMeta = {\n  zhName: `弹层定制`,\n  zhDesc: `通过 popupContent 定制 Select 弹层， Select 使用 popupContent 中渲染出的 item 的 value 作为菜单项的key，如果没有提供或者自定义渲染 key 请使用 valueRender`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo15.js"}'}}}]);
//# sourceMappingURL=268-d208580293246f9eeb43.js.map