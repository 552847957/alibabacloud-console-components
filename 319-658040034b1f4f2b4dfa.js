(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{aeO1:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return p})),t.d(n,"demoMeta",(function(){return u})),t.d(n,"_demoSrcFiles",(function(){return h}));t("U8p0");var o=t("mXGw"),a=t.n(o),r=t("BgHK");function d(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}var i=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={dataSource:t.props.dataSource},t}d(n,e);var t=n.prototype;return t.load=function(){var e=this.state.dataSource;e=e.concat(e),this.setState({dataSource:e})},t.render=function(){return a.a.createElement("div",{style:{margin:"14px 26px"}},a.a.createElement(r.Table,{dataSource:this.state.dataSource,hasHeader:!1,hasBorder:!1},a.a.createElement(r.Table.Column,{title:"Title",dataIndex:"title"}),a.a.createElement(r.Table.Column,{title:"Time",dataIndex:"time",width:200})),a.a.createElement("p",{style:{borderTop:"1px solid #eee",textAlign:"center",background:"#f8f8f8",lineHeight:"28px"},onClick:this.load.bind(this)},this.props.index,": Load more data."," "))},n}(a.a.Component),s=function(){for(var e=[],n=0;n<5;n++)e.push({title:"Quotation for 1PCS Nano "+(3+n)+".0 controller compatible",id:100306660940+n,time:2e3+n,children:[{title:"Sub title for Quotation "+(3+n),time:2e3+n},{title:"Sub2 title for Quotation "+(3+n),time:2e3+n}]});return e},l=function(e,n,t){return a.a.createElement("a",null,"Remove(",t.id,")")},c=function(e,n){var t=e.children;return a.a.createElement(i,{dataSource:t,index:n})},p=function(e){function n(n){var t;return(t=e.call(this,n)||this).state={dataSource:s(),hasBorder:!1,openRowKeys:[]},t}d(n,e);var t=n.prototype;return t.onSort=function(e,n){var t=this.state.dataSource.sort((function(t,o){var a=t[e]-o[e];return"asc"===n?a>0?1:-1:a>0?-1:1}));this.setState({dataSource:t})},t.disabledExpandedCol=function(){this.setState({getExpandedColProps:function(e,n){if(console.log(n),3===n)return{disabled:!0}}})},t.toggleCol=function(){this.setState({hasExpandedRowCtrl:!1})},t.onRowOpen=function(e){this.setState({openRowKeys:e})},t.toggleExpand=function(e){var n=e.id,t=this.state.openRowKeys,o=t.indexOf(n);o>-1?t.splice(o,1):t.push(n),this.setState({openRowKeys:t})},t.rowProps=function(e,n){return console.log("rowProps",e,n),{className:"next-myclass-"+n}},t.onExpandedRowClick=function(e,n){console.log("onExpandedRowClick",e,n)},t.render=function(){var e=this;return a.a.createElement("span",null,a.a.createElement("p",null," ",a.a.createElement(r.Button,{onClick:this.disabledExpandedCol.bind(this)}," ","disable fourth row"," ")," "," ",a.a.createElement(r.Button,{onClick:this.toggleCol.bind(this)}," hide + ")),a.a.createElement(r.Table,{dataSource:this.state.dataSource,expandedIndexSimulate:!0,isZebra:this.state.isZebra,hasBorder:this.state.hasBorder,onSort:this.onSort.bind(this),expandedRowRender:c,expandedRowIndent:[0,0],openRowKeys:this.state.openRowKeys,getExpandedColProps:this.state.getExpandedColProps,hasExpandedRowCtrl:this.state.hasExpandedRowCtrl,onRowOpen:this.onRowOpen.bind(this),rowProps:this.rowProps.bind(this),onExpandedRowClick:this.onExpandedRowClick.bind(this)},a.a.createElement(r.Table.Column,{title:"Id",dataIndex:"id",sortable:!0}),a.a.createElement(r.Table.Column,{title:"Title",dataIndex:"title",cell:function(n,t,o){return a.a.createElement("div",null,n,a.a.createElement("span",{onClick:e.toggleExpand.bind(e,o)},"index:",t," +++++"))}}),a.a.createElement(r.Table.Column,{title:"Time",dataIndex:"time",width:200}),a.a.createElement(r.Table.Column,{cell:l,width:200})))},n}(a.a.Component),u={zhName:"可展开-复杂",zhDesc:"可以通过 `expandedRowRender` 额外渲染行，但是会包含复杂的组件, 可通过 `expandedIndexSimulate` 设置 index 类型"},h={"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo8";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo8.js":"import React, { Component } from 'react'\nimport { Table, Button } from '@alicloud/console-components'\n\nclass ExpandedApp extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSource: this.props.dataSource,\n    }\n  }\n\n  load() {\n    let { dataSource } = this.state\n    dataSource = dataSource.concat(dataSource)\n    this.setState({ dataSource })\n  }\n\n  render() {\n    const style = {\n      borderTop: '1px solid #eee',\n      textAlign: 'center',\n      background: '#f8f8f8',\n      lineHeight: '28px',\n    }\n    return (\n      <div style={{ margin: '14px 26px' }}>\n        <Table\n          dataSource={this.state.dataSource}\n          hasHeader={false}\n          hasBorder={false}\n        >\n          <Table.Column title=\"Title\" dataIndex=\"title\" />\n          <Table.Column title=\"Time\" dataIndex=\"time\" width={200} />\n        </Table>\n        <p style={style} onClick={this.load.bind(this)}>\n          {this.props.index}: Load more data.{' '}\n        </p>\n      </div>\n    )\n  }\n}\n\nconst dataSource = () => {\n  const result = []\n  for (let i = 0; i < 5; i++) {\n    result.push({\n      title: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      id: 100306660940 + i,\n      time: 2000 + i,\n      children: [\n        {\n          title: `Sub title for Quotation ${3 + i}`,\n          time: 2000 + i,\n        },\n        {\n          title: `Sub2 title for Quotation ${3 + i}`,\n          time: 2000 + i,\n        },\n      ],\n    })\n  }\n  return result\n}\nconst render = (value, index, record) => {\n  return <a>Remove({record.id})</a>\n}\nconst expandedRowRender = (record, index) => {\n  const { children } = record\n  return <ExpandedApp dataSource={children} index={index} />\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSource: dataSource(),\n      hasBorder: false,\n      openRowKeys: [],\n    }\n  }\n\n  onSort(dataIndex, order) {\n    const dataSource = this.state.dataSource.sort(function(a, b) {\n      const result = a[dataIndex] - b[dataIndex]\n      return order === 'asc' ? (result > 0 ? 1 : -1) : result > 0 ? -1 : 1\n    })\n    this.setState({\n      dataSource,\n    })\n  }\n\n  disabledExpandedCol() {\n    this.setState({\n      getExpandedColProps: (record, index) => {\n        console.log(index)\n        if (index === 3) {\n          return {\n            disabled: true,\n          }\n        }\n      },\n    })\n  }\n\n  toggleCol() {\n    this.setState({\n      hasExpandedRowCtrl: false,\n    })\n  }\n\n  onRowOpen(openRowKeys) {\n    this.setState({ openRowKeys })\n  }\n\n  toggleExpand(record) {\n    const key = record.id\n    const { openRowKeys } = this.state\n    const index = openRowKeys.indexOf(key)\n    if (index > -1) {\n      openRowKeys.splice(index, 1)\n    } else {\n      openRowKeys.push(key)\n    }\n    this.setState({\n      openRowKeys,\n    })\n  }\n\n  rowProps(record, index) {\n    console.log('rowProps', record, index)\n    return { className: `next-myclass-${index}` }\n  }\n\n  onExpandedRowClick(record, index) {\n    console.log('onExpandedRowClick', record, index)\n  }\n\n  render() {\n    const renderTitle = (value, index, record) => {\n      return (\n        <div>\n          {value}\n          <span onClick={this.toggleExpand.bind(this, record)}>\n            index:{index} +++++\n          </span>\n        </div>\n      )\n    }\n    return (\n      <span>\n        <p>\n          {' '}\n          <Button onClick={this.disabledExpandedCol.bind(this)}>\n            {' '}\n            disable fourth row{' '}\n          </Button>{' '}\n          &nbsp;\n          <Button onClick={this.toggleCol.bind(this)}> hide + </Button>\n        </p>\n        <Table\n          dataSource={this.state.dataSource}\n          expandedIndexSimulate\n          isZebra={this.state.isZebra}\n          hasBorder={this.state.hasBorder}\n          onSort={this.onSort.bind(this)}\n          expandedRowRender={expandedRowRender}\n          expandedRowIndent={[0, 0]}\n          openRowKeys={this.state.openRowKeys}\n          getExpandedColProps={this.state.getExpandedColProps}\n          hasExpandedRowCtrl={this.state.hasExpandedRowCtrl}\n          onRowOpen={this.onRowOpen.bind(this)}\n          rowProps={this.rowProps.bind(this)}\n          onExpandedRowClick={this.onExpandedRowClick.bind(this)}\n        >\n          <Table.Column title=\"Id\" dataIndex=\"id\" sortable />\n          <Table.Column title=\"Title\" dataIndex=\"title\" cell={renderTitle} />\n          <Table.Column title=\"Time\" dataIndex=\"time\" width={200} />\n          <Table.Column cell={render} width={200} />\n        </Table>\n      </span>\n    )\n  }\n}\n\nexport const demoMeta = {\n  zhName: `可展开-复杂`,\n  zhDesc:\n    '可以通过 `expandedRowRender` 额外渲染行，但是会包含复杂的组件, 可通过 `expandedIndexSimulate` 设置 index 类型',\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo8.js"}'}}}]);
//# sourceMappingURL=319-658040034b1f4f2b4dfa.js.map