{"version":3,"sources":["webpack:///../packages/rc-console-menu/stories/with-items-declaration.tsx"],"names":["renderLinkItem","key","label","to","items","render","navProps","className","icon","href","target","rel","disabled","Example","location","history","activeKey","pathname","mapLocationToActiveKey","style","marginBottom","width","defaultValue","onPressEnter","e","push","value","header","_demoSrcFiles","__demo_loader_placeholder__"],"mappings":"4FAAA,8HAOMA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OACrB,kBAAC,OAAD,CAAMC,GAAIF,GAAMC,IAGZE,EAA2B,CAE/B,CACEH,IAAK,QACLC,MAAO,KACPG,OAAQL,EACRM,SAAU,CAERC,UAAW,qBACXC,KAAM,QAEN,sBAAuB,YAK3B,CAAEP,IAAK,YAAaC,MAAO,KAAMG,OAAQL,GAGzC,CACEC,IAAK,QACLC,MAAO,KACPE,MAAO,CACL,CAAEH,IAAK,SAAUC,MAAO,OAAQG,OAAQL,GACxC,CAAEC,IAAK,OAAQC,MAAO,OAAQG,OAAQL,GACtC,CAAEC,IAAK,QAASC,MAAO,OAAQG,OAAQL,IAEzCM,SAAU,CAERC,UAAW,yBACXC,KAAM,QAEN,sBAAuB,YAK3B,CACEP,IAAK,UACLC,MAAO,KACPE,MAAO,CACL,CACEH,IAAK,QACLC,MAAO,KACPG,OAAQ,cAAGJ,IAAH,IAAQC,EAAR,EAAQA,MAAR,OACN,uBACEO,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAEHT,KAIP,CACED,IAAK,QACLC,MAAO,KACPU,UAAU,EACVP,OAAQ,cAAGJ,IAAH,IAAQC,EAAR,EAAQA,MAAR,OACN,uBACEO,KAAK,0BACLC,OAAO,SACPC,IAAI,uBAEHT,QA2DEW,UApCC,WACd,OACE,kBAAC,yBAAD,KACE,kBAAC,QAAD,MACG,YAA2B,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACNC,EAhBe,SAACF,GAC9B,OAAKA,GAAaA,EAASG,UAAkC,MAAtBH,EAASG,SAIzCH,EAASG,SAHP,QAciBC,CAAuBJ,GAEzC,OACE,kBAAC,WAAD,KACE,yBAAKK,MAAO,CAAEC,aAAc,IAC1B,kBAAC,QAAD,CACEnB,IAAKa,EAASG,SACdE,MAAO,CAAEE,MAAO,QAChBC,aAAcR,EAASG,SACvBM,aACG,SAACC,GACAT,EAAQU,KAAKD,EAAEd,OAAOgB,WAK9B,6BACE,kBAAC,UAAD,CACEC,OAAO,SACPvB,MAAOA,EACPY,UAAWA,WAapB,IAAMY,EAAgBC","file":"36-5df4f370e02d2abfc63a.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Link, Route } from 'dva/router'\nimport { Location } from 'history'\nimport ConsoleMenu, { IItemDescriptor } from '@alicloud/console-components-console-menu'\nimport { Input } from '@alicloud/console-components'\nimport { FakeBrowserWithWrapper as FakeBrowser } from '@alicloud/console-components-fake-browser'\n\nconst renderLinkItem = ({ key, label }: IItemDescriptor) => (\n  <Link to={key}>{label}</Link>\n)\n\nconst items: IItemDescriptor[] = [\n  // Defination with label\n  {\n    key: '/home',\n    label: '首页',\n    render: renderLinkItem,\n    navProps: {\n      // 透传给Nav.Item组件的props\n      className: 'test-nav-item-pros',\n      icon: 'smile',\n      // Nav.Item组件不认识的pros，会被它透传到`<li>`DOM节点上\n      'custom-dom-property': '8237461',\n    },\n  },\n\n  // Defination with custom render\n  { key: '/instance', label: '实例', render: renderLinkItem },\n\n  // Defination as a sub menu\n  {\n    key: '/logs',\n    label: '日志',\n    items: [\n      { key: '/daily', label: '日常环境', render: renderLinkItem },\n      { key: '/pre', label: '预发环境', render: renderLinkItem },\n      { key: '/prod', label: '生产环境', render: renderLinkItem },\n    ],\n    navProps: {\n      // 透传给Nav.SubNav组件的props\n      className: 'test-nav-sub-menu-pros',\n      icon: 'smile',\n      // Nav.SubNav组件不认识的pros，会被它透传到`<li>`DOM节点上\n      'custom-dom-property': '8237461',\n    },\n  },\n\n  // Another sub menu\n  {\n    key: '/others',\n    label: '其他',\n    items: [\n      {\n        key: '/help',\n        label: '帮助',\n        render: ({ key, label }) => (\n          <a\n            href=\"https://help.aliyun.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {label}\n          </a>\n        ),\n      },\n      {\n        key: '/docs',\n        label: '文档',\n        disabled: true,\n        render: ({ key, label }) => (\n          <a\n            href=\"https://docs.aliyun.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {label}\n          </a>\n        ),\n      },\n    ],\n  },\n]\n\n/**\n * 将当前的 location 映射为被选中的 key\n * @param {Location} location\n */\nconst mapLocationToActiveKey = (location: Location) => {\n  if (!location || !location.pathname || location.pathname === '/') {\n    return '/home'\n  }\n\n  return location.pathname\n}\n\n/**\n * 使用 items 声明结构化的导航菜单\n */\nconst Example = () => {\n  return (\n    <FakeBrowser>\n      <Route>\n        {({ location, history }) => {\n          const activeKey = mapLocationToActiveKey(location)\n\n          return (\n            <Fragment>\n              <div style={{ marginBottom: 8 }}>\n                <Input\n                  key={location.pathname}\n                  style={{ width: '100%' }}\n                  defaultValue={location.pathname}\n                  onPressEnter={\n                    ((e: any) => {\n                      history.push(e.target.value)\n                    }) as any\n                  }\n                />\n              </div>\n              <div>\n                <ConsoleMenu\n                  header=\"阿里云控制台\"\n                  items={items}\n                  activeKey={activeKey}\n                />\n              </div>\n            </Fragment>\n          )\n        }}\n      </Route>\n    </FakeBrowser>\n  )\n}\n\nexport default Example\n;\n  export const _demoSrcFiles = __demo_loader_placeholder__"],"sourceRoot":""}