(window.webpackJsonp=window.webpackJsonp||[]).push([[164],{AilZ:function(n,e,t){"use strict";t.r(e),t.d(e,"default",(function(){return p})),t.d(e,"_demoSrcFiles",(function(){return h}));t("1c7q"),t("abGl"),t("gZHo"),t("Fdmb"),t("Ir+3");var o=t("mXGw"),i=t.n(o),r=t("xARA"),s=t.n(r),d=t("BgHK");t("bcuX");var c=d.Grid.Row,a=d.Grid.Col,l=[{xs:12,s:8,m:6},{xs:6,s:8,m:6},{xs:6,s:8,m:12}],m={xs:480,s:720,m:990},p=function(n){var e,t;function o(){return n.apply(this,arguments)||this}t=n,(e=o).prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t;var r=o.prototype;return r.componentDidMount=function(){for(var n=s.a.findDOMNode(this.refs.row),e=[],t=0;t<n.children.length;t++)e.push(n.children[t]);this.handleResize=function(){for(var n="",t=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,o=Object.keys(m),i=0;i<o.length;i++){var r=m[o[i]],s=m[o[i+1]];if(t>r&&(t<s||!s)){n=o[i];break}}n&&e.forEach((function(e,t){e.innerHTML="col-"+l[t][n]}))},window.addEventListener("resize",this.handleResize),this.handleResize()},r.componentWillUnmount=function(){window.removeEventListener("resize",this.handleResize)},r.render=function(){return i.a.createElement("div",{className:"breakpoint-demo"},i.a.createElement("div",{className:"demo-title"},"Resize browser to see how each column changes"),i.a.createElement(c,{ref:"row"},l.map((function(n,e){return i.a.createElement(a,Object.assign({key:e},n))}))))},o}(i.a.Component),h={".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo6";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo6.less":".breakpoint-demo .demo-title {\n    margin-left: 20px;\n}\n\n.breakpoint-demo .next-row {\n    margin: 10px 0;\n}\n\n.breakpoint-demo .next-col {\n    border:1px solid #CCC;\n    border-radius: 3px;\n    background-color:#ECECEC;\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n}","src/demo/demo6.js":"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Grid } from '@alicloud/console-components'\nimport './demo6.less'\n\nconst { Row, Col } = Grid\nconst spans = [\n  { xs: 12, s: 8, m: 6 },\n  { xs: 6, s: 8, m: 6 },\n  { xs: 6, s: 8, m: 12 }\n]\n\nconst breakpoints = {\n  xs: 480,\n  s: 720,\n  m: 990\n}\n\nexport default class Demo6 extends React.Component {\n  componentDidMount() {\n    const row = ReactDOM.findDOMNode(this.refs.row)\n    const cols = []\n    for (let i = 0; i < row.children.length; i++) {\n      cols.push(row.children[i])\n    }\n\n    this.handleResize = () => {\n      let point = ''\n      const innerWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\n      const keys = Object.keys(breakpoints);\n      for (let i = 0; i < keys.length; i++) {\n        const width = breakpoints[keys[i]]\n        const nextWidth = breakpoints[keys[i + 1]]\n        if (innerWidth > width && (innerWidth < nextWidth || !nextWidth)) {\n          point = keys[i]\n          break\n        }\n      }\n\n      if (point) {\n        cols.forEach((col, index) => {\n          col.innerHTML = `col-${spans[index][point]}`\n        })\n      }\n    }\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  render() {\n    return (\n      <div className=\"breakpoint-demo\">\n        <div className=\"demo-title\">Resize browser to see how each column changes</div>\n        <Row ref=\"row\">\n          {spans.map((span, index) => (\n            <Col key={index} {...span} />\n          ))}\n        </Row>\n      </div>\n    )\n  }\n}\n\n","demoMeta.json":'{"entryPath":"src/demo/demo6.js"}'}}}]);
//# sourceMappingURL=164-09ff37c7f74365342378.js.map