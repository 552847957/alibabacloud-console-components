(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{r9bR:function(e,n,t){"use strict";t.r(n),t.d(n,"demoMeta",(function(){return l})),t.d(n,"_demoSrcFiles",(function(){return i}));var a=t("mXGw"),o=t.n(a),c=t("BgHK"),r=function(e){for(var n=[],t=0;t<e;t++)n.push({title:{name:"Quotation for 1PCS Nano "+(3+t)+".0 controller compatible"},id:100306660940+t,time:2e3+t});return n};n.default=function(){var e=Object(a.useState)(!1),n=e[0],t=e[1],l=Object(a.useState)(!1),i=l[0],s=l[1],d=Object(a.useState)(r(50)),m=d[0],u=d[1],p=function(e){switch(e){case"sticky":t(!0);break;case"lock":s(!0);break;case"dataSource":u(m.length>0?[]:r(50))}};return o.a.createElement("div",null,o.a.createElement("p",null,o.a.createElement(c.Button,{onClick:function(){return p("sticky")}},"enable sticky"),"  ",o.a.createElement(c.Button,{onClick:function(){return p("lock")}},"enable lock"),"  ",o.a.createElement(c.Button,{onClick:function(){return p("dataSource")}},"toggle dataSource")),o.a.createElement(c.Table,{dataSource:m,fixedHeader:!0,stickyHeader:n},o.a.createElement(c.Table.Column,{title:"Id",dataIndex:"id",width:200,lock:i}),o.a.createElement(c.Table.Column,{title:"Title",dataIndex:"title.name",width:200}),o.a.createElement(c.Table.Column,{title:"Time",dataIndex:"time",width:200})))};var l={zhName:"固定表头",zhDesc:"表格可以固定表头,支持sticky方式"},i={"package.json":'{\n  "name": "parcel-sandbox",\n  "version": "1.0.0",\n  "description": "Simple Parcel Sandbox",\n  "main": "index.html",\n  "scripts": {\n    "start": "parcel index.html --open",\n    "build": "parcel build index.html"\n  },\n  "dependencies": {\n    "react": "16.8.6",\n    "react-dom": "16.8.6",\n    "@alicloud/console-components": "latest",\n    "styled-components": "^4.2.0",\n    "moment": "^2.21.0",\n    "react-copy-to-clipboard": "^5.0.1",\n    "react-dnd": "^8.0.0",\n    "react-dnd-html5-backend": "^8.0.0"\n  },\n  "devDependencies": {\n    "@babel/core": "7.2.0",\n    "parcel-bundler": "^1.6.1",\n    "typescript": "^3.7.2",\n    "@types/styled-components": "^4.1.8",\n    "@types/react": "16.8.8",\n    "@types/react-dom": "16.8.2"\n  }\n}\n',"sandbox.config.json":'{\n  "infiniteLoopProtection": true,\n  "hardReloadOnChange": false,\n  "view": "browser"\n}',"index.html":'<!DOCTYPE html>\n<html>\n  <head>\n    <title>Parcel Sandbox</title>\n    <meta charset="UTF-8" />\n  </head>\n\n  <body>\n    <div id="app"></div>\n\n    <script src="src/index.jsx"><\/script>\n  </body>\n</html>\n',".babelrc":'{\n  "presets": ["env"],\n  "plugins": [\n    "transform-runtime",\n    [\n      "transform-react-jsx",\n      {\n        "pragma": "React.createElement"\n      }\n    ],\n    "@babel/plugin-proposal-class-properties"\n  ],\n  "parserOpts": {\n    "plugins": ["dynamicImport"]\n  }\n}\n',"src/index.jsx":'import * as React from "react";\nimport { render } from "react-dom";\nimport "@alicloud/console-components/dist/wind.css";\nimport App from "./demo/demo10";\nimport "./styles.less";\n\nconst rootElement = document.getElementById("app");\nrender(<App />, rootElement);\n',"src/styles.less":"","src/demo/demo10.js":"import React, { useState } from 'react'\nimport { Table, Button } from '@alicloud/console-components'\n\nconst generateDataSource = length => {\n  const result = []\n  for (let i = 0; i < length; i++) {\n    result.push({\n      title: {\n        name: `Quotation for 1PCS Nano ${3 + i}.0 controller compatible`,\n      },\n      id: 100306660940 + i,\n      time: 2000 + i,\n    })\n  }\n  return result\n}\n\nconst Demo10 = () => {\n  const [sticky, setSticky] = useState(false)\n\n  const [lock, setLock] = useState(false)\n\n  const [dataSource, setDataSource] = useState(generateDataSource(50))\n\n  const onSwitch = tag => {\n    switch (tag) {\n      case 'sticky':\n        setSticky(true)\n        break\n      case 'lock':\n        setLock(true)\n        break\n      case 'dataSource':\n        setDataSource(dataSource.length > 0 ? [] : generateDataSource(50))\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <div>\n      <p>\n        <Button onClick={() => onSwitch('sticky')}>enable sticky</Button> &nbsp;\n        <Button onClick={() => onSwitch('lock')}>enable lock</Button> &nbsp;\n        <Button onClick={() => onSwitch('dataSource')}>\n          toggle dataSource\n        </Button>\n      </p>\n      <Table dataSource={dataSource} fixedHeader stickyHeader={sticky}>\n        <Table.Column title=\"Id\" dataIndex=\"id\" width={200} lock={lock} />\n        <Table.Column title=\"Title\" dataIndex=\"title.name\" width={200} />\n        <Table.Column title=\"Time\" dataIndex=\"time\" width={200} />\n      </Table>\n    </div>\n  )\n}\n\nexport default Demo10\n\nexport const demoMeta = {\n  zhName: `固定表头`,\n  zhDesc: `表格可以固定表头,支持sticky方式`,\n}\n","demoMeta.json":'{"entryPath":"src/demo/demo10.js"}'}}}]);
//# sourceMappingURL=299-1857ba9b0510241bbd10.js.map